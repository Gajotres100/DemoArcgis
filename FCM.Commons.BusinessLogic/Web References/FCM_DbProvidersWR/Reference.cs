//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace FCM.Commons.BusinessLogic.FCM_DbProvidersWR {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DbProvidersSoap", Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class DbProviders : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SaveServiceOrderItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServiceOrderItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServiceOrderItemDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServiceOrderExpensesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteServiceOrderItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteItemsByExpenseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServiceOrderByFilterListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServiceOrderByFilterCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteServiceOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveServiceOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback LockServiceOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVehicleAndTimeCollisionForServiceOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServiceOrderPdfOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServiceOrderByItemCreationDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDivisionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllDivisionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSectorOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllSectorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCardTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllCardTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCardByCardNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHistoryByVehicleIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCardByFilterListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCardByFilterCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback AssignCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback FilterCardsForAutoCompleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHistoryByFilterListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHistoryByFilterCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHistoryCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCardReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVehicleNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartReportProcessOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReservationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReservationByReservationIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReservationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FilterReservationForAutoCompleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReservationsByFilterListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReservationsByFilterCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback FilterReservationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveReservationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmployeeIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReservationIdByAssignedVehicleIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRelationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllRelationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveRelationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRelationsByFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRelationsByFilterListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRelationsByFilterCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback FilterRelationsForAutoCompleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteRelationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRelationLocationsByFilterListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRelationLocationsByFilterCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRelationLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRelationLocationByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveRelationLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteRelationLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveWageMarkersOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateWageMarkersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRelationLocationInstancesByPrlIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveRelationLocationInstanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadFileDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsUploadedFileDataValidOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProcessUploadedFileProgressOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProcessingLogDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadedFileErrorCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProcessUploadedFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback SavePRLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPRLByPrlIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllPRLsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPRLByFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPrlByFilterListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPRLByFilterCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePRLOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPRLByPrlIdWithStatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVehicleAndTimeCollisionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVehicleAndTimeCollisionForUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllLocationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLocationsByFilterListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLocationsByFilterCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FilterLocationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRegistrationsThatExpireListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRegistrationsThatExpireCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVehiclesForWriteOffListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVehiclesForWriteOffCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVehiclesForServiceListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVehiclesForServiceCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUserToVehicleGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveUserFromVehicleGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFuelConsumptionForReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServiceOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVehicleTiresByFilterCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVehicleTireDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveVehicleTireOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteVehicleTireOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVehicleTireReplacementCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllOrganizationalUnitsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllOrganizationUnitsForCustomControlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllDriversforOUOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllVehiclesforOUOperationCompleted;
        
        private System.Threading.SendOrPostCallback MoveDrivertoOUOperationCompleted;
        
        private System.Threading.SendOrPostCallback MoveVehicletoOUOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertOUOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOUOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteOUOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOURightsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllOUAccessRightsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExpenseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExpensesByUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback LockExpenseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExpensesForReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExpensesByFilterListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExpensesByFilterCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExpensesByFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExpensesByUserIdAndVehicleFkOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExpensesByUserIdAndExpCatCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteExpenseOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveExpenseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExpensesByUserIdAndPrlIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPrlForExpenseDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExpenseGeneratorOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExpenseGeneratorsByUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExpenseGeneratorsByFilterListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExpenseGeneratorsByFilterCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllShownExpenseGeneratorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteExpenseGeneratorOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveExpenseGeneratorOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExpenseCustdefFieldOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExpenseCustdefFieldsByUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExpenseCustdefFieldsByUserIdAndExpCatCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteExpenseCustdefFieldOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveExpenseCustdefFieldOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExpCatalogValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllExpCatalogValuesByUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllExpCatalogValuesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllExpCatalogValuesByControlIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllExpCatalogValuesByFieldNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteExpValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback CanDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveExpValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExpCatalogOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllExpCatalogsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExpenseCatalogByFilterListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExpenseCatalogByFilterCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback FilterExpCatalogsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FilterExpCatalogByFieldNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveExpCatalogOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReportGetSumByExpensesTypesOnVehicleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPRLCountAndExpensesTotalReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPRLCountAndExpensesVehicleGroupReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPRLCountAndExpensesVehicleReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPRLCountAndExpensesDriverReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPRLCountAndExpensesAreaReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTollReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReportFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChildUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChildUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetParentAndHisChildUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAuthorizedUsersForVehicleGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback SynchronizeChildUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback SynchronizeUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback FilterUsersForAutoCompleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserMailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserRightsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllUsersWithRightsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FilterUsersWithRightsOperationCompleted;
        
        private System.Threading.SendOrPostCallback HasRightOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveUserRightsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCompanyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllCompaniesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCompaniesByUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCompanyByFilterCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCompanyByFilterListOperationCompleted;
        
        private System.Threading.SendOrPostCallback FilterCompaniesForAutoCompleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCompanyOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveCompanyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDamagesByFilterListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDamagesByFilterCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExpenseDamagesByFilterListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExpenseDamagesByFilterCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDamagedVehiclesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDamagedVehiclesFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDamagesByVehicleIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDamagesByExpenseIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback FilterDamagesByVehicleIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDamageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDamageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNextDamageNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveDamageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDamagedVehiclesForReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDamagedVehiclesForExcelReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDriverOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDriverByDesignationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDriversByUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDriversByFilterListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDriversByFilterCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback FilterDriversOperationCompleted;
        
        private System.Threading.SendOrPostCallback FilterDriversForAutoCompleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDriverOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveDriverOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVehicleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVehiclesByUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVehiclesByReservationIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllAssignedVehiclesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVehicleListByFilterListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVehicleListByFilterCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback FilterVehiclesForAutoCompleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVehiclesByFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVehiclesByFilterCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVehiclesByFilterListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllVehiclesByOrganizationalUnitOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllVehiclesByOrganizationalUnitForCustomControlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUngroupedVehiclesByUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteVehicleOperationCompleted;
        
        private System.Threading.SendOrPostCallback HasVehicleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMaxVehicleIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveVehicleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVehicleTiresByFilterListOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public DbProviders() {
            this.Url = global::FCM.Commons.BusinessLogic.Properties.Settings.Default.FCM_Commons_BusinessLogic_FCM_DbProvidersWR_DbProviders;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SaveServiceOrderItemCompletedEventHandler SaveServiceOrderItemCompleted;
        
        /// <remarks/>
        public event GetServiceOrderItemsCompletedEventHandler GetServiceOrderItemsCompleted;
        
        /// <remarks/>
        public event GetServiceOrderItemDetailsCompletedEventHandler GetServiceOrderItemDetailsCompleted;
        
        /// <remarks/>
        public event GetServiceOrderExpensesCompletedEventHandler GetServiceOrderExpensesCompleted;
        
        /// <remarks/>
        public event DeleteServiceOrderItemCompletedEventHandler DeleteServiceOrderItemCompleted;
        
        /// <remarks/>
        public event DeleteItemsByExpenseCompletedEventHandler DeleteItemsByExpenseCompleted;
        
        /// <remarks/>
        public event GetServiceOrderByFilterListCompletedEventHandler GetServiceOrderByFilterListCompleted;
        
        /// <remarks/>
        public event GetServiceOrderByFilterCountCompletedEventHandler GetServiceOrderByFilterCountCompleted;
        
        /// <remarks/>
        public event DeleteServiceOrderCompletedEventHandler DeleteServiceOrderCompleted;
        
        /// <remarks/>
        public event SaveServiceOrderCompletedEventHandler SaveServiceOrderCompleted;
        
        /// <remarks/>
        public event LockServiceOrderCompletedEventHandler LockServiceOrderCompleted;
        
        /// <remarks/>
        public event GetVehicleAndTimeCollisionForServiceOrderCompletedEventHandler GetVehicleAndTimeCollisionForServiceOrderCompleted;
        
        /// <remarks/>
        public event GetServiceOrderPdfCompletedEventHandler GetServiceOrderPdfCompleted;
        
        /// <remarks/>
        public event GetServiceOrderByItemCreationDateCompletedEventHandler GetServiceOrderByItemCreationDateCompleted;
        
        /// <remarks/>
        public event GetDivisionCompletedEventHandler GetDivisionCompleted;
        
        /// <remarks/>
        public event GetAllDivisionsCompletedEventHandler GetAllDivisionsCompleted;
        
        /// <remarks/>
        public event GetSectorCompletedEventHandler GetSectorCompleted;
        
        /// <remarks/>
        public event GetAllSectorsCompletedEventHandler GetAllSectorsCompleted;
        
        /// <remarks/>
        public event GetCardTypeCompletedEventHandler GetCardTypeCompleted;
        
        /// <remarks/>
        public event GetAllCardTypesCompletedEventHandler GetAllCardTypesCompleted;
        
        /// <remarks/>
        public event GetCardCompletedEventHandler GetCardCompleted;
        
        /// <remarks/>
        public event GetCardByCardNumberCompletedEventHandler GetCardByCardNumberCompleted;
        
        /// <remarks/>
        public event GetHistoryCompletedEventHandler GetHistoryCompleted;
        
        /// <remarks/>
        public event GetHistoryByVehicleIdCompletedEventHandler GetHistoryByVehicleIdCompleted;
        
        /// <remarks/>
        public event SaveCardCompletedEventHandler SaveCardCompleted;
        
        /// <remarks/>
        public event GetCardByFilterListCompletedEventHandler GetCardByFilterListCompleted;
        
        /// <remarks/>
        public event GetCardByFilterCountCompletedEventHandler GetCardByFilterCountCompleted;
        
        /// <remarks/>
        public event DeleteCardCompletedEventHandler DeleteCardCompleted;
        
        /// <remarks/>
        public event AssignCardCompletedEventHandler AssignCardCompleted;
        
        /// <remarks/>
        public event FilterCardsForAutoCompleteCompletedEventHandler FilterCardsForAutoCompleteCompleted;
        
        /// <remarks/>
        public event GetHistoryByFilterListCompletedEventHandler GetHistoryByFilterListCompleted;
        
        /// <remarks/>
        public event GetHistoryByFilterCountCompletedEventHandler GetHistoryByFilterCountCompleted;
        
        /// <remarks/>
        public event GetHistoryCountCompletedEventHandler GetHistoryCountCompleted;
        
        /// <remarks/>
        public event GetCardReportCompletedEventHandler GetCardReportCompleted;
        
        /// <remarks/>
        public event GetVehicleNameCompletedEventHandler GetVehicleNameCompleted;
        
        /// <remarks/>
        public event StartReportProcessCompletedEventHandler StartReportProcessCompleted;
        
        /// <remarks/>
        public event GetReservationCompletedEventHandler GetReservationCompleted;
        
        /// <remarks/>
        public event GetReservationByReservationIdCompletedEventHandler GetReservationByReservationIdCompleted;
        
        /// <remarks/>
        public event GetReservationsCompletedEventHandler GetReservationsCompleted;
        
        /// <remarks/>
        public event FilterReservationForAutoCompleteCompletedEventHandler FilterReservationForAutoCompleteCompleted;
        
        /// <remarks/>
        public event GetReservationsByFilterListCompletedEventHandler GetReservationsByFilterListCompleted;
        
        /// <remarks/>
        public event GetReservationsByFilterCountCompletedEventHandler GetReservationsByFilterCountCompleted;
        
        /// <remarks/>
        public event FilterReservationsCompletedEventHandler FilterReservationsCompleted;
        
        /// <remarks/>
        public event SaveReservationCompletedEventHandler SaveReservationCompleted;
        
        /// <remarks/>
        public event GetEmployeeIdCompletedEventHandler GetEmployeeIdCompleted;
        
        /// <remarks/>
        public event GetReservationIdByAssignedVehicleIdCompletedEventHandler GetReservationIdByAssignedVehicleIdCompleted;
        
        /// <remarks/>
        public event GetVersionCompletedEventHandler GetVersionCompleted;
        
        /// <remarks/>
        public event GetRelationCompletedEventHandler GetRelationCompleted;
        
        /// <remarks/>
        public event GetAllRelationsCompletedEventHandler GetAllRelationsCompleted;
        
        /// <remarks/>
        public event SaveRelationCompletedEventHandler SaveRelationCompleted;
        
        /// <remarks/>
        public event GetRelationsByFilterCompletedEventHandler GetRelationsByFilterCompleted;
        
        /// <remarks/>
        public event GetRelationsByFilterListCompletedEventHandler GetRelationsByFilterListCompleted;
        
        /// <remarks/>
        public event GetRelationsByFilterCountCompletedEventHandler GetRelationsByFilterCountCompleted;
        
        /// <remarks/>
        public event FilterRelationsForAutoCompleteCompletedEventHandler FilterRelationsForAutoCompleteCompleted;
        
        /// <remarks/>
        public event DeleteRelationCompletedEventHandler DeleteRelationCompleted;
        
        /// <remarks/>
        public event GetRelationLocationsByFilterListCompletedEventHandler GetRelationLocationsByFilterListCompleted;
        
        /// <remarks/>
        public event GetRelationLocationsByFilterCountCompletedEventHandler GetRelationLocationsByFilterCountCompleted;
        
        /// <remarks/>
        public event GetRelationLocationCompletedEventHandler GetRelationLocationCompleted;
        
        /// <remarks/>
        public event GetRelationLocationByIdCompletedEventHandler GetRelationLocationByIdCompleted;
        
        /// <remarks/>
        public event SaveRelationLocationCompletedEventHandler SaveRelationLocationCompleted;
        
        /// <remarks/>
        public event DeleteRelationLocationCompletedEventHandler DeleteRelationLocationCompleted;
        
        /// <remarks/>
        public event SaveWageMarkersCompletedEventHandler SaveWageMarkersCompleted;
        
        /// <remarks/>
        public event UpdateWageMarkersCompletedEventHandler UpdateWageMarkersCompleted;
        
        /// <remarks/>
        public event GetRelationLocationInstancesByPrlIdCompletedEventHandler GetRelationLocationInstancesByPrlIdCompleted;
        
        /// <remarks/>
        public event SaveRelationLocationInstanceCompletedEventHandler SaveRelationLocationInstanceCompleted;
        
        /// <remarks/>
        public event UploadFileDataCompletedEventHandler UploadFileDataCompleted;
        
        /// <remarks/>
        public event IsUploadedFileDataValidCompletedEventHandler IsUploadedFileDataValidCompleted;
        
        /// <remarks/>
        public event ProcessUploadedFileProgressCompletedEventHandler ProcessUploadedFileProgressCompleted;
        
        /// <remarks/>
        public event GetProcessingLogDataCompletedEventHandler GetProcessingLogDataCompleted;
        
        /// <remarks/>
        public event UploadedFileErrorCountCompletedEventHandler UploadedFileErrorCountCompleted;
        
        /// <remarks/>
        public event ProcessUploadedFileCompletedEventHandler ProcessUploadedFileCompleted;
        
        /// <remarks/>
        public event SavePRLCompletedEventHandler SavePRLCompleted;
        
        /// <remarks/>
        public event GetPRLByPrlIdCompletedEventHandler GetPRLByPrlIdCompleted;
        
        /// <remarks/>
        public event GetAllPRLsCompletedEventHandler GetAllPRLsCompleted;
        
        /// <remarks/>
        public event GetPRLByFilterCompletedEventHandler GetPRLByFilterCompleted;
        
        /// <remarks/>
        public event GetPrlByFilterListCompletedEventHandler GetPrlByFilterListCompleted;
        
        /// <remarks/>
        public event GetPRLByFilterCountCompletedEventHandler GetPRLByFilterCountCompleted;
        
        /// <remarks/>
        public event DeletePRLCompletedEventHandler DeletePRLCompleted;
        
        /// <remarks/>
        public event UpdateStatusCompletedEventHandler UpdateStatusCompleted;
        
        /// <remarks/>
        public event GetPRLByPrlIdWithStatesCompletedEventHandler GetPRLByPrlIdWithStatesCompleted;
        
        /// <remarks/>
        public event GetVehicleAndTimeCollisionCompletedEventHandler GetVehicleAndTimeCollisionCompleted;
        
        /// <remarks/>
        public event GetVehicleAndTimeCollisionForUpdateCompletedEventHandler GetVehicleAndTimeCollisionForUpdateCompleted;
        
        /// <remarks/>
        public event GetAllLocationsCompletedEventHandler GetAllLocationsCompleted;
        
        /// <remarks/>
        public event GetLocationCompletedEventHandler GetLocationCompleted;
        
        /// <remarks/>
        public event GetLocationsByFilterListCompletedEventHandler GetLocationsByFilterListCompleted;
        
        /// <remarks/>
        public event GetLocationsByFilterCountCompletedEventHandler GetLocationsByFilterCountCompleted;
        
        /// <remarks/>
        public event DeleteLocationCompletedEventHandler DeleteLocationCompleted;
        
        /// <remarks/>
        public event FilterLocationsCompletedEventHandler FilterLocationsCompleted;
        
        /// <remarks/>
        public event SaveLocationCompletedEventHandler SaveLocationCompleted;
        
        /// <remarks/>
        public event GetRegistrationsThatExpireListCompletedEventHandler GetRegistrationsThatExpireListCompleted;
        
        /// <remarks/>
        public event GetRegistrationsThatExpireCountCompletedEventHandler GetRegistrationsThatExpireCountCompleted;
        
        /// <remarks/>
        public event GetVehiclesForWriteOffListCompletedEventHandler GetVehiclesForWriteOffListCompleted;
        
        /// <remarks/>
        public event GetVehiclesForWriteOffCountCompletedEventHandler GetVehiclesForWriteOffCountCompleted;
        
        /// <remarks/>
        public event GetVehiclesForServiceListCompletedEventHandler GetVehiclesForServiceListCompleted;
        
        /// <remarks/>
        public event GetVehiclesForServiceCountCompletedEventHandler GetVehiclesForServiceCountCompleted;
        
        /// <remarks/>
        public event AddUserToVehicleGroupCompletedEventHandler AddUserToVehicleGroupCompleted;
        
        /// <remarks/>
        public event RemoveUserFromVehicleGroupCompletedEventHandler RemoveUserFromVehicleGroupCompleted;
        
        /// <remarks/>
        public event GetFuelConsumptionForReportCompletedEventHandler GetFuelConsumptionForReportCompleted;
        
        /// <remarks/>
        public event GetServiceOrderCompletedEventHandler GetServiceOrderCompleted;
        
        /// <remarks/>
        public event GetVehicleTiresByFilterCountCompletedEventHandler GetVehicleTiresByFilterCountCompleted;
        
        /// <remarks/>
        public event GetVehicleTireDetailsCompletedEventHandler GetVehicleTireDetailsCompleted;
        
        /// <remarks/>
        public event SaveVehicleTireCompletedEventHandler SaveVehicleTireCompleted;
        
        /// <remarks/>
        public event DeleteVehicleTireCompletedEventHandler DeleteVehicleTireCompleted;
        
        /// <remarks/>
        public event GetVehicleTireReplacementCountCompletedEventHandler GetVehicleTireReplacementCountCompleted;
        
        /// <remarks/>
        public event GetAllOrganizationalUnitsCompletedEventHandler GetAllOrganizationalUnitsCompleted;
        
        /// <remarks/>
        public event GetAllOrganizationUnitsForCustomControlCompletedEventHandler GetAllOrganizationUnitsForCustomControlCompleted;
        
        /// <remarks/>
        public event GetAllDriversforOUCompletedEventHandler GetAllDriversforOUCompleted;
        
        /// <remarks/>
        public event GetAllVehiclesforOUCompletedEventHandler GetAllVehiclesforOUCompleted;
        
        /// <remarks/>
        public event MoveDrivertoOUCompletedEventHandler MoveDrivertoOUCompleted;
        
        /// <remarks/>
        public event MoveVehicletoOUCompletedEventHandler MoveVehicletoOUCompleted;
        
        /// <remarks/>
        public event InsertOUCompletedEventHandler InsertOUCompleted;
        
        /// <remarks/>
        public event UpdateOUCompletedEventHandler UpdateOUCompleted;
        
        /// <remarks/>
        public event DeleteOUCompletedEventHandler DeleteOUCompleted;
        
        /// <remarks/>
        public event UpdateOURightsCompletedEventHandler UpdateOURightsCompleted;
        
        /// <remarks/>
        public event GetAllOUAccessRightsCompletedEventHandler GetAllOUAccessRightsCompleted;
        
        /// <remarks/>
        public event GetExpenseCompletedEventHandler GetExpenseCompleted;
        
        /// <remarks/>
        public event GetExpensesByUserIdCompletedEventHandler GetExpensesByUserIdCompleted;
        
        /// <remarks/>
        public event LockExpenseCompletedEventHandler LockExpenseCompleted;
        
        /// <remarks/>
        public event GetExpensesForReportCompletedEventHandler GetExpensesForReportCompleted;
        
        /// <remarks/>
        public event GetExpensesByFilterListCompletedEventHandler GetExpensesByFilterListCompleted;
        
        /// <remarks/>
        public event GetExpensesByFilterCountCompletedEventHandler GetExpensesByFilterCountCompleted;
        
        /// <remarks/>
        public event GetExpensesByFilterCompletedEventHandler GetExpensesByFilterCompleted;
        
        /// <remarks/>
        public event GetExpensesByUserIdAndVehicleFkCompletedEventHandler GetExpensesByUserIdAndVehicleFkCompleted;
        
        /// <remarks/>
        public event GetExpensesByUserIdAndExpCatCodeCompletedEventHandler GetExpensesByUserIdAndExpCatCodeCompleted;
        
        /// <remarks/>
        public event DeleteExpenseCompletedEventHandler DeleteExpenseCompleted;
        
        /// <remarks/>
        public event SaveExpenseCompletedEventHandler SaveExpenseCompleted;
        
        /// <remarks/>
        public event GetExpensesByUserIdAndPrlIdCompletedEventHandler GetExpensesByUserIdAndPrlIdCompleted;
        
        /// <remarks/>
        public event GetPrlForExpenseDetailsCompletedEventHandler GetPrlForExpenseDetailsCompleted;
        
        /// <remarks/>
        public event GetExpenseGeneratorCompletedEventHandler GetExpenseGeneratorCompleted;
        
        /// <remarks/>
        public event GetExpenseGeneratorsByUserIdCompletedEventHandler GetExpenseGeneratorsByUserIdCompleted;
        
        /// <remarks/>
        public event GetExpenseGeneratorsByFilterListCompletedEventHandler GetExpenseGeneratorsByFilterListCompleted;
        
        /// <remarks/>
        public event GetExpenseGeneratorsByFilterCountCompletedEventHandler GetExpenseGeneratorsByFilterCountCompleted;
        
        /// <remarks/>
        public event GetAllShownExpenseGeneratorsCompletedEventHandler GetAllShownExpenseGeneratorsCompleted;
        
        /// <remarks/>
        public event DeleteExpenseGeneratorCompletedEventHandler DeleteExpenseGeneratorCompleted;
        
        /// <remarks/>
        public event SaveExpenseGeneratorCompletedEventHandler SaveExpenseGeneratorCompleted;
        
        /// <remarks/>
        public event GetExpenseCustdefFieldCompletedEventHandler GetExpenseCustdefFieldCompleted;
        
        /// <remarks/>
        public event GetExpenseCustdefFieldsByUserIdCompletedEventHandler GetExpenseCustdefFieldsByUserIdCompleted;
        
        /// <remarks/>
        public event GetExpenseCustdefFieldsByUserIdAndExpCatCodeCompletedEventHandler GetExpenseCustdefFieldsByUserIdAndExpCatCodeCompleted;
        
        /// <remarks/>
        public event DeleteExpenseCustdefFieldCompletedEventHandler DeleteExpenseCustdefFieldCompleted;
        
        /// <remarks/>
        public event SaveExpenseCustdefFieldCompletedEventHandler SaveExpenseCustdefFieldCompleted;
        
        /// <remarks/>
        public event GetExpCatalogValueCompletedEventHandler GetExpCatalogValueCompleted;
        
        /// <remarks/>
        public event GetAllExpCatalogValuesByUserIdCompletedEventHandler GetAllExpCatalogValuesByUserIdCompleted;
        
        /// <remarks/>
        public event GetAllExpCatalogValuesCompletedEventHandler GetAllExpCatalogValuesCompleted;
        
        /// <remarks/>
        public event GetAllExpCatalogValuesByControlIdCompletedEventHandler GetAllExpCatalogValuesByControlIdCompleted;
        
        /// <remarks/>
        public event GetAllExpCatalogValuesByFieldNameCompletedEventHandler GetAllExpCatalogValuesByFieldNameCompleted;
        
        /// <remarks/>
        public event DeleteExpValueCompletedEventHandler DeleteExpValueCompleted;
        
        /// <remarks/>
        public event CanDeleteCompletedEventHandler CanDeleteCompleted;
        
        /// <remarks/>
        public event SaveExpValueCompletedEventHandler SaveExpValueCompleted;
        
        /// <remarks/>
        public event GetExpCatalogCompletedEventHandler GetExpCatalogCompleted;
        
        /// <remarks/>
        public event GetAllExpCatalogsCompletedEventHandler GetAllExpCatalogsCompleted;
        
        /// <remarks/>
        public event GetExpenseCatalogByFilterListCompletedEventHandler GetExpenseCatalogByFilterListCompleted;
        
        /// <remarks/>
        public event GetExpenseCatalogByFilterCountCompletedEventHandler GetExpenseCatalogByFilterCountCompleted;
        
        /// <remarks/>
        public event FilterExpCatalogsCompletedEventHandler FilterExpCatalogsCompleted;
        
        /// <remarks/>
        public event FilterExpCatalogByFieldNameCompletedEventHandler FilterExpCatalogByFieldNameCompleted;
        
        /// <remarks/>
        public event SaveExpCatalogCompletedEventHandler SaveExpCatalogCompleted;
        
        /// <remarks/>
        public event ReportGetSumByExpensesTypesOnVehicleCompletedEventHandler ReportGetSumByExpensesTypesOnVehicleCompleted;
        
        /// <remarks/>
        public event GetPRLCountAndExpensesTotalReportCompletedEventHandler GetPRLCountAndExpensesTotalReportCompleted;
        
        /// <remarks/>
        public event GetPRLCountAndExpensesVehicleGroupReportCompletedEventHandler GetPRLCountAndExpensesVehicleGroupReportCompleted;
        
        /// <remarks/>
        public event GetPRLCountAndExpensesVehicleReportCompletedEventHandler GetPRLCountAndExpensesVehicleReportCompleted;
        
        /// <remarks/>
        public event GetPRLCountAndExpensesDriverReportCompletedEventHandler GetPRLCountAndExpensesDriverReportCompleted;
        
        /// <remarks/>
        public event GetPRLCountAndExpensesAreaReportCompletedEventHandler GetPRLCountAndExpensesAreaReportCompleted;
        
        /// <remarks/>
        public event GetTollReportCompletedEventHandler GetTollReportCompleted;
        
        /// <remarks/>
        public event GetReportFileCompletedEventHandler GetReportFileCompleted;
        
        /// <remarks/>
        public event DeleteUserCompletedEventHandler DeleteUserCompleted;
        
        /// <remarks/>
        public event GetChildUserCompletedEventHandler GetChildUserCompleted;
        
        /// <remarks/>
        public event GetChildUsersCompletedEventHandler GetChildUsersCompleted;
        
        /// <remarks/>
        public event GetParentAndHisChildUsersCompletedEventHandler GetParentAndHisChildUsersCompleted;
        
        /// <remarks/>
        public event GetAuthorizedUsersForVehicleGroupCompletedEventHandler GetAuthorizedUsersForVehicleGroupCompleted;
        
        /// <remarks/>
        public event SynchronizeChildUserCompletedEventHandler SynchronizeChildUserCompleted;
        
        /// <remarks/>
        public event SynchronizeUserCompletedEventHandler SynchronizeUserCompleted;
        
        /// <remarks/>
        public event FilterUsersForAutoCompleteCompletedEventHandler FilterUsersForAutoCompleteCompleted;
        
        /// <remarks/>
        public event GetUserMailCompletedEventHandler GetUserMailCompleted;
        
        /// <remarks/>
        public event GetUserRightsCompletedEventHandler GetUserRightsCompleted;
        
        /// <remarks/>
        public event GetAllUsersWithRightsCompletedEventHandler GetAllUsersWithRightsCompleted;
        
        /// <remarks/>
        public event FilterUsersWithRightsCompletedEventHandler FilterUsersWithRightsCompleted;
        
        /// <remarks/>
        public event HasRightCompletedEventHandler HasRightCompleted;
        
        /// <remarks/>
        public event SaveUserRightsCompletedEventHandler SaveUserRightsCompleted;
        
        /// <remarks/>
        public event GetCompanyCompletedEventHandler GetCompanyCompleted;
        
        /// <remarks/>
        public event GetAllCompaniesCompletedEventHandler GetAllCompaniesCompleted;
        
        /// <remarks/>
        public event GetCompaniesByUserIdCompletedEventHandler GetCompaniesByUserIdCompleted;
        
        /// <remarks/>
        public event GetCompanyByFilterCountCompletedEventHandler GetCompanyByFilterCountCompleted;
        
        /// <remarks/>
        public event GetCompanyByFilterListCompletedEventHandler GetCompanyByFilterListCompleted;
        
        /// <remarks/>
        public event FilterCompaniesForAutoCompleteCompletedEventHandler FilterCompaniesForAutoCompleteCompleted;
        
        /// <remarks/>
        public event DeleteCompanyCompletedEventHandler DeleteCompanyCompleted;
        
        /// <remarks/>
        public event SaveCompanyCompletedEventHandler SaveCompanyCompleted;
        
        /// <remarks/>
        public event GetDamagesByFilterListCompletedEventHandler GetDamagesByFilterListCompleted;
        
        /// <remarks/>
        public event GetDamagesByFilterCountCompletedEventHandler GetDamagesByFilterCountCompleted;
        
        /// <remarks/>
        public event GetExpenseDamagesByFilterListCompletedEventHandler GetExpenseDamagesByFilterListCompleted;
        
        /// <remarks/>
        public event GetExpenseDamagesByFilterCountCompletedEventHandler GetExpenseDamagesByFilterCountCompleted;
        
        /// <remarks/>
        public event GetDamagedVehiclesCompletedEventHandler GetDamagedVehiclesCompleted;
        
        /// <remarks/>
        public event GetDamagedVehiclesFilterCompletedEventHandler GetDamagedVehiclesFilterCompleted;
        
        /// <remarks/>
        public event GetDamagesByVehicleIdCompletedEventHandler GetDamagesByVehicleIdCompleted;
        
        /// <remarks/>
        public event GetDamagesByExpenseIdCompletedEventHandler GetDamagesByExpenseIdCompleted;
        
        /// <remarks/>
        public event FilterDamagesByVehicleIdCompletedEventHandler FilterDamagesByVehicleIdCompleted;
        
        /// <remarks/>
        public event DeleteDamageCompletedEventHandler DeleteDamageCompleted;
        
        /// <remarks/>
        public event GetDamageCompletedEventHandler GetDamageCompleted;
        
        /// <remarks/>
        public event GetNextDamageNumCompletedEventHandler GetNextDamageNumCompleted;
        
        /// <remarks/>
        public event SaveDamageCompletedEventHandler SaveDamageCompleted;
        
        /// <remarks/>
        public event GetDamagedVehiclesForReportCompletedEventHandler GetDamagedVehiclesForReportCompleted;
        
        /// <remarks/>
        public event GetDamagedVehiclesForExcelReportCompletedEventHandler GetDamagedVehiclesForExcelReportCompleted;
        
        /// <remarks/>
        public event GetDriverCompletedEventHandler GetDriverCompleted;
        
        /// <remarks/>
        public event GetDriverByDesignationCompletedEventHandler GetDriverByDesignationCompleted;
        
        /// <remarks/>
        public event GetDriversByUserIdCompletedEventHandler GetDriversByUserIdCompleted;
        
        /// <remarks/>
        public event GetDriversByFilterListCompletedEventHandler GetDriversByFilterListCompleted;
        
        /// <remarks/>
        public event GetDriversByFilterCountCompletedEventHandler GetDriversByFilterCountCompleted;
        
        /// <remarks/>
        public event FilterDriversCompletedEventHandler FilterDriversCompleted;
        
        /// <remarks/>
        public event FilterDriversForAutoCompleteCompletedEventHandler FilterDriversForAutoCompleteCompleted;
        
        /// <remarks/>
        public event DeleteDriverCompletedEventHandler DeleteDriverCompleted;
        
        /// <remarks/>
        public event SaveDriverCompletedEventHandler SaveDriverCompleted;
        
        /// <remarks/>
        public event GetVehicleCompletedEventHandler GetVehicleCompleted;
        
        /// <remarks/>
        public event GetVehiclesByUserIdCompletedEventHandler GetVehiclesByUserIdCompleted;
        
        /// <remarks/>
        public event GetVehiclesByReservationIdCompletedEventHandler GetVehiclesByReservationIdCompleted;
        
        /// <remarks/>
        public event GetAllAssignedVehiclesCompletedEventHandler GetAllAssignedVehiclesCompleted;
        
        /// <remarks/>
        public event GetVehicleListByFilterListCompletedEventHandler GetVehicleListByFilterListCompleted;
        
        /// <remarks/>
        public event GetVehicleListByFilterCountCompletedEventHandler GetVehicleListByFilterCountCompleted;
        
        /// <remarks/>
        public event FilterVehiclesForAutoCompleteCompletedEventHandler FilterVehiclesForAutoCompleteCompleted;
        
        /// <remarks/>
        public event GetVehiclesByFilterCompletedEventHandler GetVehiclesByFilterCompleted;
        
        /// <remarks/>
        public event GetVehiclesByFilterCountCompletedEventHandler GetVehiclesByFilterCountCompleted;
        
        /// <remarks/>
        public event GetVehiclesByFilterListCompletedEventHandler GetVehiclesByFilterListCompleted;
        
        /// <remarks/>
        public event GetAllVehiclesByOrganizationalUnitCompletedEventHandler GetAllVehiclesByOrganizationalUnitCompleted;
        
        /// <remarks/>
        public event GetAllVehiclesByOrganizationalUnitForCustomControlCompletedEventHandler GetAllVehiclesByOrganizationalUnitForCustomControlCompleted;
        
        /// <remarks/>
        public event GetUngroupedVehiclesByUserIdCompletedEventHandler GetUngroupedVehiclesByUserIdCompleted;
        
        /// <remarks/>
        public event DeleteVehicleCompletedEventHandler DeleteVehicleCompleted;
        
        /// <remarks/>
        public event HasVehicleCompletedEventHandler HasVehicleCompleted;
        
        /// <remarks/>
        public event GetMaxVehicleIdCompletedEventHandler GetMaxVehicleIdCompleted;
        
        /// <remarks/>
        public event SaveVehicleCompletedEventHandler SaveVehicleCompleted;
        
        /// <remarks/>
        public event GetVehicleTiresByFilterListCompletedEventHandler GetVehicleTiresByFilterListCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ServiceOrderProvider_SaveServiceOrder" +
            "Item", RequestElementName="ServiceOrderProvider_SaveServiceOrderItem", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ServiceOrderProvider_SaveServiceOrderItemResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ServiceOrderProvider_SaveServiceOrderItemResult")]
        public int SaveServiceOrderItem(ServiceOrderItemModel serviceOrderItem, long userId, out long serviceOrderItemId) {
            object[] results = this.Invoke("SaveServiceOrderItem", new object[] {
                        serviceOrderItem,
                        userId});
            serviceOrderItemId = ((long)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveServiceOrderItemAsync(ServiceOrderItemModel serviceOrderItem, long userId) {
            this.SaveServiceOrderItemAsync(serviceOrderItem, userId, null);
        }
        
        /// <remarks/>
        public void SaveServiceOrderItemAsync(ServiceOrderItemModel serviceOrderItem, long userId, object userState) {
            if ((this.SaveServiceOrderItemOperationCompleted == null)) {
                this.SaveServiceOrderItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveServiceOrderItemOperationCompleted);
            }
            this.InvokeAsync("SaveServiceOrderItem", new object[] {
                        serviceOrderItem,
                        userId}, this.SaveServiceOrderItemOperationCompleted, userState);
        }
        
        private void OnSaveServiceOrderItemOperationCompleted(object arg) {
            if ((this.SaveServiceOrderItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveServiceOrderItemCompleted(this, new SaveServiceOrderItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ServiceOrderProvider_GetServiceOrderI" +
            "tems", RequestElementName="ServiceOrderProvider_GetServiceOrderItems", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ServiceOrderProvider_GetServiceOrderItemsResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("ServiceOrderProvider_GetServiceOrderItemsResult")]
        public ServiceOrderItemModel[] GetServiceOrderItems(long serviceOrderId, long userId) {
            object[] results = this.Invoke("GetServiceOrderItems", new object[] {
                        serviceOrderId,
                        userId});
            return ((ServiceOrderItemModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetServiceOrderItemsAsync(long serviceOrderId, long userId) {
            this.GetServiceOrderItemsAsync(serviceOrderId, userId, null);
        }
        
        /// <remarks/>
        public void GetServiceOrderItemsAsync(long serviceOrderId, long userId, object userState) {
            if ((this.GetServiceOrderItemsOperationCompleted == null)) {
                this.GetServiceOrderItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServiceOrderItemsOperationCompleted);
            }
            this.InvokeAsync("GetServiceOrderItems", new object[] {
                        serviceOrderId,
                        userId}, this.GetServiceOrderItemsOperationCompleted, userState);
        }
        
        private void OnGetServiceOrderItemsOperationCompleted(object arg) {
            if ((this.GetServiceOrderItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServiceOrderItemsCompleted(this, new GetServiceOrderItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ServiceOrderProvider_GetServiceOrderI" +
            "temDetails", RequestElementName="ServiceOrderProvider_GetServiceOrderItemDetails", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ServiceOrderProvider_GetServiceOrderItemDetailsResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ServiceOrderProvider_GetServiceOrderItemDetailsResult")]
        public ServiceOrderItemModel GetServiceOrderItemDetails(long serviceOrderItemId) {
            object[] results = this.Invoke("GetServiceOrderItemDetails", new object[] {
                        serviceOrderItemId});
            return ((ServiceOrderItemModel)(results[0]));
        }
        
        /// <remarks/>
        public void GetServiceOrderItemDetailsAsync(long serviceOrderItemId) {
            this.GetServiceOrderItemDetailsAsync(serviceOrderItemId, null);
        }
        
        /// <remarks/>
        public void GetServiceOrderItemDetailsAsync(long serviceOrderItemId, object userState) {
            if ((this.GetServiceOrderItemDetailsOperationCompleted == null)) {
                this.GetServiceOrderItemDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServiceOrderItemDetailsOperationCompleted);
            }
            this.InvokeAsync("GetServiceOrderItemDetails", new object[] {
                        serviceOrderItemId}, this.GetServiceOrderItemDetailsOperationCompleted, userState);
        }
        
        private void OnGetServiceOrderItemDetailsOperationCompleted(object arg) {
            if ((this.GetServiceOrderItemDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServiceOrderItemDetailsCompleted(this, new GetServiceOrderItemDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ServiceOrderProvider_GetServiceOrderE" +
            "xpenses", RequestElementName="ServiceOrderProvider_GetServiceOrderExpenses", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ServiceOrderProvider_GetServiceOrderExpensesResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("ServiceOrderProvider_GetServiceOrderExpensesResult")]
        public ExpenseModel[] GetServiceOrderExpenses(long serviceOrderId, long userId, bool checkDeletedItems) {
            object[] results = this.Invoke("GetServiceOrderExpenses", new object[] {
                        serviceOrderId,
                        userId,
                        checkDeletedItems});
            return ((ExpenseModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetServiceOrderExpensesAsync(long serviceOrderId, long userId, bool checkDeletedItems) {
            this.GetServiceOrderExpensesAsync(serviceOrderId, userId, checkDeletedItems, null);
        }
        
        /// <remarks/>
        public void GetServiceOrderExpensesAsync(long serviceOrderId, long userId, bool checkDeletedItems, object userState) {
            if ((this.GetServiceOrderExpensesOperationCompleted == null)) {
                this.GetServiceOrderExpensesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServiceOrderExpensesOperationCompleted);
            }
            this.InvokeAsync("GetServiceOrderExpenses", new object[] {
                        serviceOrderId,
                        userId,
                        checkDeletedItems}, this.GetServiceOrderExpensesOperationCompleted, userState);
        }
        
        private void OnGetServiceOrderExpensesOperationCompleted(object arg) {
            if ((this.GetServiceOrderExpensesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServiceOrderExpensesCompleted(this, new GetServiceOrderExpensesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ServiceOrderProvider_DeleteServiceOrd" +
            "erItem", RequestElementName="ServiceOrderProvider_DeleteServiceOrderItem", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ServiceOrderProvider_DeleteServiceOrderItemResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ServiceOrderProvider_DeleteServiceOrderItemResult")]
        public int DeleteServiceOrderItem(long serviceOrderItemId) {
            object[] results = this.Invoke("DeleteServiceOrderItem", new object[] {
                        serviceOrderItemId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteServiceOrderItemAsync(long serviceOrderItemId) {
            this.DeleteServiceOrderItemAsync(serviceOrderItemId, null);
        }
        
        /// <remarks/>
        public void DeleteServiceOrderItemAsync(long serviceOrderItemId, object userState) {
            if ((this.DeleteServiceOrderItemOperationCompleted == null)) {
                this.DeleteServiceOrderItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteServiceOrderItemOperationCompleted);
            }
            this.InvokeAsync("DeleteServiceOrderItem", new object[] {
                        serviceOrderItemId}, this.DeleteServiceOrderItemOperationCompleted, userState);
        }
        
        private void OnDeleteServiceOrderItemOperationCompleted(object arg) {
            if ((this.DeleteServiceOrderItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteServiceOrderItemCompleted(this, new DeleteServiceOrderItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ServiceOrderProvider_DeleteItemsByExp" +
            "ense", RequestElementName="ServiceOrderProvider_DeleteItemsByExpense", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ServiceOrderProvider_DeleteItemsByExpenseResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ServiceOrderProvider_DeleteItemsByExpenseResult")]
        public int DeleteItemsByExpense(long expenseId, long serviceOrderId, long userId) {
            object[] results = this.Invoke("DeleteItemsByExpense", new object[] {
                        expenseId,
                        serviceOrderId,
                        userId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteItemsByExpenseAsync(long expenseId, long serviceOrderId, long userId) {
            this.DeleteItemsByExpenseAsync(expenseId, serviceOrderId, userId, null);
        }
        
        /// <remarks/>
        public void DeleteItemsByExpenseAsync(long expenseId, long serviceOrderId, long userId, object userState) {
            if ((this.DeleteItemsByExpenseOperationCompleted == null)) {
                this.DeleteItemsByExpenseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteItemsByExpenseOperationCompleted);
            }
            this.InvokeAsync("DeleteItemsByExpense", new object[] {
                        expenseId,
                        serviceOrderId,
                        userId}, this.DeleteItemsByExpenseOperationCompleted, userState);
        }
        
        private void OnDeleteItemsByExpenseOperationCompleted(object arg) {
            if ((this.DeleteItemsByExpenseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteItemsByExpenseCompleted(this, new DeleteItemsByExpenseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ServiceOrderProvider_GetServiceOrderB" +
            "yFilterList", RequestElementName="ServiceOrderProvider_GetServiceOrderByFilterList", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ServiceOrderProvider_GetServiceOrderByFilterListResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("ServiceOrderProvider_GetServiceOrderByFilterListResult")]
        public ServiceOrderFilterModel[] GetServiceOrderByFilterList(ServiceOrderParams filterParams) {
            object[] results = this.Invoke("GetServiceOrderByFilterList", new object[] {
                        filterParams});
            return ((ServiceOrderFilterModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetServiceOrderByFilterListAsync(ServiceOrderParams filterParams) {
            this.GetServiceOrderByFilterListAsync(filterParams, null);
        }
        
        /// <remarks/>
        public void GetServiceOrderByFilterListAsync(ServiceOrderParams filterParams, object userState) {
            if ((this.GetServiceOrderByFilterListOperationCompleted == null)) {
                this.GetServiceOrderByFilterListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServiceOrderByFilterListOperationCompleted);
            }
            this.InvokeAsync("GetServiceOrderByFilterList", new object[] {
                        filterParams}, this.GetServiceOrderByFilterListOperationCompleted, userState);
        }
        
        private void OnGetServiceOrderByFilterListOperationCompleted(object arg) {
            if ((this.GetServiceOrderByFilterListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServiceOrderByFilterListCompleted(this, new GetServiceOrderByFilterListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ServiceOrderProvider_GetServiceOrderB" +
            "yFilterCount", RequestElementName="ServiceOrderProvider_GetServiceOrderByFilterCount", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ServiceOrderProvider_GetServiceOrderByFilterCountResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ServiceOrderProvider_GetServiceOrderByFilterCountResult")]
        public int GetServiceOrderByFilterCount(ServiceOrderParams filterParams) {
            object[] results = this.Invoke("GetServiceOrderByFilterCount", new object[] {
                        filterParams});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetServiceOrderByFilterCountAsync(ServiceOrderParams filterParams) {
            this.GetServiceOrderByFilterCountAsync(filterParams, null);
        }
        
        /// <remarks/>
        public void GetServiceOrderByFilterCountAsync(ServiceOrderParams filterParams, object userState) {
            if ((this.GetServiceOrderByFilterCountOperationCompleted == null)) {
                this.GetServiceOrderByFilterCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServiceOrderByFilterCountOperationCompleted);
            }
            this.InvokeAsync("GetServiceOrderByFilterCount", new object[] {
                        filterParams}, this.GetServiceOrderByFilterCountOperationCompleted, userState);
        }
        
        private void OnGetServiceOrderByFilterCountOperationCompleted(object arg) {
            if ((this.GetServiceOrderByFilterCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServiceOrderByFilterCountCompleted(this, new GetServiceOrderByFilterCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ServiceOrderProvider_DeleteServiceOrd" +
            "er", RequestElementName="ServiceOrderProvider_DeleteServiceOrder", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ServiceOrderProvider_DeleteServiceOrderResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ServiceOrderProvider_DeleteServiceOrderResult")]
        public int DeleteServiceOrder(long userId, long serviceOrderID) {
            object[] results = this.Invoke("DeleteServiceOrder", new object[] {
                        userId,
                        serviceOrderID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteServiceOrderAsync(long userId, long serviceOrderID) {
            this.DeleteServiceOrderAsync(userId, serviceOrderID, null);
        }
        
        /// <remarks/>
        public void DeleteServiceOrderAsync(long userId, long serviceOrderID, object userState) {
            if ((this.DeleteServiceOrderOperationCompleted == null)) {
                this.DeleteServiceOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteServiceOrderOperationCompleted);
            }
            this.InvokeAsync("DeleteServiceOrder", new object[] {
                        userId,
                        serviceOrderID}, this.DeleteServiceOrderOperationCompleted, userState);
        }
        
        private void OnDeleteServiceOrderOperationCompleted(object arg) {
            if ((this.DeleteServiceOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteServiceOrderCompleted(this, new DeleteServiceOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ServiceOrderProvider_SaveServiceOrder" +
            "", RequestElementName="ServiceOrderProvider_SaveServiceOrder", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ServiceOrderProvider_SaveServiceOrderResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ServiceOrderProvider_SaveServiceOrderResult")]
        public int SaveServiceOrder(ServiceOrderModel serviceOrder, out long serviceOrderID) {
            object[] results = this.Invoke("SaveServiceOrder", new object[] {
                        serviceOrder});
            serviceOrderID = ((long)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveServiceOrderAsync(ServiceOrderModel serviceOrder) {
            this.SaveServiceOrderAsync(serviceOrder, null);
        }
        
        /// <remarks/>
        public void SaveServiceOrderAsync(ServiceOrderModel serviceOrder, object userState) {
            if ((this.SaveServiceOrderOperationCompleted == null)) {
                this.SaveServiceOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveServiceOrderOperationCompleted);
            }
            this.InvokeAsync("SaveServiceOrder", new object[] {
                        serviceOrder}, this.SaveServiceOrderOperationCompleted, userState);
        }
        
        private void OnSaveServiceOrderOperationCompleted(object arg) {
            if ((this.SaveServiceOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveServiceOrderCompleted(this, new SaveServiceOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ServiceOrderProvider_LockServiceOrder" +
            "", RequestElementName="ServiceOrderProvider_LockServiceOrder", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ServiceOrderProvider_LockServiceOrderResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ServiceOrderProvider_LockServiceOrderResult")]
        public int LockServiceOrder(long serviceOrderID, int locked) {
            object[] results = this.Invoke("LockServiceOrder", new object[] {
                        serviceOrderID,
                        locked});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void LockServiceOrderAsync(long serviceOrderID, int locked) {
            this.LockServiceOrderAsync(serviceOrderID, locked, null);
        }
        
        /// <remarks/>
        public void LockServiceOrderAsync(long serviceOrderID, int locked, object userState) {
            if ((this.LockServiceOrderOperationCompleted == null)) {
                this.LockServiceOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLockServiceOrderOperationCompleted);
            }
            this.InvokeAsync("LockServiceOrder", new object[] {
                        serviceOrderID,
                        locked}, this.LockServiceOrderOperationCompleted, userState);
        }
        
        private void OnLockServiceOrderOperationCompleted(object arg) {
            if ((this.LockServiceOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LockServiceOrderCompleted(this, new LockServiceOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ServiceOrderProvider_VehicleAndTimeCo" +
            "llisionForServiceOrder", RequestElementName="ServiceOrderProvider_VehicleAndTimeCollisionForServiceOrder", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ServiceOrderProvider_VehicleAndTimeCollisionForServiceOrderResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ServiceOrderProvider_VehicleAndTimeCollisionForServiceOrderResult")]
        public int GetVehicleAndTimeCollisionForServiceOrder(long vehicleId, System.DateTime startDate, System.DateTime endDate, long serviceOrderId, out long collisionsDetected) {
            object[] results = this.Invoke("GetVehicleAndTimeCollisionForServiceOrder", new object[] {
                        vehicleId,
                        startDate,
                        endDate,
                        serviceOrderId});
            collisionsDetected = ((long)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetVehicleAndTimeCollisionForServiceOrderAsync(long vehicleId, System.DateTime startDate, System.DateTime endDate, long serviceOrderId) {
            this.GetVehicleAndTimeCollisionForServiceOrderAsync(vehicleId, startDate, endDate, serviceOrderId, null);
        }
        
        /// <remarks/>
        public void GetVehicleAndTimeCollisionForServiceOrderAsync(long vehicleId, System.DateTime startDate, System.DateTime endDate, long serviceOrderId, object userState) {
            if ((this.GetVehicleAndTimeCollisionForServiceOrderOperationCompleted == null)) {
                this.GetVehicleAndTimeCollisionForServiceOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVehicleAndTimeCollisionForServiceOrderOperationCompleted);
            }
            this.InvokeAsync("GetVehicleAndTimeCollisionForServiceOrder", new object[] {
                        vehicleId,
                        startDate,
                        endDate,
                        serviceOrderId}, this.GetVehicleAndTimeCollisionForServiceOrderOperationCompleted, userState);
        }
        
        private void OnGetVehicleAndTimeCollisionForServiceOrderOperationCompleted(object arg) {
            if ((this.GetVehicleAndTimeCollisionForServiceOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVehicleAndTimeCollisionForServiceOrderCompleted(this, new GetVehicleAndTimeCollisionForServiceOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ServiceOrderProvider_GetServiceOrderP" +
            "df", RequestElementName="ServiceOrderProvider_GetServiceOrderPdf", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ServiceOrderProvider_GetServiceOrderPdfResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ServiceOrderProvider_GetServiceOrderPdfResult")]
        public ServiceOrderPdfModel GetServiceOrderPdf(long userId, long serviceOrderID) {
            object[] results = this.Invoke("GetServiceOrderPdf", new object[] {
                        userId,
                        serviceOrderID});
            return ((ServiceOrderPdfModel)(results[0]));
        }
        
        /// <remarks/>
        public void GetServiceOrderPdfAsync(long userId, long serviceOrderID) {
            this.GetServiceOrderPdfAsync(userId, serviceOrderID, null);
        }
        
        /// <remarks/>
        public void GetServiceOrderPdfAsync(long userId, long serviceOrderID, object userState) {
            if ((this.GetServiceOrderPdfOperationCompleted == null)) {
                this.GetServiceOrderPdfOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServiceOrderPdfOperationCompleted);
            }
            this.InvokeAsync("GetServiceOrderPdf", new object[] {
                        userId,
                        serviceOrderID}, this.GetServiceOrderPdfOperationCompleted, userState);
        }
        
        private void OnGetServiceOrderPdfOperationCompleted(object arg) {
            if ((this.GetServiceOrderPdfCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServiceOrderPdfCompleted(this, new GetServiceOrderPdfCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ServiceOrderProvider_GetServiceOrderB" +
            "yItemCreationDate", RequestElementName="ServiceOrderProvider_GetServiceOrderByItemCreationDate", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ServiceOrderProvider_GetServiceOrderByItemCreationDateResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ServiceOrderProvider_GetServiceOrderByItemCreationDateResult")]
        public ServiceOrderModel GetServiceOrderByItemCreationDate(System.DateTime itemCreationDateTime, string vehicleRegistration) {
            object[] results = this.Invoke("GetServiceOrderByItemCreationDate", new object[] {
                        itemCreationDateTime,
                        vehicleRegistration});
            return ((ServiceOrderModel)(results[0]));
        }
        
        /// <remarks/>
        public void GetServiceOrderByItemCreationDateAsync(System.DateTime itemCreationDateTime, string vehicleRegistration) {
            this.GetServiceOrderByItemCreationDateAsync(itemCreationDateTime, vehicleRegistration, null);
        }
        
        /// <remarks/>
        public void GetServiceOrderByItemCreationDateAsync(System.DateTime itemCreationDateTime, string vehicleRegistration, object userState) {
            if ((this.GetServiceOrderByItemCreationDateOperationCompleted == null)) {
                this.GetServiceOrderByItemCreationDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServiceOrderByItemCreationDateOperationCompleted);
            }
            this.InvokeAsync("GetServiceOrderByItemCreationDate", new object[] {
                        itemCreationDateTime,
                        vehicleRegistration}, this.GetServiceOrderByItemCreationDateOperationCompleted, userState);
        }
        
        private void OnGetServiceOrderByItemCreationDateOperationCompleted(object arg) {
            if ((this.GetServiceOrderByItemCreationDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServiceOrderByItemCreationDateCompleted(this, new GetServiceOrderByItemCreationDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/DivisionAndSectorProvider_GetDivision" +
            "", RequestElementName="DivisionAndSectorProvider_GetDivision", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="DivisionAndSectorProvider_GetDivisionResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("DivisionAndSectorProvider_GetDivisionResult")]
        public DivisionModel GetDivision(long divisionId) {
            object[] results = this.Invoke("GetDivision", new object[] {
                        divisionId});
            return ((DivisionModel)(results[0]));
        }
        
        /// <remarks/>
        public void GetDivisionAsync(long divisionId) {
            this.GetDivisionAsync(divisionId, null);
        }
        
        /// <remarks/>
        public void GetDivisionAsync(long divisionId, object userState) {
            if ((this.GetDivisionOperationCompleted == null)) {
                this.GetDivisionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDivisionOperationCompleted);
            }
            this.InvokeAsync("GetDivision", new object[] {
                        divisionId}, this.GetDivisionOperationCompleted, userState);
        }
        
        private void OnGetDivisionOperationCompleted(object arg) {
            if ((this.GetDivisionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDivisionCompleted(this, new GetDivisionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/DivisionAndSectorProvider_GetAllDivis" +
            "ions", RequestElementName="DivisionAndSectorProvider_GetAllDivisions", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="DivisionAndSectorProvider_GetAllDivisionsResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("DivisionAndSectorProvider_GetAllDivisionsResult")]
        public DivisionModel[] GetAllDivisions(int active) {
            object[] results = this.Invoke("GetAllDivisions", new object[] {
                        active});
            return ((DivisionModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllDivisionsAsync(int active) {
            this.GetAllDivisionsAsync(active, null);
        }
        
        /// <remarks/>
        public void GetAllDivisionsAsync(int active, object userState) {
            if ((this.GetAllDivisionsOperationCompleted == null)) {
                this.GetAllDivisionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllDivisionsOperationCompleted);
            }
            this.InvokeAsync("GetAllDivisions", new object[] {
                        active}, this.GetAllDivisionsOperationCompleted, userState);
        }
        
        private void OnGetAllDivisionsOperationCompleted(object arg) {
            if ((this.GetAllDivisionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllDivisionsCompleted(this, new GetAllDivisionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/DivisionAndSectorProvider_GetSector", RequestElementName="DivisionAndSectorProvider_GetSector", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="DivisionAndSectorProvider_GetSectorResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("DivisionAndSectorProvider_GetSectorResult")]
        public SectorModel GetSector(long sectorId) {
            object[] results = this.Invoke("GetSector", new object[] {
                        sectorId});
            return ((SectorModel)(results[0]));
        }
        
        /// <remarks/>
        public void GetSectorAsync(long sectorId) {
            this.GetSectorAsync(sectorId, null);
        }
        
        /// <remarks/>
        public void GetSectorAsync(long sectorId, object userState) {
            if ((this.GetSectorOperationCompleted == null)) {
                this.GetSectorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSectorOperationCompleted);
            }
            this.InvokeAsync("GetSector", new object[] {
                        sectorId}, this.GetSectorOperationCompleted, userState);
        }
        
        private void OnGetSectorOperationCompleted(object arg) {
            if ((this.GetSectorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSectorCompleted(this, new GetSectorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/DivisionAndSectorProvider_GetAllSecto" +
            "rs", RequestElementName="DivisionAndSectorProvider_GetAllSectors", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="DivisionAndSectorProvider_GetAllSectorsResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("DivisionAndSectorProvider_GetAllSectorsResult")]
        public SectorModel[] GetAllSectors(int active) {
            object[] results = this.Invoke("GetAllSectors", new object[] {
                        active});
            return ((SectorModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllSectorsAsync(int active) {
            this.GetAllSectorsAsync(active, null);
        }
        
        /// <remarks/>
        public void GetAllSectorsAsync(int active, object userState) {
            if ((this.GetAllSectorsOperationCompleted == null)) {
                this.GetAllSectorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllSectorsOperationCompleted);
            }
            this.InvokeAsync("GetAllSectors", new object[] {
                        active}, this.GetAllSectorsOperationCompleted, userState);
        }
        
        private void OnGetAllSectorsOperationCompleted(object arg) {
            if ((this.GetAllSectorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllSectorsCompleted(this, new GetAllSectorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/CardsManagementProvider_GetCardType", RequestElementName="CardsManagementProvider_GetCardType", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="CardsManagementProvider_GetCardTypeResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("CardsManagementProvider_GetCardTypeResult")]
        public CardTypeModel GetCardType(long cardTypeId) {
            object[] results = this.Invoke("GetCardType", new object[] {
                        cardTypeId});
            return ((CardTypeModel)(results[0]));
        }
        
        /// <remarks/>
        public void GetCardTypeAsync(long cardTypeId) {
            this.GetCardTypeAsync(cardTypeId, null);
        }
        
        /// <remarks/>
        public void GetCardTypeAsync(long cardTypeId, object userState) {
            if ((this.GetCardTypeOperationCompleted == null)) {
                this.GetCardTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCardTypeOperationCompleted);
            }
            this.InvokeAsync("GetCardType", new object[] {
                        cardTypeId}, this.GetCardTypeOperationCompleted, userState);
        }
        
        private void OnGetCardTypeOperationCompleted(object arg) {
            if ((this.GetCardTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCardTypeCompleted(this, new GetCardTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/CardsManagementProvider_GetAllCardTyp" +
            "es", RequestElementName="CardsManagementProvider_GetAllCardTypes", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="CardsManagementProvider_GetAllCardTypesResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("CardsManagementProvider_GetAllCardTypesResult")]
        public CardTypeModel[] GetAllCardTypes(int deleted) {
            object[] results = this.Invoke("GetAllCardTypes", new object[] {
                        deleted});
            return ((CardTypeModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllCardTypesAsync(int deleted) {
            this.GetAllCardTypesAsync(deleted, null);
        }
        
        /// <remarks/>
        public void GetAllCardTypesAsync(int deleted, object userState) {
            if ((this.GetAllCardTypesOperationCompleted == null)) {
                this.GetAllCardTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllCardTypesOperationCompleted);
            }
            this.InvokeAsync("GetAllCardTypes", new object[] {
                        deleted}, this.GetAllCardTypesOperationCompleted, userState);
        }
        
        private void OnGetAllCardTypesOperationCompleted(object arg) {
            if ((this.GetAllCardTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllCardTypesCompleted(this, new GetAllCardTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/CardsManagementProvider_GetCard", RequestElementName="CardsManagementProvider_GetCard", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="CardsManagementProvider_GetCardResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("CardsManagementProvider_GetCardResult")]
        public CardModel GetCard(long userId, long cardID) {
            object[] results = this.Invoke("GetCard", new object[] {
                        userId,
                        cardID});
            return ((CardModel)(results[0]));
        }
        
        /// <remarks/>
        public void GetCardAsync(long userId, long cardID) {
            this.GetCardAsync(userId, cardID, null);
        }
        
        /// <remarks/>
        public void GetCardAsync(long userId, long cardID, object userState) {
            if ((this.GetCardOperationCompleted == null)) {
                this.GetCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCardOperationCompleted);
            }
            this.InvokeAsync("GetCard", new object[] {
                        userId,
                        cardID}, this.GetCardOperationCompleted, userState);
        }
        
        private void OnGetCardOperationCompleted(object arg) {
            if ((this.GetCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCardCompleted(this, new GetCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/CardsManagementProvider_GetCardByCard" +
            "Number", RequestElementName="CardsManagementProvider_GetCardByCardNumber", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="CardsManagementProvider_GetCardByCardNumberResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("CardsManagementProvider_GetCardByCardNumberResult")]
        public CardModel GetCardByCardNumber(long userId, string cardNumber) {
            object[] results = this.Invoke("GetCardByCardNumber", new object[] {
                        userId,
                        cardNumber});
            return ((CardModel)(results[0]));
        }
        
        /// <remarks/>
        public void GetCardByCardNumberAsync(long userId, string cardNumber) {
            this.GetCardByCardNumberAsync(userId, cardNumber, null);
        }
        
        /// <remarks/>
        public void GetCardByCardNumberAsync(long userId, string cardNumber, object userState) {
            if ((this.GetCardByCardNumberOperationCompleted == null)) {
                this.GetCardByCardNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCardByCardNumberOperationCompleted);
            }
            this.InvokeAsync("GetCardByCardNumber", new object[] {
                        userId,
                        cardNumber}, this.GetCardByCardNumberOperationCompleted, userState);
        }
        
        private void OnGetCardByCardNumberOperationCompleted(object arg) {
            if ((this.GetCardByCardNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCardByCardNumberCompleted(this, new GetCardByCardNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/CardsManagementProvider_GetHistory", RequestElementName="CardsManagementProvider_GetHistory", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="CardsManagementProvider_GetHistoryResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("CardsManagementProvider_GetHistoryResult")]
        public CardsHistoryModel GetHistory(long historyId) {
            object[] results = this.Invoke("GetHistory", new object[] {
                        historyId});
            return ((CardsHistoryModel)(results[0]));
        }
        
        /// <remarks/>
        public void GetHistoryAsync(long historyId) {
            this.GetHistoryAsync(historyId, null);
        }
        
        /// <remarks/>
        public void GetHistoryAsync(long historyId, object userState) {
            if ((this.GetHistoryOperationCompleted == null)) {
                this.GetHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHistoryOperationCompleted);
            }
            this.InvokeAsync("GetHistory", new object[] {
                        historyId}, this.GetHistoryOperationCompleted, userState);
        }
        
        private void OnGetHistoryOperationCompleted(object arg) {
            if ((this.GetHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHistoryCompleted(this, new GetHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/CardsManagementProvider_GetHistoryByV" +
            "ehicleID", RequestElementName="CardsManagementProvider_GetHistoryByVehicleID", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="CardsManagementProvider_GetHistoryByVehicleIDResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("CardsManagementProvider_GetHistoryByVehicleIDResult")]
        public CardsHistoryModel[] GetHistoryByVehicleId(long userId, long vehicleId, long cardType) {
            object[] results = this.Invoke("GetHistoryByVehicleId", new object[] {
                        userId,
                        vehicleId,
                        cardType});
            return ((CardsHistoryModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetHistoryByVehicleIdAsync(long userId, long vehicleId, long cardType) {
            this.GetHistoryByVehicleIdAsync(userId, vehicleId, cardType, null);
        }
        
        /// <remarks/>
        public void GetHistoryByVehicleIdAsync(long userId, long vehicleId, long cardType, object userState) {
            if ((this.GetHistoryByVehicleIdOperationCompleted == null)) {
                this.GetHistoryByVehicleIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHistoryByVehicleIdOperationCompleted);
            }
            this.InvokeAsync("GetHistoryByVehicleId", new object[] {
                        userId,
                        vehicleId,
                        cardType}, this.GetHistoryByVehicleIdOperationCompleted, userState);
        }
        
        private void OnGetHistoryByVehicleIdOperationCompleted(object arg) {
            if ((this.GetHistoryByVehicleIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHistoryByVehicleIdCompleted(this, new GetHistoryByVehicleIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/CardsManagementProvider_SaveCard", RequestElementName="CardsManagementProvider_SaveCard", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="CardsManagementProvider_SaveCardResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("CardsManagementProvider_SaveCardResult")]
        public int SaveCard(CardModel card, out long cardID) {
            object[] results = this.Invoke("SaveCard", new object[] {
                        card});
            cardID = ((long)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveCardAsync(CardModel card) {
            this.SaveCardAsync(card, null);
        }
        
        /// <remarks/>
        public void SaveCardAsync(CardModel card, object userState) {
            if ((this.SaveCardOperationCompleted == null)) {
                this.SaveCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveCardOperationCompleted);
            }
            this.InvokeAsync("SaveCard", new object[] {
                        card}, this.SaveCardOperationCompleted, userState);
        }
        
        private void OnSaveCardOperationCompleted(object arg) {
            if ((this.SaveCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveCardCompleted(this, new SaveCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/CardManagement_GetCardByFilterList", RequestElementName="CardManagement_GetCardByFilterList", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="CardManagement_GetCardByFilterListResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("CardManagement_GetCardByFilterListResult")]
        public CardManagementFilterModel[] GetCardByFilterList(CardManagementParams filterParams) {
            object[] results = this.Invoke("GetCardByFilterList", new object[] {
                        filterParams});
            return ((CardManagementFilterModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCardByFilterListAsync(CardManagementParams filterParams) {
            this.GetCardByFilterListAsync(filterParams, null);
        }
        
        /// <remarks/>
        public void GetCardByFilterListAsync(CardManagementParams filterParams, object userState) {
            if ((this.GetCardByFilterListOperationCompleted == null)) {
                this.GetCardByFilterListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCardByFilterListOperationCompleted);
            }
            this.InvokeAsync("GetCardByFilterList", new object[] {
                        filterParams}, this.GetCardByFilterListOperationCompleted, userState);
        }
        
        private void OnGetCardByFilterListOperationCompleted(object arg) {
            if ((this.GetCardByFilterListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCardByFilterListCompleted(this, new GetCardByFilterListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/CardManagement_GetCardByFilterCount", RequestElementName="CardManagement_GetCardByFilterCount", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="CardManagement_GetCardByFilterCountResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("CardManagement_GetCardByFilterCountResult")]
        public int GetCardByFilterCount(CardManagementParams filterParams) {
            object[] results = this.Invoke("GetCardByFilterCount", new object[] {
                        filterParams});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetCardByFilterCountAsync(CardManagementParams filterParams) {
            this.GetCardByFilterCountAsync(filterParams, null);
        }
        
        /// <remarks/>
        public void GetCardByFilterCountAsync(CardManagementParams filterParams, object userState) {
            if ((this.GetCardByFilterCountOperationCompleted == null)) {
                this.GetCardByFilterCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCardByFilterCountOperationCompleted);
            }
            this.InvokeAsync("GetCardByFilterCount", new object[] {
                        filterParams}, this.GetCardByFilterCountOperationCompleted, userState);
        }
        
        private void OnGetCardByFilterCountOperationCompleted(object arg) {
            if ((this.GetCardByFilterCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCardByFilterCountCompleted(this, new GetCardByFilterCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/CardsManagementProvider_DeleteCard", RequestElementName="CardsManagementProvider_DeleteCard", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="CardsManagementProvider_DeleteCardResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("CardsManagementProvider_DeleteCardResult")]
        public int DeleteCard(long userId, long CardID) {
            object[] results = this.Invoke("DeleteCard", new object[] {
                        userId,
                        CardID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteCardAsync(long userId, long CardID) {
            this.DeleteCardAsync(userId, CardID, null);
        }
        
        /// <remarks/>
        public void DeleteCardAsync(long userId, long CardID, object userState) {
            if ((this.DeleteCardOperationCompleted == null)) {
                this.DeleteCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCardOperationCompleted);
            }
            this.InvokeAsync("DeleteCard", new object[] {
                        userId,
                        CardID}, this.DeleteCardOperationCompleted, userState);
        }
        
        private void OnDeleteCardOperationCompleted(object arg) {
            if ((this.DeleteCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCardCompleted(this, new DeleteCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/CardsManagementProvider_AssignCard", RequestElementName="CardsManagementProvider_AssignCard", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="CardsManagementProvider_AssignCardResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("CardsManagementProvider_AssignCardResult")]
        public int AssignCard(long userId, CardsHistoryModel cardAssign) {
            object[] results = this.Invoke("AssignCard", new object[] {
                        userId,
                        cardAssign});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AssignCardAsync(long userId, CardsHistoryModel cardAssign) {
            this.AssignCardAsync(userId, cardAssign, null);
        }
        
        /// <remarks/>
        public void AssignCardAsync(long userId, CardsHistoryModel cardAssign, object userState) {
            if ((this.AssignCardOperationCompleted == null)) {
                this.AssignCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAssignCardOperationCompleted);
            }
            this.InvokeAsync("AssignCard", new object[] {
                        userId,
                        cardAssign}, this.AssignCardOperationCompleted, userState);
        }
        
        private void OnAssignCardOperationCompleted(object arg) {
            if ((this.AssignCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AssignCardCompleted(this, new AssignCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/CardsManagementProvider_FilterCardsFo" +
            "rAutoComplete", RequestElementName="CardsManagementProvider_FilterCardsForAutoComplete", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="CardsManagementProvider_FilterCardsForAutoCompleteResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("CardsManagementProvider_FilterCardsForAutoCompleteResult")]
        public CardModel[] FilterCardsForAutoComplete(string filter, int beginIndex, int endIndex, string cardType) {
            object[] results = this.Invoke("FilterCardsForAutoComplete", new object[] {
                        filter,
                        beginIndex,
                        endIndex,
                        cardType});
            return ((CardModel[])(results[0]));
        }
        
        /// <remarks/>
        public void FilterCardsForAutoCompleteAsync(string filter, int beginIndex, int endIndex, string cardType) {
            this.FilterCardsForAutoCompleteAsync(filter, beginIndex, endIndex, cardType, null);
        }
        
        /// <remarks/>
        public void FilterCardsForAutoCompleteAsync(string filter, int beginIndex, int endIndex, string cardType, object userState) {
            if ((this.FilterCardsForAutoCompleteOperationCompleted == null)) {
                this.FilterCardsForAutoCompleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFilterCardsForAutoCompleteOperationCompleted);
            }
            this.InvokeAsync("FilterCardsForAutoComplete", new object[] {
                        filter,
                        beginIndex,
                        endIndex,
                        cardType}, this.FilterCardsForAutoCompleteOperationCompleted, userState);
        }
        
        private void OnFilterCardsForAutoCompleteOperationCompleted(object arg) {
            if ((this.FilterCardsForAutoCompleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FilterCardsForAutoCompleteCompleted(this, new FilterCardsForAutoCompleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/CardManagement_GetHistoryByFilterList" +
            "", RequestElementName="CardManagement_GetHistoryByFilterList", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="CardManagement_GetHistoryByFilterListResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("CardManagement_GetHistoryByFilterListResult")]
        public CardManagementHistoryFilterModel[] GetHistoryByFilterList(CardManagementParams filterParams) {
            object[] results = this.Invoke("GetHistoryByFilterList", new object[] {
                        filterParams});
            return ((CardManagementHistoryFilterModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetHistoryByFilterListAsync(CardManagementParams filterParams) {
            this.GetHistoryByFilterListAsync(filterParams, null);
        }
        
        /// <remarks/>
        public void GetHistoryByFilterListAsync(CardManagementParams filterParams, object userState) {
            if ((this.GetHistoryByFilterListOperationCompleted == null)) {
                this.GetHistoryByFilterListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHistoryByFilterListOperationCompleted);
            }
            this.InvokeAsync("GetHistoryByFilterList", new object[] {
                        filterParams}, this.GetHistoryByFilterListOperationCompleted, userState);
        }
        
        private void OnGetHistoryByFilterListOperationCompleted(object arg) {
            if ((this.GetHistoryByFilterListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHistoryByFilterListCompleted(this, new GetHistoryByFilterListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/CardManagement_GetHistoryByFilterCoun" +
            "t", RequestElementName="CardManagement_GetHistoryByFilterCount", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="CardManagement_GetHistoryByFilterCountResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("CardManagement_GetHistoryByFilterCountResult")]
        public int GetHistoryByFilterCount(CardManagementParams filterParams) {
            object[] results = this.Invoke("GetHistoryByFilterCount", new object[] {
                        filterParams});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetHistoryByFilterCountAsync(CardManagementParams filterParams) {
            this.GetHistoryByFilterCountAsync(filterParams, null);
        }
        
        /// <remarks/>
        public void GetHistoryByFilterCountAsync(CardManagementParams filterParams, object userState) {
            if ((this.GetHistoryByFilterCountOperationCompleted == null)) {
                this.GetHistoryByFilterCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHistoryByFilterCountOperationCompleted);
            }
            this.InvokeAsync("GetHistoryByFilterCount", new object[] {
                        filterParams}, this.GetHistoryByFilterCountOperationCompleted, userState);
        }
        
        private void OnGetHistoryByFilterCountOperationCompleted(object arg) {
            if ((this.GetHistoryByFilterCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHistoryByFilterCountCompleted(this, new GetHistoryByFilterCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/CardManagement_GetHistoryCount", RequestElementName="CardManagement_GetHistoryCount", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="CardManagement_GetHistoryCountResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("CardManagement_GetHistoryCountResult")]
        public int GetHistoryCount(CardManagementParams filterParams) {
            object[] results = this.Invoke("GetHistoryCount", new object[] {
                        filterParams});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetHistoryCountAsync(CardManagementParams filterParams) {
            this.GetHistoryCountAsync(filterParams, null);
        }
        
        /// <remarks/>
        public void GetHistoryCountAsync(CardManagementParams filterParams, object userState) {
            if ((this.GetHistoryCountOperationCompleted == null)) {
                this.GetHistoryCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHistoryCountOperationCompleted);
            }
            this.InvokeAsync("GetHistoryCount", new object[] {
                        filterParams}, this.GetHistoryCountOperationCompleted, userState);
        }
        
        private void OnGetHistoryCountOperationCompleted(object arg) {
            if ((this.GetHistoryCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHistoryCountCompleted(this, new GetHistoryCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/CardsManagementProvider_GetCardReport" +
            "", RequestElementName="CardsManagementProvider_GetCardReport", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="CardsManagementProvider_GetCardReportResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("CardsManagementProvider_GetCardReportResult")]
        public CardModel[] GetCardReport(System.DateTime date) {
            object[] results = this.Invoke("GetCardReport", new object[] {
                        date});
            return ((CardModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCardReportAsync(System.DateTime date) {
            this.GetCardReportAsync(date, null);
        }
        
        /// <remarks/>
        public void GetCardReportAsync(System.DateTime date, object userState) {
            if ((this.GetCardReportOperationCompleted == null)) {
                this.GetCardReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCardReportOperationCompleted);
            }
            this.InvokeAsync("GetCardReport", new object[] {
                        date}, this.GetCardReportOperationCompleted, userState);
        }
        
        private void OnGetCardReportOperationCompleted(object arg) {
            if ((this.GetCardReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCardReportCompleted(this, new GetCardReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/CardsManagementProvider_GetVehicleNam" +
            "e", RequestElementName="CardsManagementProvider_GetVehicleName", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="CardsManagementProvider_GetVehicleNameResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("CardsManagementProvider_GetVehicleNameResult")]
        public CardModel GetVehicleName(long userId, string cardNumber, int cardType, System.DateTime date) {
            object[] results = this.Invoke("GetVehicleName", new object[] {
                        userId,
                        cardNumber,
                        cardType,
                        date});
            return ((CardModel)(results[0]));
        }
        
        /// <remarks/>
        public void GetVehicleNameAsync(long userId, string cardNumber, int cardType, System.DateTime date) {
            this.GetVehicleNameAsync(userId, cardNumber, cardType, date, null);
        }
        
        /// <remarks/>
        public void GetVehicleNameAsync(long userId, string cardNumber, int cardType, System.DateTime date, object userState) {
            if ((this.GetVehicleNameOperationCompleted == null)) {
                this.GetVehicleNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVehicleNameOperationCompleted);
            }
            this.InvokeAsync("GetVehicleName", new object[] {
                        userId,
                        cardNumber,
                        cardType,
                        date}, this.GetVehicleNameOperationCompleted, userState);
        }
        
        private void OnGetVehicleNameOperationCompleted(object arg) {
            if ((this.GetVehicleNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVehicleNameCompleted(this, new GetVehicleNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ReportProvider_StartReportProcess", RequestElementName="ReportProvider_StartReportProcess", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ReportProvider_StartReportProcessResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ReportProvider_StartReportProcessResult", DataType="base64Binary")]
        public byte[] StartReportProcess(int reportType, object filterParameters, string localizedData, string mailAddress, bool isAsync) {
            object[] results = this.Invoke("StartReportProcess", new object[] {
                        reportType,
                        filterParameters,
                        localizedData,
                        mailAddress,
                        isAsync});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void StartReportProcessAsync(int reportType, object filterParameters, string localizedData, string mailAddress, bool isAsync) {
            this.StartReportProcessAsync(reportType, filterParameters, localizedData, mailAddress, isAsync, null);
        }
        
        /// <remarks/>
        public void StartReportProcessAsync(int reportType, object filterParameters, string localizedData, string mailAddress, bool isAsync, object userState) {
            if ((this.StartReportProcessOperationCompleted == null)) {
                this.StartReportProcessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartReportProcessOperationCompleted);
            }
            this.InvokeAsync("StartReportProcess", new object[] {
                        reportType,
                        filterParameters,
                        localizedData,
                        mailAddress,
                        isAsync}, this.StartReportProcessOperationCompleted, userState);
        }
        
        private void OnStartReportProcessOperationCompleted(object arg) {
            if ((this.StartReportProcessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartReportProcessCompleted(this, new StartReportProcessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ReservationModel_GetReservation", RequestElementName="ReservationModel_GetReservation", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ReservationModel_GetReservationResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ReservationModel_GetReservationResult")]
        public ReservationModel GetReservation(long userId, long reservationPk) {
            object[] results = this.Invoke("GetReservation", new object[] {
                        userId,
                        reservationPk});
            return ((ReservationModel)(results[0]));
        }
        
        /// <remarks/>
        public void GetReservationAsync(long userId, long reservationPk) {
            this.GetReservationAsync(userId, reservationPk, null);
        }
        
        /// <remarks/>
        public void GetReservationAsync(long userId, long reservationPk, object userState) {
            if ((this.GetReservationOperationCompleted == null)) {
                this.GetReservationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReservationOperationCompleted);
            }
            this.InvokeAsync("GetReservation", new object[] {
                        userId,
                        reservationPk}, this.GetReservationOperationCompleted, userState);
        }
        
        private void OnGetReservationOperationCompleted(object arg) {
            if ((this.GetReservationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReservationCompleted(this, new GetReservationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ReservationModel_GetReservationByRese" +
            "rvationId", RequestElementName="ReservationModel_GetReservationByReservationId", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ReservationModel_GetReservationByReservationIdResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ReservationModel_GetReservationByReservationIdResult")]
        public ReservationModel GetReservationByReservationId(long userId, long reservationPk) {
            object[] results = this.Invoke("GetReservationByReservationId", new object[] {
                        userId,
                        reservationPk});
            return ((ReservationModel)(results[0]));
        }
        
        /// <remarks/>
        public void GetReservationByReservationIdAsync(long userId, long reservationPk) {
            this.GetReservationByReservationIdAsync(userId, reservationPk, null);
        }
        
        /// <remarks/>
        public void GetReservationByReservationIdAsync(long userId, long reservationPk, object userState) {
            if ((this.GetReservationByReservationIdOperationCompleted == null)) {
                this.GetReservationByReservationIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReservationByReservationIdOperationCompleted);
            }
            this.InvokeAsync("GetReservationByReservationId", new object[] {
                        userId,
                        reservationPk}, this.GetReservationByReservationIdOperationCompleted, userState);
        }
        
        private void OnGetReservationByReservationIdOperationCompleted(object arg) {
            if ((this.GetReservationByReservationIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReservationByReservationIdCompleted(this, new GetReservationByReservationIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ReservationModel_GetReservations", RequestElementName="ReservationModel_GetReservations", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ReservationModel_GetReservationsResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("ReservationModel_GetReservationsResult")]
        public ReservationModel[] GetReservations(long userId, long childUserId) {
            object[] results = this.Invoke("GetReservations", new object[] {
                        userId,
                        childUserId});
            return ((ReservationModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReservationsAsync(long userId, long childUserId) {
            this.GetReservationsAsync(userId, childUserId, null);
        }
        
        /// <remarks/>
        public void GetReservationsAsync(long userId, long childUserId, object userState) {
            if ((this.GetReservationsOperationCompleted == null)) {
                this.GetReservationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReservationsOperationCompleted);
            }
            this.InvokeAsync("GetReservations", new object[] {
                        userId,
                        childUserId}, this.GetReservationsOperationCompleted, userState);
        }
        
        private void OnGetReservationsOperationCompleted(object arg) {
            if ((this.GetReservationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReservationsCompleted(this, new GetReservationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ReservationModel_FilterResForAutoComp" +
            "lete", RequestElementName="ReservationModel_FilterResForAutoComplete", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ReservationModel_FilterResForAutoCompleteResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("ReservationModel_FilterResForAutoCompleteResult")]
        public ReservationModel[] FilterReservationForAutoComplete(string filter, int beginIndex, int endIndex) {
            object[] results = this.Invoke("FilterReservationForAutoComplete", new object[] {
                        filter,
                        beginIndex,
                        endIndex});
            return ((ReservationModel[])(results[0]));
        }
        
        /// <remarks/>
        public void FilterReservationForAutoCompleteAsync(string filter, int beginIndex, int endIndex) {
            this.FilterReservationForAutoCompleteAsync(filter, beginIndex, endIndex, null);
        }
        
        /// <remarks/>
        public void FilterReservationForAutoCompleteAsync(string filter, int beginIndex, int endIndex, object userState) {
            if ((this.FilterReservationForAutoCompleteOperationCompleted == null)) {
                this.FilterReservationForAutoCompleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFilterReservationForAutoCompleteOperationCompleted);
            }
            this.InvokeAsync("FilterReservationForAutoComplete", new object[] {
                        filter,
                        beginIndex,
                        endIndex}, this.FilterReservationForAutoCompleteOperationCompleted, userState);
        }
        
        private void OnFilterReservationForAutoCompleteOperationCompleted(object arg) {
            if ((this.FilterReservationForAutoCompleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FilterReservationForAutoCompleteCompleted(this, new FilterReservationForAutoCompleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ReservationModel_GetReservationsByFil" +
            "terList", RequestElementName="ReservationModel_GetReservationsByFilterList", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ReservationModel_GetReservationsByFilterListResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("ReservationModel_GetReservationsByFilterListResult")]
        public ReservationFilterModel[] GetReservationsByFilterList(ReservationParams filterParams) {
            object[] results = this.Invoke("GetReservationsByFilterList", new object[] {
                        filterParams});
            return ((ReservationFilterModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReservationsByFilterListAsync(ReservationParams filterParams) {
            this.GetReservationsByFilterListAsync(filterParams, null);
        }
        
        /// <remarks/>
        public void GetReservationsByFilterListAsync(ReservationParams filterParams, object userState) {
            if ((this.GetReservationsByFilterListOperationCompleted == null)) {
                this.GetReservationsByFilterListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReservationsByFilterListOperationCompleted);
            }
            this.InvokeAsync("GetReservationsByFilterList", new object[] {
                        filterParams}, this.GetReservationsByFilterListOperationCompleted, userState);
        }
        
        private void OnGetReservationsByFilterListOperationCompleted(object arg) {
            if ((this.GetReservationsByFilterListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReservationsByFilterListCompleted(this, new GetReservationsByFilterListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ReservationModel_GetReservationsByFil" +
            "terCount", RequestElementName="ReservationModel_GetReservationsByFilterCount", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ReservationModel_GetReservationsByFilterCountResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ReservationModel_GetReservationsByFilterCountResult")]
        public int GetReservationsByFilterCount(ReservationParams filterParams) {
            object[] results = this.Invoke("GetReservationsByFilterCount", new object[] {
                        filterParams});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetReservationsByFilterCountAsync(ReservationParams filterParams) {
            this.GetReservationsByFilterCountAsync(filterParams, null);
        }
        
        /// <remarks/>
        public void GetReservationsByFilterCountAsync(ReservationParams filterParams, object userState) {
            if ((this.GetReservationsByFilterCountOperationCompleted == null)) {
                this.GetReservationsByFilterCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReservationsByFilterCountOperationCompleted);
            }
            this.InvokeAsync("GetReservationsByFilterCount", new object[] {
                        filterParams}, this.GetReservationsByFilterCountOperationCompleted, userState);
        }
        
        private void OnGetReservationsByFilterCountOperationCompleted(object arg) {
            if ((this.GetReservationsByFilterCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReservationsByFilterCountCompleted(this, new GetReservationsByFilterCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ReservationModel_FilterReservations", RequestElementName="ReservationModel_FilterReservations", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ReservationModel_FilterReservationsResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("ReservationModel_FilterReservationsResult")]
        public ReservationModel[] FilterReservations(string startDate, string endDate, string accountNumber, string vehicleType, string startLocation, string destinationLocation, string status, long userId, long childUserId, string vehicleFk, string driverId) {
            object[] results = this.Invoke("FilterReservations", new object[] {
                        startDate,
                        endDate,
                        accountNumber,
                        vehicleType,
                        startLocation,
                        destinationLocation,
                        status,
                        userId,
                        childUserId,
                        vehicleFk,
                        driverId});
            return ((ReservationModel[])(results[0]));
        }
        
        /// <remarks/>
        public void FilterReservationsAsync(string startDate, string endDate, string accountNumber, string vehicleType, string startLocation, string destinationLocation, string status, long userId, long childUserId, string vehicleFk, string driverId) {
            this.FilterReservationsAsync(startDate, endDate, accountNumber, vehicleType, startLocation, destinationLocation, status, userId, childUserId, vehicleFk, driverId, null);
        }
        
        /// <remarks/>
        public void FilterReservationsAsync(string startDate, string endDate, string accountNumber, string vehicleType, string startLocation, string destinationLocation, string status, long userId, long childUserId, string vehicleFk, string driverId, object userState) {
            if ((this.FilterReservationsOperationCompleted == null)) {
                this.FilterReservationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFilterReservationsOperationCompleted);
            }
            this.InvokeAsync("FilterReservations", new object[] {
                        startDate,
                        endDate,
                        accountNumber,
                        vehicleType,
                        startLocation,
                        destinationLocation,
                        status,
                        userId,
                        childUserId,
                        vehicleFk,
                        driverId}, this.FilterReservationsOperationCompleted, userState);
        }
        
        private void OnFilterReservationsOperationCompleted(object arg) {
            if ((this.FilterReservationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FilterReservationsCompleted(this, new FilterReservationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ReservationModel_SaveReservation", RequestElementName="ReservationModel_SaveReservation", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ReservationModel_SaveReservationResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ReservationModel_SaveReservationResult")]
        public int SaveReservation(ReservationModel reservation, out long newReservationID) {
            object[] results = this.Invoke("SaveReservation", new object[] {
                        reservation});
            newReservationID = ((long)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveReservationAsync(ReservationModel reservation) {
            this.SaveReservationAsync(reservation, null);
        }
        
        /// <remarks/>
        public void SaveReservationAsync(ReservationModel reservation, object userState) {
            if ((this.SaveReservationOperationCompleted == null)) {
                this.SaveReservationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveReservationOperationCompleted);
            }
            this.InvokeAsync("SaveReservation", new object[] {
                        reservation}, this.SaveReservationOperationCompleted, userState);
        }
        
        private void OnSaveReservationOperationCompleted(object arg) {
            if ((this.SaveReservationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveReservationCompleted(this, new SaveReservationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ReservationModel_GetEmployeeId", RequestElementName="ReservationModel_GetEmployeeId", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ReservationModel_GetEmployeeIdResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ReservationModel_GetEmployeeIdResult")]
        public int GetEmployeeId(long userId) {
            object[] results = this.Invoke("GetEmployeeId", new object[] {
                        userId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmployeeIdAsync(long userId) {
            this.GetEmployeeIdAsync(userId, null);
        }
        
        /// <remarks/>
        public void GetEmployeeIdAsync(long userId, object userState) {
            if ((this.GetEmployeeIdOperationCompleted == null)) {
                this.GetEmployeeIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmployeeIdOperationCompleted);
            }
            this.InvokeAsync("GetEmployeeId", new object[] {
                        userId}, this.GetEmployeeIdOperationCompleted, userState);
        }
        
        private void OnGetEmployeeIdOperationCompleted(object arg) {
            if ((this.GetEmployeeIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmployeeIdCompleted(this, new GetEmployeeIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ReservationModel_GetReservationIdByAs" +
            "signedVehicleId", RequestElementName="ReservationModel_GetReservationIdByAssignedVehicleId", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ReservationModel_GetReservationIdByAssignedVehicleIdResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ReservationModel_GetReservationIdByAssignedVehicleIdResult")]
        public long GetReservationIdByAssignedVehicleId(string vehicleId) {
            object[] results = this.Invoke("GetReservationIdByAssignedVehicleId", new object[] {
                        vehicleId});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetReservationIdByAssignedVehicleIdAsync(string vehicleId) {
            this.GetReservationIdByAssignedVehicleIdAsync(vehicleId, null);
        }
        
        /// <remarks/>
        public void GetReservationIdByAssignedVehicleIdAsync(string vehicleId, object userState) {
            if ((this.GetReservationIdByAssignedVehicleIdOperationCompleted == null)) {
                this.GetReservationIdByAssignedVehicleIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReservationIdByAssignedVehicleIdOperationCompleted);
            }
            this.InvokeAsync("GetReservationIdByAssignedVehicleId", new object[] {
                        vehicleId}, this.GetReservationIdByAssignedVehicleIdOperationCompleted, userState);
        }
        
        private void OnGetReservationIdByAssignedVehicleIdOperationCompleted(object arg) {
            if ((this.GetReservationIdByAssignedVehicleIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReservationIdByAssignedVehicleIdCompleted(this, new GetReservationIdByAssignedVehicleIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/Utilities_GetVersion", RequestElementName="Utilities_GetVersion", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="Utilities_GetVersionResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Utilities_GetVersionResult")]
        public string GetVersion() {
            object[] results = this.Invoke("GetVersion", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetVersionAsync() {
            this.GetVersionAsync(null);
        }
        
        /// <remarks/>
        public void GetVersionAsync(object userState) {
            if ((this.GetVersionOperationCompleted == null)) {
                this.GetVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVersionOperationCompleted);
            }
            this.InvokeAsync("GetVersion", new object[0], this.GetVersionOperationCompleted, userState);
        }
        
        private void OnGetVersionOperationCompleted(object arg) {
            if ((this.GetVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVersionCompleted(this, new GetVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/RelationProvider_GetRelation", RequestElementName="RelationProvider_GetRelation", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="RelationProvider_GetRelationResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("RelationProvider_GetRelationResult")]
        public RelationModel GetRelation(long userId, long relationId) {
            object[] results = this.Invoke("GetRelation", new object[] {
                        userId,
                        relationId});
            return ((RelationModel)(results[0]));
        }
        
        /// <remarks/>
        public void GetRelationAsync(long userId, long relationId) {
            this.GetRelationAsync(userId, relationId, null);
        }
        
        /// <remarks/>
        public void GetRelationAsync(long userId, long relationId, object userState) {
            if ((this.GetRelationOperationCompleted == null)) {
                this.GetRelationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRelationOperationCompleted);
            }
            this.InvokeAsync("GetRelation", new object[] {
                        userId,
                        relationId}, this.GetRelationOperationCompleted, userState);
        }
        
        private void OnGetRelationOperationCompleted(object arg) {
            if ((this.GetRelationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRelationCompleted(this, new GetRelationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/RelationProvider_GetAllRelations", RequestElementName="RelationProvider_GetAllRelations", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="RelationProvider_GetAllRelationsResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("RelationProvider_GetAllRelationsResult")]
        public RelationModel[] GetAllRelations(long userId) {
            object[] results = this.Invoke("GetAllRelations", new object[] {
                        userId});
            return ((RelationModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllRelationsAsync(long userId) {
            this.GetAllRelationsAsync(userId, null);
        }
        
        /// <remarks/>
        public void GetAllRelationsAsync(long userId, object userState) {
            if ((this.GetAllRelationsOperationCompleted == null)) {
                this.GetAllRelationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllRelationsOperationCompleted);
            }
            this.InvokeAsync("GetAllRelations", new object[] {
                        userId}, this.GetAllRelationsOperationCompleted, userState);
        }
        
        private void OnGetAllRelationsOperationCompleted(object arg) {
            if ((this.GetAllRelationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllRelationsCompleted(this, new GetAllRelationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/RelationProvider_SaveRelation", RequestElementName="RelationProvider_SaveRelation", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="RelationProvider_SaveRelationResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("RelationProvider_SaveRelationResult")]
        public int SaveRelation(RelationModel obj, out long newId) {
            object[] results = this.Invoke("SaveRelation", new object[] {
                        obj});
            newId = ((long)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveRelationAsync(RelationModel obj) {
            this.SaveRelationAsync(obj, null);
        }
        
        /// <remarks/>
        public void SaveRelationAsync(RelationModel obj, object userState) {
            if ((this.SaveRelationOperationCompleted == null)) {
                this.SaveRelationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveRelationOperationCompleted);
            }
            this.InvokeAsync("SaveRelation", new object[] {
                        obj}, this.SaveRelationOperationCompleted, userState);
        }
        
        private void OnSaveRelationOperationCompleted(object arg) {
            if ((this.SaveRelationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveRelationCompleted(this, new SaveRelationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/RelationProvider_GetRelationsByFilter" +
            "", RequestElementName="RelationProvider_GetRelationsByFilter", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="RelationProvider_GetRelationsByFilterResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("RelationProvider_GetRelationsByFilterResult")]
        public RelationModel[] GetRelationsByFilter(long userId, string name, string code, long transportType, long meansOfTransport, long transporter) {
            object[] results = this.Invoke("GetRelationsByFilter", new object[] {
                        userId,
                        name,
                        code,
                        transportType,
                        meansOfTransport,
                        transporter});
            return ((RelationModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRelationsByFilterAsync(long userId, string name, string code, long transportType, long meansOfTransport, long transporter) {
            this.GetRelationsByFilterAsync(userId, name, code, transportType, meansOfTransport, transporter, null);
        }
        
        /// <remarks/>
        public void GetRelationsByFilterAsync(long userId, string name, string code, long transportType, long meansOfTransport, long transporter, object userState) {
            if ((this.GetRelationsByFilterOperationCompleted == null)) {
                this.GetRelationsByFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRelationsByFilterOperationCompleted);
            }
            this.InvokeAsync("GetRelationsByFilter", new object[] {
                        userId,
                        name,
                        code,
                        transportType,
                        meansOfTransport,
                        transporter}, this.GetRelationsByFilterOperationCompleted, userState);
        }
        
        private void OnGetRelationsByFilterOperationCompleted(object arg) {
            if ((this.GetRelationsByFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRelationsByFilterCompleted(this, new GetRelationsByFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/RelationProvider_GetRelationsByFilter" +
            "List", RequestElementName="RelationProvider_GetRelationsByFilterList", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="RelationProvider_GetRelationsByFilterListResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("RelationProvider_GetRelationsByFilterListResult")]
        public RelationFilterModel[] GetRelationsByFilterList(RelationParams filterParams) {
            object[] results = this.Invoke("GetRelationsByFilterList", new object[] {
                        filterParams});
            return ((RelationFilterModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRelationsByFilterListAsync(RelationParams filterParams) {
            this.GetRelationsByFilterListAsync(filterParams, null);
        }
        
        /// <remarks/>
        public void GetRelationsByFilterListAsync(RelationParams filterParams, object userState) {
            if ((this.GetRelationsByFilterListOperationCompleted == null)) {
                this.GetRelationsByFilterListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRelationsByFilterListOperationCompleted);
            }
            this.InvokeAsync("GetRelationsByFilterList", new object[] {
                        filterParams}, this.GetRelationsByFilterListOperationCompleted, userState);
        }
        
        private void OnGetRelationsByFilterListOperationCompleted(object arg) {
            if ((this.GetRelationsByFilterListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRelationsByFilterListCompleted(this, new GetRelationsByFilterListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/RelationProvider_GetRelationsByFilter" +
            "Count", RequestElementName="RelationProvider_GetRelationsByFilterCount", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="RelationProvider_GetRelationsByFilterCountResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("RelationProvider_GetRelationsByFilterCountResult")]
        public int GetRelationsByFilterCount(RelationParams filterParams) {
            object[] results = this.Invoke("GetRelationsByFilterCount", new object[] {
                        filterParams});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetRelationsByFilterCountAsync(RelationParams filterParams) {
            this.GetRelationsByFilterCountAsync(filterParams, null);
        }
        
        /// <remarks/>
        public void GetRelationsByFilterCountAsync(RelationParams filterParams, object userState) {
            if ((this.GetRelationsByFilterCountOperationCompleted == null)) {
                this.GetRelationsByFilterCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRelationsByFilterCountOperationCompleted);
            }
            this.InvokeAsync("GetRelationsByFilterCount", new object[] {
                        filterParams}, this.GetRelationsByFilterCountOperationCompleted, userState);
        }
        
        private void OnGetRelationsByFilterCountOperationCompleted(object arg) {
            if ((this.GetRelationsByFilterCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRelationsByFilterCountCompleted(this, new GetRelationsByFilterCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/RelationProvider_FilterRelationsForAu" +
            "toComplete", RequestElementName="RelationProvider_FilterRelationsForAutoComplete", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="RelationProvider_FilterRelationsForAutoCompleteResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("RelationProvider_FilterRelationsForAutoCompleteResult")]
        public RelationModel[] FilterRelationsForAutoComplete(string filter, int beginIndex, int endIndex) {
            object[] results = this.Invoke("FilterRelationsForAutoComplete", new object[] {
                        filter,
                        beginIndex,
                        endIndex});
            return ((RelationModel[])(results[0]));
        }
        
        /// <remarks/>
        public void FilterRelationsForAutoCompleteAsync(string filter, int beginIndex, int endIndex) {
            this.FilterRelationsForAutoCompleteAsync(filter, beginIndex, endIndex, null);
        }
        
        /// <remarks/>
        public void FilterRelationsForAutoCompleteAsync(string filter, int beginIndex, int endIndex, object userState) {
            if ((this.FilterRelationsForAutoCompleteOperationCompleted == null)) {
                this.FilterRelationsForAutoCompleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFilterRelationsForAutoCompleteOperationCompleted);
            }
            this.InvokeAsync("FilterRelationsForAutoComplete", new object[] {
                        filter,
                        beginIndex,
                        endIndex}, this.FilterRelationsForAutoCompleteOperationCompleted, userState);
        }
        
        private void OnFilterRelationsForAutoCompleteOperationCompleted(object arg) {
            if ((this.FilterRelationsForAutoCompleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FilterRelationsForAutoCompleteCompleted(this, new FilterRelationsForAutoCompleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/RelationProvider_DeleteRelation", RequestElementName="RelationProvider_DeleteRelation", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="RelationProvider_DeleteRelationResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("RelationProvider_DeleteRelationResult")]
        public int DeleteRelation(long id) {
            object[] results = this.Invoke("DeleteRelation", new object[] {
                        id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteRelationAsync(long id) {
            this.DeleteRelationAsync(id, null);
        }
        
        /// <remarks/>
        public void DeleteRelationAsync(long id, object userState) {
            if ((this.DeleteRelationOperationCompleted == null)) {
                this.DeleteRelationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteRelationOperationCompleted);
            }
            this.InvokeAsync("DeleteRelation", new object[] {
                        id}, this.DeleteRelationOperationCompleted, userState);
        }
        
        private void OnDeleteRelationOperationCompleted(object arg) {
            if ((this.DeleteRelationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteRelationCompleted(this, new DeleteRelationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/RelationLocationProvider_GetRelationL" +
            "ocationsByFilterList", RequestElementName="RelationLocationProvider_GetRelationLocationsByFilterList", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="RelationLocationProvider_GetRelationLocationsByFilterListResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("RelationLocationProvider_GetRelationLocationsByFilterListResult")]
        public RelationLocationFilterModel[] GetRelationLocationsByFilterList(FilterParamsModel filterParams, int relationId, long userId) {
            object[] results = this.Invoke("GetRelationLocationsByFilterList", new object[] {
                        filterParams,
                        relationId,
                        userId});
            return ((RelationLocationFilterModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRelationLocationsByFilterListAsync(FilterParamsModel filterParams, int relationId, long userId) {
            this.GetRelationLocationsByFilterListAsync(filterParams, relationId, userId, null);
        }
        
        /// <remarks/>
        public void GetRelationLocationsByFilterListAsync(FilterParamsModel filterParams, int relationId, long userId, object userState) {
            if ((this.GetRelationLocationsByFilterListOperationCompleted == null)) {
                this.GetRelationLocationsByFilterListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRelationLocationsByFilterListOperationCompleted);
            }
            this.InvokeAsync("GetRelationLocationsByFilterList", new object[] {
                        filterParams,
                        relationId,
                        userId}, this.GetRelationLocationsByFilterListOperationCompleted, userState);
        }
        
        private void OnGetRelationLocationsByFilterListOperationCompleted(object arg) {
            if ((this.GetRelationLocationsByFilterListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRelationLocationsByFilterListCompleted(this, new GetRelationLocationsByFilterListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/RelationLocationProvider_GetRelationL" +
            "ocationsByFilterCount", RequestElementName="RelationLocationProvider_GetRelationLocationsByFilterCount", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="RelationLocationProvider_GetRelationLocationsByFilterCountResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("RelationLocationProvider_GetRelationLocationsByFilterCountResult")]
        public int GetRelationLocationsByFilterCount(FilterParamsModel filterParams, int relationId, long userId) {
            object[] results = this.Invoke("GetRelationLocationsByFilterCount", new object[] {
                        filterParams,
                        relationId,
                        userId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetRelationLocationsByFilterCountAsync(FilterParamsModel filterParams, int relationId, long userId) {
            this.GetRelationLocationsByFilterCountAsync(filterParams, relationId, userId, null);
        }
        
        /// <remarks/>
        public void GetRelationLocationsByFilterCountAsync(FilterParamsModel filterParams, int relationId, long userId, object userState) {
            if ((this.GetRelationLocationsByFilterCountOperationCompleted == null)) {
                this.GetRelationLocationsByFilterCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRelationLocationsByFilterCountOperationCompleted);
            }
            this.InvokeAsync("GetRelationLocationsByFilterCount", new object[] {
                        filterParams,
                        relationId,
                        userId}, this.GetRelationLocationsByFilterCountOperationCompleted, userState);
        }
        
        private void OnGetRelationLocationsByFilterCountOperationCompleted(object arg) {
            if ((this.GetRelationLocationsByFilterCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRelationLocationsByFilterCountCompleted(this, new GetRelationLocationsByFilterCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/RelationLocation_GetRelationLocation", RequestElementName="RelationLocation_GetRelationLocation", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="RelationLocation_GetRelationLocationResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("RelationLocation_GetRelationLocationResult")]
        public RelationLocationModel[] GetRelationLocation(long relId) {
            object[] results = this.Invoke("GetRelationLocation", new object[] {
                        relId});
            return ((RelationLocationModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRelationLocationAsync(long relId) {
            this.GetRelationLocationAsync(relId, null);
        }
        
        /// <remarks/>
        public void GetRelationLocationAsync(long relId, object userState) {
            if ((this.GetRelationLocationOperationCompleted == null)) {
                this.GetRelationLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRelationLocationOperationCompleted);
            }
            this.InvokeAsync("GetRelationLocation", new object[] {
                        relId}, this.GetRelationLocationOperationCompleted, userState);
        }
        
        private void OnGetRelationLocationOperationCompleted(object arg) {
            if ((this.GetRelationLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRelationLocationCompleted(this, new GetRelationLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/RelationLocation_GetRelationLocationB" +
            "yId", RequestElementName="RelationLocation_GetRelationLocationById", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="RelationLocation_GetRelationLocationByIdResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("RelationLocation_GetRelationLocationByIdResult")]
        public RelationLocationModel GetRelationLocationById(long relLocationId) {
            object[] results = this.Invoke("GetRelationLocationById", new object[] {
                        relLocationId});
            return ((RelationLocationModel)(results[0]));
        }
        
        /// <remarks/>
        public void GetRelationLocationByIdAsync(long relLocationId) {
            this.GetRelationLocationByIdAsync(relLocationId, null);
        }
        
        /// <remarks/>
        public void GetRelationLocationByIdAsync(long relLocationId, object userState) {
            if ((this.GetRelationLocationByIdOperationCompleted == null)) {
                this.GetRelationLocationByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRelationLocationByIdOperationCompleted);
            }
            this.InvokeAsync("GetRelationLocationById", new object[] {
                        relLocationId}, this.GetRelationLocationByIdOperationCompleted, userState);
        }
        
        private void OnGetRelationLocationByIdOperationCompleted(object arg) {
            if ((this.GetRelationLocationByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRelationLocationByIdCompleted(this, new GetRelationLocationByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/RelationLocationProvider_SaveRelation" +
            "Location", RequestElementName="RelationLocationProvider_SaveRelationLocation", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="RelationLocationProvider_SaveRelationLocationResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("RelationLocationProvider_SaveRelationLocationResult")]
        public int SaveRelationLocation(RelationLocationModel obj, out long newId) {
            object[] results = this.Invoke("SaveRelationLocation", new object[] {
                        obj});
            newId = ((long)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveRelationLocationAsync(RelationLocationModel obj) {
            this.SaveRelationLocationAsync(obj, null);
        }
        
        /// <remarks/>
        public void SaveRelationLocationAsync(RelationLocationModel obj, object userState) {
            if ((this.SaveRelationLocationOperationCompleted == null)) {
                this.SaveRelationLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveRelationLocationOperationCompleted);
            }
            this.InvokeAsync("SaveRelationLocation", new object[] {
                        obj}, this.SaveRelationLocationOperationCompleted, userState);
        }
        
        private void OnSaveRelationLocationOperationCompleted(object arg) {
            if ((this.SaveRelationLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveRelationLocationCompleted(this, new SaveRelationLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/RelationLocationProvider_DeleteRelati" +
            "onLocation", RequestElementName="RelationLocationProvider_DeleteRelationLocation", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="RelationLocationProvider_DeleteRelationLocationResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("RelationLocationProvider_DeleteRelationLocationResult")]
        public int DeleteRelationLocation(long userId, long id) {
            object[] results = this.Invoke("DeleteRelationLocation", new object[] {
                        userId,
                        id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteRelationLocationAsync(long userId, long id) {
            this.DeleteRelationLocationAsync(userId, id, null);
        }
        
        /// <remarks/>
        public void DeleteRelationLocationAsync(long userId, long id, object userState) {
            if ((this.DeleteRelationLocationOperationCompleted == null)) {
                this.DeleteRelationLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteRelationLocationOperationCompleted);
            }
            this.InvokeAsync("DeleteRelationLocation", new object[] {
                        userId,
                        id}, this.DeleteRelationLocationOperationCompleted, userState);
        }
        
        private void OnDeleteRelationLocationOperationCompleted(object arg) {
            if ((this.DeleteRelationLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteRelationLocationCompleted(this, new DeleteRelationLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/RelationLocationProvider_SaveWageMark" +
            "ers", RequestElementName="RelationLocationProvider_SaveWageMarkers", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="RelationLocationProvider_SaveWageMarkersResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("RelationLocationProvider_SaveWageMarkersResult")]
        public int SaveWageMarkers(long relationId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<long> relationLocationId1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<long> relationLocationId2) {
            object[] results = this.Invoke("SaveWageMarkers", new object[] {
                        relationId,
                        relationLocationId1,
                        relationLocationId2});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveWageMarkersAsync(long relationId, System.Nullable<long> relationLocationId1, System.Nullable<long> relationLocationId2) {
            this.SaveWageMarkersAsync(relationId, relationLocationId1, relationLocationId2, null);
        }
        
        /// <remarks/>
        public void SaveWageMarkersAsync(long relationId, System.Nullable<long> relationLocationId1, System.Nullable<long> relationLocationId2, object userState) {
            if ((this.SaveWageMarkersOperationCompleted == null)) {
                this.SaveWageMarkersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveWageMarkersOperationCompleted);
            }
            this.InvokeAsync("SaveWageMarkers", new object[] {
                        relationId,
                        relationLocationId1,
                        relationLocationId2}, this.SaveWageMarkersOperationCompleted, userState);
        }
        
        private void OnSaveWageMarkersOperationCompleted(object arg) {
            if ((this.SaveWageMarkersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveWageMarkersCompleted(this, new SaveWageMarkersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/RelationLocationProvider_UpdateWageMa" +
            "rkers", RequestElementName="RelationLocationProvider_UpdateWageMarkers", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="RelationLocationProvider_UpdateWageMarkersResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("RelationLocationProvider_UpdateWageMarkersResult")]
        public int UpdateWageMarkers(long relationId, long relationLocationId1, long relationLocationId2) {
            object[] results = this.Invoke("UpdateWageMarkers", new object[] {
                        relationId,
                        relationLocationId1,
                        relationLocationId2});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateWageMarkersAsync(long relationId, long relationLocationId1, long relationLocationId2) {
            this.UpdateWageMarkersAsync(relationId, relationLocationId1, relationLocationId2, null);
        }
        
        /// <remarks/>
        public void UpdateWageMarkersAsync(long relationId, long relationLocationId1, long relationLocationId2, object userState) {
            if ((this.UpdateWageMarkersOperationCompleted == null)) {
                this.UpdateWageMarkersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateWageMarkersOperationCompleted);
            }
            this.InvokeAsync("UpdateWageMarkers", new object[] {
                        relationId,
                        relationLocationId1,
                        relationLocationId2}, this.UpdateWageMarkersOperationCompleted, userState);
        }
        
        private void OnUpdateWageMarkersOperationCompleted(object arg) {
            if ((this.UpdateWageMarkersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateWageMarkersCompleted(this, new UpdateWageMarkersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/RelationLocationInstanceProvider_GetR" +
            "elationLocationInstanceByPrlId", RequestElementName="RelationLocationInstanceProvider_GetRelationLocationInstanceByPrlId", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="RelationLocationInstanceProvider_GetRelationLocationInstanceByPrlIdResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("RelationLocationInstanceProvider_GetRelationLocationInstanceByPrlIdResult")]
        public RelationLocationInstanceModel[] GetRelationLocationInstancesByPrlId(long relPrlId) {
            object[] results = this.Invoke("GetRelationLocationInstancesByPrlId", new object[] {
                        relPrlId});
            return ((RelationLocationInstanceModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRelationLocationInstancesByPrlIdAsync(long relPrlId) {
            this.GetRelationLocationInstancesByPrlIdAsync(relPrlId, null);
        }
        
        /// <remarks/>
        public void GetRelationLocationInstancesByPrlIdAsync(long relPrlId, object userState) {
            if ((this.GetRelationLocationInstancesByPrlIdOperationCompleted == null)) {
                this.GetRelationLocationInstancesByPrlIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRelationLocationInstancesByPrlIdOperationCompleted);
            }
            this.InvokeAsync("GetRelationLocationInstancesByPrlId", new object[] {
                        relPrlId}, this.GetRelationLocationInstancesByPrlIdOperationCompleted, userState);
        }
        
        private void OnGetRelationLocationInstancesByPrlIdOperationCompleted(object arg) {
            if ((this.GetRelationLocationInstancesByPrlIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRelationLocationInstancesByPrlIdCompleted(this, new GetRelationLocationInstancesByPrlIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/RelationLocationInstanceProvider_Save" +
            "RelationLocationInstance", RequestElementName="RelationLocationInstanceProvider_SaveRelationLocationInstance", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="RelationLocationInstanceProvider_SaveRelationLocationInstanceResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("RelationLocationInstanceProvider_SaveRelationLocationInstanceResult")]
        public int SaveRelationLocationInstance(RelationLocationInstanceModel obj) {
            object[] results = this.Invoke("SaveRelationLocationInstance", new object[] {
                        obj});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveRelationLocationInstanceAsync(RelationLocationInstanceModel obj) {
            this.SaveRelationLocationInstanceAsync(obj, null);
        }
        
        /// <remarks/>
        public void SaveRelationLocationInstanceAsync(RelationLocationInstanceModel obj, object userState) {
            if ((this.SaveRelationLocationInstanceOperationCompleted == null)) {
                this.SaveRelationLocationInstanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveRelationLocationInstanceOperationCompleted);
            }
            this.InvokeAsync("SaveRelationLocationInstance", new object[] {
                        obj}, this.SaveRelationLocationInstanceOperationCompleted, userState);
        }
        
        private void OnSaveRelationLocationInstanceOperationCompleted(object arg) {
            if ((this.SaveRelationLocationInstanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveRelationLocationInstanceCompleted(this, new SaveRelationLocationInstanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/Upload file provider", RequestElementName="Upload file provider", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="Upload file providerResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Upload file providerResult")]
        public bool UploadFileData(UploadFileDataModel fileData) {
            object[] results = this.Invoke("UploadFileData", new object[] {
                        fileData});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UploadFileDataAsync(UploadFileDataModel fileData) {
            this.UploadFileDataAsync(fileData, null);
        }
        
        /// <remarks/>
        public void UploadFileDataAsync(UploadFileDataModel fileData, object userState) {
            if ((this.UploadFileDataOperationCompleted == null)) {
                this.UploadFileDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadFileDataOperationCompleted);
            }
            this.InvokeAsync("UploadFileData", new object[] {
                        fileData}, this.UploadFileDataOperationCompleted, userState);
        }
        
        private void OnUploadFileDataOperationCompleted(object arg) {
            if ((this.UploadFileDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadFileDataCompleted(this, new UploadFileDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/Check if file is valid", RequestElementName="Check if file is valid", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="Check if file is validResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Check if file is validResult")]
        public bool IsUploadedFileDataValid(string fileName) {
            object[] results = this.Invoke("IsUploadedFileDataValid", new object[] {
                        fileName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsUploadedFileDataValidAsync(string fileName) {
            this.IsUploadedFileDataValidAsync(fileName, null);
        }
        
        /// <remarks/>
        public void IsUploadedFileDataValidAsync(string fileName, object userState) {
            if ((this.IsUploadedFileDataValidOperationCompleted == null)) {
                this.IsUploadedFileDataValidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsUploadedFileDataValidOperationCompleted);
            }
            this.InvokeAsync("IsUploadedFileDataValid", new object[] {
                        fileName}, this.IsUploadedFileDataValidOperationCompleted, userState);
        }
        
        private void OnIsUploadedFileDataValidOperationCompleted(object arg) {
            if ((this.IsUploadedFileDataValidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsUploadedFileDataValidCompleted(this, new IsUploadedFileDataValidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/Retreive progress of file processing " +
            "", RequestElementName="Retreive progress of file processing ", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="Retreive progress of file processing Response", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Retreive progress of file processing Result")]
        public int ProcessUploadedFileProgress(string fileId) {
            object[] results = this.Invoke("ProcessUploadedFileProgress", new object[] {
                        fileId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ProcessUploadedFileProgressAsync(string fileId) {
            this.ProcessUploadedFileProgressAsync(fileId, null);
        }
        
        /// <remarks/>
        public void ProcessUploadedFileProgressAsync(string fileId, object userState) {
            if ((this.ProcessUploadedFileProgressOperationCompleted == null)) {
                this.ProcessUploadedFileProgressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcessUploadedFileProgressOperationCompleted);
            }
            this.InvokeAsync("ProcessUploadedFileProgress", new object[] {
                        fileId}, this.ProcessUploadedFileProgressOperationCompleted, userState);
        }
        
        private void OnProcessUploadedFileProgressOperationCompleted(object arg) {
            if ((this.ProcessUploadedFileProgressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcessUploadedFileProgressCompleted(this, new ProcessUploadedFileProgressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/Retreive processing log of file proce" +
            "ssing ", RequestElementName="Retreive processing log of file processing ", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="Retreive processing log of file processing Response", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Retreive processing log of file processing Result")]
        public ExpenseProcessingLogModel GetProcessingLogData(string fileId) {
            object[] results = this.Invoke("GetProcessingLogData", new object[] {
                        fileId});
            return ((ExpenseProcessingLogModel)(results[0]));
        }
        
        /// <remarks/>
        public void GetProcessingLogDataAsync(string fileId) {
            this.GetProcessingLogDataAsync(fileId, null);
        }
        
        /// <remarks/>
        public void GetProcessingLogDataAsync(string fileId, object userState) {
            if ((this.GetProcessingLogDataOperationCompleted == null)) {
                this.GetProcessingLogDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProcessingLogDataOperationCompleted);
            }
            this.InvokeAsync("GetProcessingLogData", new object[] {
                        fileId}, this.GetProcessingLogDataOperationCompleted, userState);
        }
        
        private void OnGetProcessingLogDataOperationCompleted(object arg) {
            if ((this.GetProcessingLogDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProcessingLogDataCompleted(this, new GetProcessingLogDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/Retreive error count for file ", RequestElementName="Retreive error count for file ", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="Retreive error count for file Response", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Retreive error count for file Result")]
        public int UploadedFileErrorCount(string fileId) {
            object[] results = this.Invoke("UploadedFileErrorCount", new object[] {
                        fileId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UploadedFileErrorCountAsync(string fileId) {
            this.UploadedFileErrorCountAsync(fileId, null);
        }
        
        /// <remarks/>
        public void UploadedFileErrorCountAsync(string fileId, object userState) {
            if ((this.UploadedFileErrorCountOperationCompleted == null)) {
                this.UploadedFileErrorCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadedFileErrorCountOperationCompleted);
            }
            this.InvokeAsync("UploadedFileErrorCount", new object[] {
                        fileId}, this.UploadedFileErrorCountOperationCompleted, userState);
        }
        
        private void OnUploadedFileErrorCountOperationCompleted(object arg) {
            if ((this.UploadedFileErrorCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadedFileErrorCountCompleted(this, new UploadedFileErrorCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/Process uploaded file", RequestElementName="Process uploaded file", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="Process uploaded fileResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Process uploaded fileResult")]
        public bool ProcessUploadedFile(string fileName, long userId, string fileId, TypeOfUploadFiles fileType) {
            object[] results = this.Invoke("ProcessUploadedFile", new object[] {
                        fileName,
                        userId,
                        fileId,
                        fileType});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ProcessUploadedFileAsync(string fileName, long userId, string fileId, TypeOfUploadFiles fileType) {
            this.ProcessUploadedFileAsync(fileName, userId, fileId, fileType, null);
        }
        
        /// <remarks/>
        public void ProcessUploadedFileAsync(string fileName, long userId, string fileId, TypeOfUploadFiles fileType, object userState) {
            if ((this.ProcessUploadedFileOperationCompleted == null)) {
                this.ProcessUploadedFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcessUploadedFileOperationCompleted);
            }
            this.InvokeAsync("ProcessUploadedFile", new object[] {
                        fileName,
                        userId,
                        fileId,
                        fileType}, this.ProcessUploadedFileOperationCompleted, userState);
        }
        
        private void OnProcessUploadedFileOperationCompleted(object arg) {
            if ((this.ProcessUploadedFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcessUploadedFileCompleted(this, new ProcessUploadedFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/PRLProvider_SavePRL", RequestElementName="PRLProvider_SavePRL", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="PRLProvider_SavePRLResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("PRLProvider_SavePRLResult")]
        public int SavePRL(PRLModel prl, out long newPrlId) {
            object[] results = this.Invoke("SavePRL", new object[] {
                        prl});
            newPrlId = ((long)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SavePRLAsync(PRLModel prl) {
            this.SavePRLAsync(prl, null);
        }
        
        /// <remarks/>
        public void SavePRLAsync(PRLModel prl, object userState) {
            if ((this.SavePRLOperationCompleted == null)) {
                this.SavePRLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavePRLOperationCompleted);
            }
            this.InvokeAsync("SavePRL", new object[] {
                        prl}, this.SavePRLOperationCompleted, userState);
        }
        
        private void OnSavePRLOperationCompleted(object arg) {
            if ((this.SavePRLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SavePRLCompleted(this, new SavePRLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/PRLProvider_GetPRLByPrlId", RequestElementName="PRLProvider_GetPRLByPrlId", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="PRLProvider_GetPRLByPrlIdResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("PRLProvider_GetPRLByPrlIdResult")]
        public PRLModel GetPRLByPrlId(long userId, long prlId) {
            object[] results = this.Invoke("GetPRLByPrlId", new object[] {
                        userId,
                        prlId});
            return ((PRLModel)(results[0]));
        }
        
        /// <remarks/>
        public void GetPRLByPrlIdAsync(long userId, long prlId) {
            this.GetPRLByPrlIdAsync(userId, prlId, null);
        }
        
        /// <remarks/>
        public void GetPRLByPrlIdAsync(long userId, long prlId, object userState) {
            if ((this.GetPRLByPrlIdOperationCompleted == null)) {
                this.GetPRLByPrlIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPRLByPrlIdOperationCompleted);
            }
            this.InvokeAsync("GetPRLByPrlId", new object[] {
                        userId,
                        prlId}, this.GetPRLByPrlIdOperationCompleted, userState);
        }
        
        private void OnGetPRLByPrlIdOperationCompleted(object arg) {
            if ((this.GetPRLByPrlIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPRLByPrlIdCompleted(this, new GetPRLByPrlIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/PRLProvider_GetAlPRLs", RequestElementName="PRLProvider_GetAlPRLs", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="PRLProvider_GetAlPRLsResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("PRLProvider_GetAlPRLsResult")]
        public PRLModel[] GetAllPRLs(long userId) {
            object[] results = this.Invoke("GetAllPRLs", new object[] {
                        userId});
            return ((PRLModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllPRLsAsync(long userId) {
            this.GetAllPRLsAsync(userId, null);
        }
        
        /// <remarks/>
        public void GetAllPRLsAsync(long userId, object userState) {
            if ((this.GetAllPRLsOperationCompleted == null)) {
                this.GetAllPRLsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllPRLsOperationCompleted);
            }
            this.InvokeAsync("GetAllPRLs", new object[] {
                        userId}, this.GetAllPRLsOperationCompleted, userState);
        }
        
        private void OnGetAllPRLsOperationCompleted(object arg) {
            if ((this.GetAllPRLsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllPRLsCompleted(this, new GetAllPRLsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/PRLProvider_GetPRLByFilter", RequestElementName="PRLProvider_GetPRLByFilter", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="PRLProvider_GetPRLByFilterResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("PRLProvider_GetPRLByFilterResult")]
        public PRLModel[] GetPRLByFilter(PrlParams prlParams) {
            object[] results = this.Invoke("GetPRLByFilter", new object[] {
                        prlParams});
            return ((PRLModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPRLByFilterAsync(PrlParams prlParams) {
            this.GetPRLByFilterAsync(prlParams, null);
        }
        
        /// <remarks/>
        public void GetPRLByFilterAsync(PrlParams prlParams, object userState) {
            if ((this.GetPRLByFilterOperationCompleted == null)) {
                this.GetPRLByFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPRLByFilterOperationCompleted);
            }
            this.InvokeAsync("GetPRLByFilter", new object[] {
                        prlParams}, this.GetPRLByFilterOperationCompleted, userState);
        }
        
        private void OnGetPRLByFilterOperationCompleted(object arg) {
            if ((this.GetPRLByFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPRLByFilterCompleted(this, new GetPRLByFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/PRLProvider_GetPrlByFilterList", RequestElementName="PRLProvider_GetPrlByFilterList", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="PRLProvider_GetPrlByFilterListResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("PRLProvider_GetPrlByFilterListResult")]
        public PrlFilterModel[] GetPrlByFilterList(PrlParams prlParams) {
            object[] results = this.Invoke("GetPrlByFilterList", new object[] {
                        prlParams});
            return ((PrlFilterModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPrlByFilterListAsync(PrlParams prlParams) {
            this.GetPrlByFilterListAsync(prlParams, null);
        }
        
        /// <remarks/>
        public void GetPrlByFilterListAsync(PrlParams prlParams, object userState) {
            if ((this.GetPrlByFilterListOperationCompleted == null)) {
                this.GetPrlByFilterListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrlByFilterListOperationCompleted);
            }
            this.InvokeAsync("GetPrlByFilterList", new object[] {
                        prlParams}, this.GetPrlByFilterListOperationCompleted, userState);
        }
        
        private void OnGetPrlByFilterListOperationCompleted(object arg) {
            if ((this.GetPrlByFilterListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrlByFilterListCompleted(this, new GetPrlByFilterListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/PRLProvider_GetPRLByFilterCount", RequestElementName="PRLProvider_GetPRLByFilterCount", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="PRLProvider_GetPRLByFilterCountResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("PRLProvider_GetPRLByFilterCountResult")]
        public int GetPRLByFilterCount(PrlParams prlParams) {
            object[] results = this.Invoke("GetPRLByFilterCount", new object[] {
                        prlParams});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetPRLByFilterCountAsync(PrlParams prlParams) {
            this.GetPRLByFilterCountAsync(prlParams, null);
        }
        
        /// <remarks/>
        public void GetPRLByFilterCountAsync(PrlParams prlParams, object userState) {
            if ((this.GetPRLByFilterCountOperationCompleted == null)) {
                this.GetPRLByFilterCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPRLByFilterCountOperationCompleted);
            }
            this.InvokeAsync("GetPRLByFilterCount", new object[] {
                        prlParams}, this.GetPRLByFilterCountOperationCompleted, userState);
        }
        
        private void OnGetPRLByFilterCountOperationCompleted(object arg) {
            if ((this.GetPRLByFilterCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPRLByFilterCountCompleted(this, new GetPRLByFilterCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/PRLProvider_DeletePRL", RequestElementName="PRLProvider_DeletePRL", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="PRLProvider_DeletePRLResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("PRLProvider_DeletePRLResult")]
        public int DeletePRL(long id) {
            object[] results = this.Invoke("DeletePRL", new object[] {
                        id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeletePRLAsync(long id) {
            this.DeletePRLAsync(id, null);
        }
        
        /// <remarks/>
        public void DeletePRLAsync(long id, object userState) {
            if ((this.DeletePRLOperationCompleted == null)) {
                this.DeletePRLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePRLOperationCompleted);
            }
            this.InvokeAsync("DeletePRL", new object[] {
                        id}, this.DeletePRLOperationCompleted, userState);
        }
        
        private void OnDeletePRLOperationCompleted(object arg) {
            if ((this.DeletePRLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePRLCompleted(this, new DeletePRLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/PRLProvider_UpdateStatus", RequestElementName="PRLProvider_UpdateStatus", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="PRLProvider_UpdateStatusResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("PRLProvider_UpdateStatusResult")]
        public int UpdateStatus(long id, long status) {
            object[] results = this.Invoke("UpdateStatus", new object[] {
                        id,
                        status});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateStatusAsync(long id, long status) {
            this.UpdateStatusAsync(id, status, null);
        }
        
        /// <remarks/>
        public void UpdateStatusAsync(long id, long status, object userState) {
            if ((this.UpdateStatusOperationCompleted == null)) {
                this.UpdateStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateStatus", new object[] {
                        id,
                        status}, this.UpdateStatusOperationCompleted, userState);
        }
        
        private void OnUpdateStatusOperationCompleted(object arg) {
            if ((this.UpdateStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateStatusCompleted(this, new UpdateStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/PRLProvider_GetPRLByPrlIdWithStates", RequestElementName="PRLProvider_GetPRLByPrlIdWithStates", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="PRLProvider_GetPRLByPrlIdWithStatesResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("PRLProvider_GetPRLByPrlIdWithStatesResult")]
        public PRLModel GetPRLByPrlIdWithStates(long userId, long prlId, long vehicleId, long relationId) {
            object[] results = this.Invoke("GetPRLByPrlIdWithStates", new object[] {
                        userId,
                        prlId,
                        vehicleId,
                        relationId});
            return ((PRLModel)(results[0]));
        }
        
        /// <remarks/>
        public void GetPRLByPrlIdWithStatesAsync(long userId, long prlId, long vehicleId, long relationId) {
            this.GetPRLByPrlIdWithStatesAsync(userId, prlId, vehicleId, relationId, null);
        }
        
        /// <remarks/>
        public void GetPRLByPrlIdWithStatesAsync(long userId, long prlId, long vehicleId, long relationId, object userState) {
            if ((this.GetPRLByPrlIdWithStatesOperationCompleted == null)) {
                this.GetPRLByPrlIdWithStatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPRLByPrlIdWithStatesOperationCompleted);
            }
            this.InvokeAsync("GetPRLByPrlIdWithStates", new object[] {
                        userId,
                        prlId,
                        vehicleId,
                        relationId}, this.GetPRLByPrlIdWithStatesOperationCompleted, userState);
        }
        
        private void OnGetPRLByPrlIdWithStatesOperationCompleted(object arg) {
            if ((this.GetPRLByPrlIdWithStatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPRLByPrlIdWithStatesCompleted(this, new GetPRLByPrlIdWithStatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/PRLProvider_VehicleAndTimeCollision", RequestElementName="PRLProvider_VehicleAndTimeCollision", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="PRLProvider_VehicleAndTimeCollisionResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("PRLProvider_VehicleAndTimeCollisionResult")]
        public int GetVehicleAndTimeCollision(long vehicleId, System.DateTime startDate, System.DateTime endDate, out long collisionsDetected) {
            object[] results = this.Invoke("GetVehicleAndTimeCollision", new object[] {
                        vehicleId,
                        startDate,
                        endDate});
            collisionsDetected = ((long)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetVehicleAndTimeCollisionAsync(long vehicleId, System.DateTime startDate, System.DateTime endDate) {
            this.GetVehicleAndTimeCollisionAsync(vehicleId, startDate, endDate, null);
        }
        
        /// <remarks/>
        public void GetVehicleAndTimeCollisionAsync(long vehicleId, System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.GetVehicleAndTimeCollisionOperationCompleted == null)) {
                this.GetVehicleAndTimeCollisionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVehicleAndTimeCollisionOperationCompleted);
            }
            this.InvokeAsync("GetVehicleAndTimeCollision", new object[] {
                        vehicleId,
                        startDate,
                        endDate}, this.GetVehicleAndTimeCollisionOperationCompleted, userState);
        }
        
        private void OnGetVehicleAndTimeCollisionOperationCompleted(object arg) {
            if ((this.GetVehicleAndTimeCollisionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVehicleAndTimeCollisionCompleted(this, new GetVehicleAndTimeCollisionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/PRLProvider_VehicleAndTimeCollisionFo" +
            "rUpdate", RequestElementName="PRLProvider_VehicleAndTimeCollisionForUpdate", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="PRLProvider_VehicleAndTimeCollisionForUpdateResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("PRLProvider_VehicleAndTimeCollisionForUpdateResult")]
        public int GetVehicleAndTimeCollisionForUpdate(long vehicleId, System.DateTime startDate, System.DateTime endDate, long prlId, out long collisionsDetected) {
            object[] results = this.Invoke("GetVehicleAndTimeCollisionForUpdate", new object[] {
                        vehicleId,
                        startDate,
                        endDate,
                        prlId});
            collisionsDetected = ((long)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetVehicleAndTimeCollisionForUpdateAsync(long vehicleId, System.DateTime startDate, System.DateTime endDate, long prlId) {
            this.GetVehicleAndTimeCollisionForUpdateAsync(vehicleId, startDate, endDate, prlId, null);
        }
        
        /// <remarks/>
        public void GetVehicleAndTimeCollisionForUpdateAsync(long vehicleId, System.DateTime startDate, System.DateTime endDate, long prlId, object userState) {
            if ((this.GetVehicleAndTimeCollisionForUpdateOperationCompleted == null)) {
                this.GetVehicleAndTimeCollisionForUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVehicleAndTimeCollisionForUpdateOperationCompleted);
            }
            this.InvokeAsync("GetVehicleAndTimeCollisionForUpdate", new object[] {
                        vehicleId,
                        startDate,
                        endDate,
                        prlId}, this.GetVehicleAndTimeCollisionForUpdateOperationCompleted, userState);
        }
        
        private void OnGetVehicleAndTimeCollisionForUpdateOperationCompleted(object arg) {
            if ((this.GetVehicleAndTimeCollisionForUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVehicleAndTimeCollisionForUpdateCompleted(this, new GetVehicleAndTimeCollisionForUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/LocationsProvider_GetAllLocations", RequestElementName="LocationsProvider_GetAllLocations", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="LocationsProvider_GetAllLocationsResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("LocationsProvider_GetAllLocationsResult")]
        public LocationModel[] GetAllLocations(long userId) {
            object[] results = this.Invoke("GetAllLocations", new object[] {
                        userId});
            return ((LocationModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllLocationsAsync(long userId) {
            this.GetAllLocationsAsync(userId, null);
        }
        
        /// <remarks/>
        public void GetAllLocationsAsync(long userId, object userState) {
            if ((this.GetAllLocationsOperationCompleted == null)) {
                this.GetAllLocationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllLocationsOperationCompleted);
            }
            this.InvokeAsync("GetAllLocations", new object[] {
                        userId}, this.GetAllLocationsOperationCompleted, userState);
        }
        
        private void OnGetAllLocationsOperationCompleted(object arg) {
            if ((this.GetAllLocationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllLocationsCompleted(this, new GetAllLocationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/LocationsProvider_GetLocation", RequestElementName="LocationsProvider_GetLocation", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="LocationsProvider_GetLocationResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("LocationsProvider_GetLocationResult")]
        public LocationModel GetLocation(long userId, long locationId) {
            object[] results = this.Invoke("GetLocation", new object[] {
                        userId,
                        locationId});
            return ((LocationModel)(results[0]));
        }
        
        /// <remarks/>
        public void GetLocationAsync(long userId, long locationId) {
            this.GetLocationAsync(userId, locationId, null);
        }
        
        /// <remarks/>
        public void GetLocationAsync(long userId, long locationId, object userState) {
            if ((this.GetLocationOperationCompleted == null)) {
                this.GetLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLocationOperationCompleted);
            }
            this.InvokeAsync("GetLocation", new object[] {
                        userId,
                        locationId}, this.GetLocationOperationCompleted, userState);
        }
        
        private void OnGetLocationOperationCompleted(object arg) {
            if ((this.GetLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLocationCompleted(this, new GetLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/LocationsProvider_GeLocationsByFilter" +
            "List", RequestElementName="LocationsProvider_GeLocationsByFilterList", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="LocationsProvider_GeLocationsByFilterListResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("LocationsProvider_GeLocationsByFilterListResult")]
        public LocationFilterModel[] GetLocationsByFilterList(LocationParams filterParams) {
            object[] results = this.Invoke("GetLocationsByFilterList", new object[] {
                        filterParams});
            return ((LocationFilterModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLocationsByFilterListAsync(LocationParams filterParams) {
            this.GetLocationsByFilterListAsync(filterParams, null);
        }
        
        /// <remarks/>
        public void GetLocationsByFilterListAsync(LocationParams filterParams, object userState) {
            if ((this.GetLocationsByFilterListOperationCompleted == null)) {
                this.GetLocationsByFilterListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLocationsByFilterListOperationCompleted);
            }
            this.InvokeAsync("GetLocationsByFilterList", new object[] {
                        filterParams}, this.GetLocationsByFilterListOperationCompleted, userState);
        }
        
        private void OnGetLocationsByFilterListOperationCompleted(object arg) {
            if ((this.GetLocationsByFilterListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLocationsByFilterListCompleted(this, new GetLocationsByFilterListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/LocationsProvider_GetLocationsByFilte" +
            "rCount", RequestElementName="LocationsProvider_GetLocationsByFilterCount", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="LocationsProvider_GetLocationsByFilterCountResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("LocationsProvider_GetLocationsByFilterCountResult")]
        public int GetLocationsByFilterCount(LocationParams filterParams) {
            object[] results = this.Invoke("GetLocationsByFilterCount", new object[] {
                        filterParams});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetLocationsByFilterCountAsync(LocationParams filterParams) {
            this.GetLocationsByFilterCountAsync(filterParams, null);
        }
        
        /// <remarks/>
        public void GetLocationsByFilterCountAsync(LocationParams filterParams, object userState) {
            if ((this.GetLocationsByFilterCountOperationCompleted == null)) {
                this.GetLocationsByFilterCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLocationsByFilterCountOperationCompleted);
            }
            this.InvokeAsync("GetLocationsByFilterCount", new object[] {
                        filterParams}, this.GetLocationsByFilterCountOperationCompleted, userState);
        }
        
        private void OnGetLocationsByFilterCountOperationCompleted(object arg) {
            if ((this.GetLocationsByFilterCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLocationsByFilterCountCompleted(this, new GetLocationsByFilterCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/LocationsProvider_DeleteLocation", RequestElementName="LocationsProvider_DeleteLocation", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="LocationsProvider_DeleteLocationResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("LocationsProvider_DeleteLocationResult")]
        public int DeleteLocation(long userId, long locationId) {
            object[] results = this.Invoke("DeleteLocation", new object[] {
                        userId,
                        locationId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteLocationAsync(long userId, long locationId) {
            this.DeleteLocationAsync(userId, locationId, null);
        }
        
        /// <remarks/>
        public void DeleteLocationAsync(long userId, long locationId, object userState) {
            if ((this.DeleteLocationOperationCompleted == null)) {
                this.DeleteLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteLocationOperationCompleted);
            }
            this.InvokeAsync("DeleteLocation", new object[] {
                        userId,
                        locationId}, this.DeleteLocationOperationCompleted, userState);
        }
        
        private void OnDeleteLocationOperationCompleted(object arg) {
            if ((this.DeleteLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteLocationCompleted(this, new DeleteLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/LocationsProvider_FilterLocations", RequestElementName="LocationsProvider_FilterLocations", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="LocationsProvider_FilterLocationsResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("LocationsProvider_FilterLocationsResult")]
        public LocationModel[] FilterLocations(long userId, string name, string code, string type) {
            object[] results = this.Invoke("FilterLocations", new object[] {
                        userId,
                        name,
                        code,
                        type});
            return ((LocationModel[])(results[0]));
        }
        
        /// <remarks/>
        public void FilterLocationsAsync(long userId, string name, string code, string type) {
            this.FilterLocationsAsync(userId, name, code, type, null);
        }
        
        /// <remarks/>
        public void FilterLocationsAsync(long userId, string name, string code, string type, object userState) {
            if ((this.FilterLocationsOperationCompleted == null)) {
                this.FilterLocationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFilterLocationsOperationCompleted);
            }
            this.InvokeAsync("FilterLocations", new object[] {
                        userId,
                        name,
                        code,
                        type}, this.FilterLocationsOperationCompleted, userState);
        }
        
        private void OnFilterLocationsOperationCompleted(object arg) {
            if ((this.FilterLocationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FilterLocationsCompleted(this, new FilterLocationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/LocationsProvider_SaveLocation", RequestElementName="LocationsProvider_SaveLocation", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="LocationsProvider_SaveLocationResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("LocationsProvider_SaveLocationResult")]
        public int SaveLocation(LocationModel location, out long newLocationID) {
            object[] results = this.Invoke("SaveLocation", new object[] {
                        location});
            newLocationID = ((long)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveLocationAsync(LocationModel location) {
            this.SaveLocationAsync(location, null);
        }
        
        /// <remarks/>
        public void SaveLocationAsync(LocationModel location, object userState) {
            if ((this.SaveLocationOperationCompleted == null)) {
                this.SaveLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveLocationOperationCompleted);
            }
            this.InvokeAsync("SaveLocation", new object[] {
                        location}, this.SaveLocationOperationCompleted, userState);
        }
        
        private void OnSaveLocationOperationCompleted(object arg) {
            if ((this.SaveLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveLocationCompleted(this, new SaveLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/QuickInfoProvider_GetRegistrationsTha" +
            "tExpireList", RequestElementName="QuickInfoProvider_GetRegistrationsThatExpireList", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="QuickInfoProvider_GetRegistrationsThatExpireListResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("QuickInfoProvider_GetRegistrationsThatExpireListResult")]
        public QuickInfoRegistrationFilterModel[] GetRegistrationsThatExpireList(QuickInfoRegistrationParams filterParams) {
            object[] results = this.Invoke("GetRegistrationsThatExpireList", new object[] {
                        filterParams});
            return ((QuickInfoRegistrationFilterModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRegistrationsThatExpireListAsync(QuickInfoRegistrationParams filterParams) {
            this.GetRegistrationsThatExpireListAsync(filterParams, null);
        }
        
        /// <remarks/>
        public void GetRegistrationsThatExpireListAsync(QuickInfoRegistrationParams filterParams, object userState) {
            if ((this.GetRegistrationsThatExpireListOperationCompleted == null)) {
                this.GetRegistrationsThatExpireListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRegistrationsThatExpireListOperationCompleted);
            }
            this.InvokeAsync("GetRegistrationsThatExpireList", new object[] {
                        filterParams}, this.GetRegistrationsThatExpireListOperationCompleted, userState);
        }
        
        private void OnGetRegistrationsThatExpireListOperationCompleted(object arg) {
            if ((this.GetRegistrationsThatExpireListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRegistrationsThatExpireListCompleted(this, new GetRegistrationsThatExpireListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/QuickInfoProvider_GetRegistrationsTha" +
            "tExpireCount", RequestElementName="QuickInfoProvider_GetRegistrationsThatExpireCount", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="QuickInfoProvider_GetRegistrationsThatExpireCountResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("QuickInfoProvider_GetRegistrationsThatExpireCountResult")]
        public int GetRegistrationsThatExpireCount(QuickInfoRegistrationParams filterParams) {
            object[] results = this.Invoke("GetRegistrationsThatExpireCount", new object[] {
                        filterParams});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetRegistrationsThatExpireCountAsync(QuickInfoRegistrationParams filterParams) {
            this.GetRegistrationsThatExpireCountAsync(filterParams, null);
        }
        
        /// <remarks/>
        public void GetRegistrationsThatExpireCountAsync(QuickInfoRegistrationParams filterParams, object userState) {
            if ((this.GetRegistrationsThatExpireCountOperationCompleted == null)) {
                this.GetRegistrationsThatExpireCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRegistrationsThatExpireCountOperationCompleted);
            }
            this.InvokeAsync("GetRegistrationsThatExpireCount", new object[] {
                        filterParams}, this.GetRegistrationsThatExpireCountOperationCompleted, userState);
        }
        
        private void OnGetRegistrationsThatExpireCountOperationCompleted(object arg) {
            if ((this.GetRegistrationsThatExpireCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRegistrationsThatExpireCountCompleted(this, new GetRegistrationsThatExpireCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/QuickInfoProvider_GetVehiclesForWrite" +
            "OffList", RequestElementName="QuickInfoProvider_GetVehiclesForWriteOffList", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="QuickInfoProvider_GetVehiclesForWriteOffListResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("QuickInfoProvider_GetVehiclesForWriteOffListResult")]
        public QuickInfoWriteOffFilterModel[] GetVehiclesForWriteOffList(QuickInfoWriteOffParams filterParams) {
            object[] results = this.Invoke("GetVehiclesForWriteOffList", new object[] {
                        filterParams});
            return ((QuickInfoWriteOffFilterModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetVehiclesForWriteOffListAsync(QuickInfoWriteOffParams filterParams) {
            this.GetVehiclesForWriteOffListAsync(filterParams, null);
        }
        
        /// <remarks/>
        public void GetVehiclesForWriteOffListAsync(QuickInfoWriteOffParams filterParams, object userState) {
            if ((this.GetVehiclesForWriteOffListOperationCompleted == null)) {
                this.GetVehiclesForWriteOffListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVehiclesForWriteOffListOperationCompleted);
            }
            this.InvokeAsync("GetVehiclesForWriteOffList", new object[] {
                        filterParams}, this.GetVehiclesForWriteOffListOperationCompleted, userState);
        }
        
        private void OnGetVehiclesForWriteOffListOperationCompleted(object arg) {
            if ((this.GetVehiclesForWriteOffListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVehiclesForWriteOffListCompleted(this, new GetVehiclesForWriteOffListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/QuickInfoProvider_GetVehiclesForWrite" +
            "OffCount", RequestElementName="QuickInfoProvider_GetVehiclesForWriteOffCount", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="QuickInfoProvider_GetVehiclesForWriteOffCountResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("QuickInfoProvider_GetVehiclesForWriteOffCountResult")]
        public int GetVehiclesForWriteOffCount(QuickInfoWriteOffParams filterParams) {
            object[] results = this.Invoke("GetVehiclesForWriteOffCount", new object[] {
                        filterParams});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetVehiclesForWriteOffCountAsync(QuickInfoWriteOffParams filterParams) {
            this.GetVehiclesForWriteOffCountAsync(filterParams, null);
        }
        
        /// <remarks/>
        public void GetVehiclesForWriteOffCountAsync(QuickInfoWriteOffParams filterParams, object userState) {
            if ((this.GetVehiclesForWriteOffCountOperationCompleted == null)) {
                this.GetVehiclesForWriteOffCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVehiclesForWriteOffCountOperationCompleted);
            }
            this.InvokeAsync("GetVehiclesForWriteOffCount", new object[] {
                        filterParams}, this.GetVehiclesForWriteOffCountOperationCompleted, userState);
        }
        
        private void OnGetVehiclesForWriteOffCountOperationCompleted(object arg) {
            if ((this.GetVehiclesForWriteOffCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVehiclesForWriteOffCountCompleted(this, new GetVehiclesForWriteOffCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/QuickInfoProvider_GetVehiclesForServi" +
            "ceList", RequestElementName="QuickInfoProvider_GetVehiclesForServiceList", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="QuickInfoProvider_GetVehiclesForServiceListResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("QuickInfoProvider_GetVehiclesForServiceListResult")]
        public QuickInfoServiceFilterModel[] GetVehiclesForServiceList(QuickInfoServiceParams filterParams) {
            object[] results = this.Invoke("GetVehiclesForServiceList", new object[] {
                        filterParams});
            return ((QuickInfoServiceFilterModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetVehiclesForServiceListAsync(QuickInfoServiceParams filterParams) {
            this.GetVehiclesForServiceListAsync(filterParams, null);
        }
        
        /// <remarks/>
        public void GetVehiclesForServiceListAsync(QuickInfoServiceParams filterParams, object userState) {
            if ((this.GetVehiclesForServiceListOperationCompleted == null)) {
                this.GetVehiclesForServiceListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVehiclesForServiceListOperationCompleted);
            }
            this.InvokeAsync("GetVehiclesForServiceList", new object[] {
                        filterParams}, this.GetVehiclesForServiceListOperationCompleted, userState);
        }
        
        private void OnGetVehiclesForServiceListOperationCompleted(object arg) {
            if ((this.GetVehiclesForServiceListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVehiclesForServiceListCompleted(this, new GetVehiclesForServiceListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/QuickInfoProvider_GetVehiclesForServi" +
            "ceCount", RequestElementName="QuickInfoProvider_GetVehiclesForServiceCount", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="QuickInfoProvider_GetVehiclesForServiceCountResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("QuickInfoProvider_GetVehiclesForServiceCountResult")]
        public int GetVehiclesForServiceCount(QuickInfoServiceParams filterParams) {
            object[] results = this.Invoke("GetVehiclesForServiceCount", new object[] {
                        filterParams});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetVehiclesForServiceCountAsync(QuickInfoServiceParams filterParams) {
            this.GetVehiclesForServiceCountAsync(filterParams, null);
        }
        
        /// <remarks/>
        public void GetVehiclesForServiceCountAsync(QuickInfoServiceParams filterParams, object userState) {
            if ((this.GetVehiclesForServiceCountOperationCompleted == null)) {
                this.GetVehiclesForServiceCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVehiclesForServiceCountOperationCompleted);
            }
            this.InvokeAsync("GetVehiclesForServiceCount", new object[] {
                        filterParams}, this.GetVehiclesForServiceCountOperationCompleted, userState);
        }
        
        private void OnGetVehiclesForServiceCountOperationCompleted(object arg) {
            if ((this.GetVehiclesForServiceCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVehiclesForServiceCountCompleted(this, new GetVehiclesForServiceCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/UserVehicleGroupsProvider_AddUserToVe" +
            "hicleGroup", RequestElementName="UserVehicleGroupsProvider_AddUserToVehicleGroup", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="UserVehicleGroupsProvider_AddUserToVehicleGroupResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("UserVehicleGroupsProvider_AddUserToVehicleGroupResult")]
        public int AddUserToVehicleGroup(long userId, long vehicleGroupId) {
            object[] results = this.Invoke("AddUserToVehicleGroup", new object[] {
                        userId,
                        vehicleGroupId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddUserToVehicleGroupAsync(long userId, long vehicleGroupId) {
            this.AddUserToVehicleGroupAsync(userId, vehicleGroupId, null);
        }
        
        /// <remarks/>
        public void AddUserToVehicleGroupAsync(long userId, long vehicleGroupId, object userState) {
            if ((this.AddUserToVehicleGroupOperationCompleted == null)) {
                this.AddUserToVehicleGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUserToVehicleGroupOperationCompleted);
            }
            this.InvokeAsync("AddUserToVehicleGroup", new object[] {
                        userId,
                        vehicleGroupId}, this.AddUserToVehicleGroupOperationCompleted, userState);
        }
        
        private void OnAddUserToVehicleGroupOperationCompleted(object arg) {
            if ((this.AddUserToVehicleGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUserToVehicleGroupCompleted(this, new AddUserToVehicleGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/UserVehicleGroupsProvider_RemoveUserF" +
            "romVehicleGroup", RequestElementName="UserVehicleGroupsProvider_RemoveUserFromVehicleGroup", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="UserVehicleGroupsProvider_RemoveUserFromVehicleGroupResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("UserVehicleGroupsProvider_RemoveUserFromVehicleGroupResult")]
        public int RemoveUserFromVehicleGroup(long userId, long vehicleGroupId) {
            object[] results = this.Invoke("RemoveUserFromVehicleGroup", new object[] {
                        userId,
                        vehicleGroupId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveUserFromVehicleGroupAsync(long userId, long vehicleGroupId) {
            this.RemoveUserFromVehicleGroupAsync(userId, vehicleGroupId, null);
        }
        
        /// <remarks/>
        public void RemoveUserFromVehicleGroupAsync(long userId, long vehicleGroupId, object userState) {
            if ((this.RemoveUserFromVehicleGroupOperationCompleted == null)) {
                this.RemoveUserFromVehicleGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveUserFromVehicleGroupOperationCompleted);
            }
            this.InvokeAsync("RemoveUserFromVehicleGroup", new object[] {
                        userId,
                        vehicleGroupId}, this.RemoveUserFromVehicleGroupOperationCompleted, userState);
        }
        
        private void OnRemoveUserFromVehicleGroupOperationCompleted(object arg) {
            if ((this.RemoveUserFromVehicleGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveUserFromVehicleGroupCompleted(this, new RemoveUserFromVehicleGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/FuelConsumptionProvider_GetFuelConsum" +
            "ptionForReport", RequestElementName="FuelConsumptionProvider_GetFuelConsumptionForReport", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="FuelConsumptionProvider_GetFuelConsumptionForReportResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("FuelConsumptionProvider_GetFuelConsumptionForReportResult")]
        public FuelConsumptionModel[] GetFuelConsumptionForReport(long userId, string vehicleId, string vehicleGroupId, string region, string area, string fromDate, string toDate) {
            object[] results = this.Invoke("GetFuelConsumptionForReport", new object[] {
                        userId,
                        vehicleId,
                        vehicleGroupId,
                        region,
                        area,
                        fromDate,
                        toDate});
            return ((FuelConsumptionModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFuelConsumptionForReportAsync(long userId, string vehicleId, string vehicleGroupId, string region, string area, string fromDate, string toDate) {
            this.GetFuelConsumptionForReportAsync(userId, vehicleId, vehicleGroupId, region, area, fromDate, toDate, null);
        }
        
        /// <remarks/>
        public void GetFuelConsumptionForReportAsync(long userId, string vehicleId, string vehicleGroupId, string region, string area, string fromDate, string toDate, object userState) {
            if ((this.GetFuelConsumptionForReportOperationCompleted == null)) {
                this.GetFuelConsumptionForReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFuelConsumptionForReportOperationCompleted);
            }
            this.InvokeAsync("GetFuelConsumptionForReport", new object[] {
                        userId,
                        vehicleId,
                        vehicleGroupId,
                        region,
                        area,
                        fromDate,
                        toDate}, this.GetFuelConsumptionForReportOperationCompleted, userState);
        }
        
        private void OnGetFuelConsumptionForReportOperationCompleted(object arg) {
            if ((this.GetFuelConsumptionForReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFuelConsumptionForReportCompleted(this, new GetFuelConsumptionForReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ServiceOrderProvider_GetServiceOrder", RequestElementName="ServiceOrderProvider_GetServiceOrder", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ServiceOrderProvider_GetServiceOrderResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ServiceOrderProvider_GetServiceOrderResult")]
        public ServiceOrderModel GetServiceOrder(long userId, long serviceOrderID) {
            object[] results = this.Invoke("GetServiceOrder", new object[] {
                        userId,
                        serviceOrderID});
            return ((ServiceOrderModel)(results[0]));
        }
        
        /// <remarks/>
        public void GetServiceOrderAsync(long userId, long serviceOrderID) {
            this.GetServiceOrderAsync(userId, serviceOrderID, null);
        }
        
        /// <remarks/>
        public void GetServiceOrderAsync(long userId, long serviceOrderID, object userState) {
            if ((this.GetServiceOrderOperationCompleted == null)) {
                this.GetServiceOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServiceOrderOperationCompleted);
            }
            this.InvokeAsync("GetServiceOrder", new object[] {
                        userId,
                        serviceOrderID}, this.GetServiceOrderOperationCompleted, userState);
        }
        
        private void OnGetServiceOrderOperationCompleted(object arg) {
            if ((this.GetServiceOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServiceOrderCompleted(this, new GetServiceOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/VehicleProvider_GetVehicleTiresByFilt" +
            "erCount", RequestElementName="VehicleProvider_GetVehicleTiresByFilterCount", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="VehicleProvider_GetVehicleTiresByFilterCountResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("VehicleProvider_GetVehicleTiresByFilterCountResult")]
        public int GetVehicleTiresByFilterCount(TireParams tireParams) {
            object[] results = this.Invoke("GetVehicleTiresByFilterCount", new object[] {
                        tireParams});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetVehicleTiresByFilterCountAsync(TireParams tireParams) {
            this.GetVehicleTiresByFilterCountAsync(tireParams, null);
        }
        
        /// <remarks/>
        public void GetVehicleTiresByFilterCountAsync(TireParams tireParams, object userState) {
            if ((this.GetVehicleTiresByFilterCountOperationCompleted == null)) {
                this.GetVehicleTiresByFilterCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVehicleTiresByFilterCountOperationCompleted);
            }
            this.InvokeAsync("GetVehicleTiresByFilterCount", new object[] {
                        tireParams}, this.GetVehicleTiresByFilterCountOperationCompleted, userState);
        }
        
        private void OnGetVehicleTiresByFilterCountOperationCompleted(object arg) {
            if ((this.GetVehicleTiresByFilterCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVehicleTiresByFilterCountCompleted(this, new GetVehicleTiresByFilterCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/VehicleProvider_GetVehicleTireDetails" +
            "", RequestElementName="VehicleProvider_GetVehicleTireDetails", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="VehicleProvider_GetVehicleTireDetailsResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("VehicleProvider_GetVehicleTireDetailsResult")]
        public TireModel GetVehicleTireDetails(long tireId) {
            object[] results = this.Invoke("GetVehicleTireDetails", new object[] {
                        tireId});
            return ((TireModel)(results[0]));
        }
        
        /// <remarks/>
        public void GetVehicleTireDetailsAsync(long tireId) {
            this.GetVehicleTireDetailsAsync(tireId, null);
        }
        
        /// <remarks/>
        public void GetVehicleTireDetailsAsync(long tireId, object userState) {
            if ((this.GetVehicleTireDetailsOperationCompleted == null)) {
                this.GetVehicleTireDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVehicleTireDetailsOperationCompleted);
            }
            this.InvokeAsync("GetVehicleTireDetails", new object[] {
                        tireId}, this.GetVehicleTireDetailsOperationCompleted, userState);
        }
        
        private void OnGetVehicleTireDetailsOperationCompleted(object arg) {
            if ((this.GetVehicleTireDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVehicleTireDetailsCompleted(this, new GetVehicleTireDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/VehicleProvider_SaveVehicleTire", RequestElementName="VehicleProvider_SaveVehicleTire", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="VehicleProvider_SaveVehicleTireResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("VehicleProvider_SaveVehicleTireResult")]
        public int SaveVehicleTire(TireModel tire, out long newTireId) {
            object[] results = this.Invoke("SaveVehicleTire", new object[] {
                        tire});
            newTireId = ((long)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveVehicleTireAsync(TireModel tire) {
            this.SaveVehicleTireAsync(tire, null);
        }
        
        /// <remarks/>
        public void SaveVehicleTireAsync(TireModel tire, object userState) {
            if ((this.SaveVehicleTireOperationCompleted == null)) {
                this.SaveVehicleTireOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveVehicleTireOperationCompleted);
            }
            this.InvokeAsync("SaveVehicleTire", new object[] {
                        tire}, this.SaveVehicleTireOperationCompleted, userState);
        }
        
        private void OnSaveVehicleTireOperationCompleted(object arg) {
            if ((this.SaveVehicleTireCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveVehicleTireCompleted(this, new SaveVehicleTireCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/VehicleProvider_DeleteVehicleTire", RequestElementName="VehicleProvider_DeleteVehicleTire", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="VehicleProvider_DeleteVehicleTireResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("VehicleProvider_DeleteVehicleTireResult")]
        public int DeleteVehicleTire(long vehicleTireId, long userId) {
            object[] results = this.Invoke("DeleteVehicleTire", new object[] {
                        vehicleTireId,
                        userId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteVehicleTireAsync(long vehicleTireId, long userId) {
            this.DeleteVehicleTireAsync(vehicleTireId, userId, null);
        }
        
        /// <remarks/>
        public void DeleteVehicleTireAsync(long vehicleTireId, long userId, object userState) {
            if ((this.DeleteVehicleTireOperationCompleted == null)) {
                this.DeleteVehicleTireOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteVehicleTireOperationCompleted);
            }
            this.InvokeAsync("DeleteVehicleTire", new object[] {
                        vehicleTireId,
                        userId}, this.DeleteVehicleTireOperationCompleted, userState);
        }
        
        private void OnDeleteVehicleTireOperationCompleted(object arg) {
            if ((this.DeleteVehicleTireCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteVehicleTireCompleted(this, new DeleteVehicleTireCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/VehicleProvider_GetVehicleTireReplace" +
            "mentCount", RequestElementName="VehicleProvider_GetVehicleTireReplacementCount", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="VehicleProvider_GetVehicleTireReplacementCountResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("VehicleProvider_GetVehicleTireReplacementCountResult")]
        public int GetVehicleTireReplacementCount(long vehicleId) {
            object[] results = this.Invoke("GetVehicleTireReplacementCount", new object[] {
                        vehicleId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetVehicleTireReplacementCountAsync(long vehicleId) {
            this.GetVehicleTireReplacementCountAsync(vehicleId, null);
        }
        
        /// <remarks/>
        public void GetVehicleTireReplacementCountAsync(long vehicleId, object userState) {
            if ((this.GetVehicleTireReplacementCountOperationCompleted == null)) {
                this.GetVehicleTireReplacementCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVehicleTireReplacementCountOperationCompleted);
            }
            this.InvokeAsync("GetVehicleTireReplacementCount", new object[] {
                        vehicleId}, this.GetVehicleTireReplacementCountOperationCompleted, userState);
        }
        
        private void OnGetVehicleTireReplacementCountOperationCompleted(object arg) {
            if ((this.GetVehicleTireReplacementCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVehicleTireReplacementCountCompleted(this, new GetVehicleTireReplacementCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/OrganizationalUnitProvider_GetAllOrga" +
            "nizationalUnits", RequestElementName="OrganizationalUnitProvider_GetAllOrganizationalUnits", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="OrganizationalUnitProvider_GetAllOrganizationalUnitsResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("OrganizationalUnitProvider_GetAllOrganizationalUnitsResult")]
        public OrganizationalUnitModel[] GetAllOrganizationalUnits(long userId, long childUserId) {
            object[] results = this.Invoke("GetAllOrganizationalUnits", new object[] {
                        userId,
                        childUserId});
            return ((OrganizationalUnitModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllOrganizationalUnitsAsync(long userId, long childUserId) {
            this.GetAllOrganizationalUnitsAsync(userId, childUserId, null);
        }
        
        /// <remarks/>
        public void GetAllOrganizationalUnitsAsync(long userId, long childUserId, object userState) {
            if ((this.GetAllOrganizationalUnitsOperationCompleted == null)) {
                this.GetAllOrganizationalUnitsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllOrganizationalUnitsOperationCompleted);
            }
            this.InvokeAsync("GetAllOrganizationalUnits", new object[] {
                        userId,
                        childUserId}, this.GetAllOrganizationalUnitsOperationCompleted, userState);
        }
        
        private void OnGetAllOrganizationalUnitsOperationCompleted(object arg) {
            if ((this.GetAllOrganizationalUnitsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllOrganizationalUnitsCompleted(this, new GetAllOrganizationalUnitsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/OrganizationalUnitProvider_GetAllOrga" +
            "nizationUnitsForCustomControl", RequestElementName="OrganizationalUnitProvider_GetAllOrganizationUnitsForCustomControl", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="OrganizationalUnitProvider_GetAllOrganizationUnitsForCustomControlResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("OrganizationalUnitProvider_GetAllOrganizationUnitsForCustomControlResult")]
        public OrganizationalUnitModel[] GetAllOrganizationUnitsForCustomControl(long userId, long childUserId) {
            object[] results = this.Invoke("GetAllOrganizationUnitsForCustomControl", new object[] {
                        userId,
                        childUserId});
            return ((OrganizationalUnitModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllOrganizationUnitsForCustomControlAsync(long userId, long childUserId) {
            this.GetAllOrganizationUnitsForCustomControlAsync(userId, childUserId, null);
        }
        
        /// <remarks/>
        public void GetAllOrganizationUnitsForCustomControlAsync(long userId, long childUserId, object userState) {
            if ((this.GetAllOrganizationUnitsForCustomControlOperationCompleted == null)) {
                this.GetAllOrganizationUnitsForCustomControlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllOrganizationUnitsForCustomControlOperationCompleted);
            }
            this.InvokeAsync("GetAllOrganizationUnitsForCustomControl", new object[] {
                        userId,
                        childUserId}, this.GetAllOrganizationUnitsForCustomControlOperationCompleted, userState);
        }
        
        private void OnGetAllOrganizationUnitsForCustomControlOperationCompleted(object arg) {
            if ((this.GetAllOrganizationUnitsForCustomControlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllOrganizationUnitsForCustomControlCompleted(this, new GetAllOrganizationUnitsForCustomControlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/OrganizationalUnitProvider_GetAllDriv" +
            "ersforOU", RequestElementName="OrganizationalUnitProvider_GetAllDriversforOU", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="OrganizationalUnitProvider_GetAllDriversforOUResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("OrganizationalUnitProvider_GetAllDriversforOUResult")]
        public DriverModel[] GetAllDriversforOU(long userId, long ouId) {
            object[] results = this.Invoke("GetAllDriversforOU", new object[] {
                        userId,
                        ouId});
            return ((DriverModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllDriversforOUAsync(long userId, long ouId) {
            this.GetAllDriversforOUAsync(userId, ouId, null);
        }
        
        /// <remarks/>
        public void GetAllDriversforOUAsync(long userId, long ouId, object userState) {
            if ((this.GetAllDriversforOUOperationCompleted == null)) {
                this.GetAllDriversforOUOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllDriversforOUOperationCompleted);
            }
            this.InvokeAsync("GetAllDriversforOU", new object[] {
                        userId,
                        ouId}, this.GetAllDriversforOUOperationCompleted, userState);
        }
        
        private void OnGetAllDriversforOUOperationCompleted(object arg) {
            if ((this.GetAllDriversforOUCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllDriversforOUCompleted(this, new GetAllDriversforOUCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/OrganizationalUnitProvider_GetAllVehi" +
            "clesforOU", RequestElementName="OrganizationalUnitProvider_GetAllVehiclesforOU", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="OrganizationalUnitProvider_GetAllVehiclesforOUResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("OrganizationalUnitProvider_GetAllVehiclesforOUResult")]
        public VehicleModel[] GetAllVehiclesforOU(long userId, long ouId) {
            object[] results = this.Invoke("GetAllVehiclesforOU", new object[] {
                        userId,
                        ouId});
            return ((VehicleModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllVehiclesforOUAsync(long userId, long ouId) {
            this.GetAllVehiclesforOUAsync(userId, ouId, null);
        }
        
        /// <remarks/>
        public void GetAllVehiclesforOUAsync(long userId, long ouId, object userState) {
            if ((this.GetAllVehiclesforOUOperationCompleted == null)) {
                this.GetAllVehiclesforOUOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllVehiclesforOUOperationCompleted);
            }
            this.InvokeAsync("GetAllVehiclesforOU", new object[] {
                        userId,
                        ouId}, this.GetAllVehiclesforOUOperationCompleted, userState);
        }
        
        private void OnGetAllVehiclesforOUOperationCompleted(object arg) {
            if ((this.GetAllVehiclesforOUCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllVehiclesforOUCompleted(this, new GetAllVehiclesforOUCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/OrganizationalUnitProvider_MoveDriver" +
            "toOU", RequestElementName="OrganizationalUnitProvider_MoveDrivertoOU", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="OrganizationalUnitProvider_MoveDrivertoOUResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("OrganizationalUnitProvider_MoveDrivertoOUResult")]
        public int MoveDrivertoOU(long userId, long ouId, long driverId) {
            object[] results = this.Invoke("MoveDrivertoOU", new object[] {
                        userId,
                        ouId,
                        driverId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void MoveDrivertoOUAsync(long userId, long ouId, long driverId) {
            this.MoveDrivertoOUAsync(userId, ouId, driverId, null);
        }
        
        /// <remarks/>
        public void MoveDrivertoOUAsync(long userId, long ouId, long driverId, object userState) {
            if ((this.MoveDrivertoOUOperationCompleted == null)) {
                this.MoveDrivertoOUOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMoveDrivertoOUOperationCompleted);
            }
            this.InvokeAsync("MoveDrivertoOU", new object[] {
                        userId,
                        ouId,
                        driverId}, this.MoveDrivertoOUOperationCompleted, userState);
        }
        
        private void OnMoveDrivertoOUOperationCompleted(object arg) {
            if ((this.MoveDrivertoOUCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MoveDrivertoOUCompleted(this, new MoveDrivertoOUCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/OrganizationalUnitProvider_MoveVehicl" +
            "etoOU", RequestElementName="OrganizationalUnitProvider_MoveVehicletoOU", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="OrganizationalUnitProvider_MoveVehicletoOUResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("OrganizationalUnitProvider_MoveVehicletoOUResult")]
        public int MoveVehicletoOU(long userId, long ouId, long vehicleId) {
            object[] results = this.Invoke("MoveVehicletoOU", new object[] {
                        userId,
                        ouId,
                        vehicleId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void MoveVehicletoOUAsync(long userId, long ouId, long vehicleId) {
            this.MoveVehicletoOUAsync(userId, ouId, vehicleId, null);
        }
        
        /// <remarks/>
        public void MoveVehicletoOUAsync(long userId, long ouId, long vehicleId, object userState) {
            if ((this.MoveVehicletoOUOperationCompleted == null)) {
                this.MoveVehicletoOUOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMoveVehicletoOUOperationCompleted);
            }
            this.InvokeAsync("MoveVehicletoOU", new object[] {
                        userId,
                        ouId,
                        vehicleId}, this.MoveVehicletoOUOperationCompleted, userState);
        }
        
        private void OnMoveVehicletoOUOperationCompleted(object arg) {
            if ((this.MoveVehicletoOUCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MoveVehicletoOUCompleted(this, new MoveVehicletoOUCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/OrganizationalUnitProvider_InsertOU", RequestElementName="OrganizationalUnitProvider_InsertOU", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="OrganizationalUnitProvider_InsertOUResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("OrganizationalUnitProvider_InsertOUResult")]
        public int InsertOU(long userId, long childUserID, long ouParentId, string ouName) {
            object[] results = this.Invoke("InsertOU", new object[] {
                        userId,
                        childUserID,
                        ouParentId,
                        ouName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertOUAsync(long userId, long childUserID, long ouParentId, string ouName) {
            this.InsertOUAsync(userId, childUserID, ouParentId, ouName, null);
        }
        
        /// <remarks/>
        public void InsertOUAsync(long userId, long childUserID, long ouParentId, string ouName, object userState) {
            if ((this.InsertOUOperationCompleted == null)) {
                this.InsertOUOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertOUOperationCompleted);
            }
            this.InvokeAsync("InsertOU", new object[] {
                        userId,
                        childUserID,
                        ouParentId,
                        ouName}, this.InsertOUOperationCompleted, userState);
        }
        
        private void OnInsertOUOperationCompleted(object arg) {
            if ((this.InsertOUCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertOUCompleted(this, new InsertOUCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/OrganizationalUnitProvider_UpdateOU", RequestElementName="OrganizationalUnitProvider_UpdateOU", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="OrganizationalUnitProvider_UpdateOUResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("OrganizationalUnitProvider_UpdateOUResult")]
        public int UpdateOU(long userId, long ouId, long ouParentId, string ouName) {
            object[] results = this.Invoke("UpdateOU", new object[] {
                        userId,
                        ouId,
                        ouParentId,
                        ouName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateOUAsync(long userId, long ouId, long ouParentId, string ouName) {
            this.UpdateOUAsync(userId, ouId, ouParentId, ouName, null);
        }
        
        /// <remarks/>
        public void UpdateOUAsync(long userId, long ouId, long ouParentId, string ouName, object userState) {
            if ((this.UpdateOUOperationCompleted == null)) {
                this.UpdateOUOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOUOperationCompleted);
            }
            this.InvokeAsync("UpdateOU", new object[] {
                        userId,
                        ouId,
                        ouParentId,
                        ouName}, this.UpdateOUOperationCompleted, userState);
        }
        
        private void OnUpdateOUOperationCompleted(object arg) {
            if ((this.UpdateOUCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateOUCompleted(this, new UpdateOUCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/OrganizationalUnitProvider_DeleteOU", RequestElementName="OrganizationalUnitProvider_DeleteOU", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="OrganizationalUnitProvider_DeleteOUResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("OrganizationalUnitProvider_DeleteOUResult")]
        public int DeleteOU(long userId, long ouId) {
            object[] results = this.Invoke("DeleteOU", new object[] {
                        userId,
                        ouId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteOUAsync(long userId, long ouId) {
            this.DeleteOUAsync(userId, ouId, null);
        }
        
        /// <remarks/>
        public void DeleteOUAsync(long userId, long ouId, object userState) {
            if ((this.DeleteOUOperationCompleted == null)) {
                this.DeleteOUOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOUOperationCompleted);
            }
            this.InvokeAsync("DeleteOU", new object[] {
                        userId,
                        ouId}, this.DeleteOUOperationCompleted, userState);
        }
        
        private void OnDeleteOUOperationCompleted(object arg) {
            if ((this.DeleteOUCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteOUCompleted(this, new DeleteOUCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/OrganizationalUnitProvider_UpdateOURi" +
            "ghts", RequestElementName="OrganizationalUnitProvider_UpdateOURights", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="OrganizationalUnitProvider_UpdateOURightsResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("OrganizationalUnitProvider_UpdateOURightsResult")]
        public int UpdateOURights(long userId, long masterUserId, string ouIds) {
            object[] results = this.Invoke("UpdateOURights", new object[] {
                        userId,
                        masterUserId,
                        ouIds});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateOURightsAsync(long userId, long masterUserId, string ouIds) {
            this.UpdateOURightsAsync(userId, masterUserId, ouIds, null);
        }
        
        /// <remarks/>
        public void UpdateOURightsAsync(long userId, long masterUserId, string ouIds, object userState) {
            if ((this.UpdateOURightsOperationCompleted == null)) {
                this.UpdateOURightsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOURightsOperationCompleted);
            }
            this.InvokeAsync("UpdateOURights", new object[] {
                        userId,
                        masterUserId,
                        ouIds}, this.UpdateOURightsOperationCompleted, userState);
        }
        
        private void OnUpdateOURightsOperationCompleted(object arg) {
            if ((this.UpdateOURightsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateOURightsCompleted(this, new UpdateOURightsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/OrganizationalUnitProvider_GetAllOUAc" +
            "cessRights", RequestElementName="OrganizationalUnitProvider_GetAllOUAccessRights", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="OrganizationalUnitProvider_GetAllOUAccessRightsResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("OrganizationalUnitProvider_GetAllOUAccessRightsResult")]
        public OrganizationalUnitAccessRightModel[] GetAllOUAccessRights(long userId) {
            object[] results = this.Invoke("GetAllOUAccessRights", new object[] {
                        userId});
            return ((OrganizationalUnitAccessRightModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllOUAccessRightsAsync(long userId) {
            this.GetAllOUAccessRightsAsync(userId, null);
        }
        
        /// <remarks/>
        public void GetAllOUAccessRightsAsync(long userId, object userState) {
            if ((this.GetAllOUAccessRightsOperationCompleted == null)) {
                this.GetAllOUAccessRightsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllOUAccessRightsOperationCompleted);
            }
            this.InvokeAsync("GetAllOUAccessRights", new object[] {
                        userId}, this.GetAllOUAccessRightsOperationCompleted, userState);
        }
        
        private void OnGetAllOUAccessRightsOperationCompleted(object arg) {
            if ((this.GetAllOUAccessRightsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllOUAccessRightsCompleted(this, new GetAllOUAccessRightsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ExpenseProvider_GetExpense", RequestElementName="ExpenseProvider_GetExpense", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ExpenseProvider_GetExpenseResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ExpenseProvider_GetExpenseResult")]
        public ExpenseModel GetExpense(long userId, long expenseID) {
            object[] results = this.Invoke("GetExpense", new object[] {
                        userId,
                        expenseID});
            return ((ExpenseModel)(results[0]));
        }
        
        /// <remarks/>
        public void GetExpenseAsync(long userId, long expenseID) {
            this.GetExpenseAsync(userId, expenseID, null);
        }
        
        /// <remarks/>
        public void GetExpenseAsync(long userId, long expenseID, object userState) {
            if ((this.GetExpenseOperationCompleted == null)) {
                this.GetExpenseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExpenseOperationCompleted);
            }
            this.InvokeAsync("GetExpense", new object[] {
                        userId,
                        expenseID}, this.GetExpenseOperationCompleted, userState);
        }
        
        private void OnGetExpenseOperationCompleted(object arg) {
            if ((this.GetExpenseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExpenseCompleted(this, new GetExpenseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ExpenseProvider_GetExpensesByUserId", RequestElementName="ExpenseProvider_GetExpensesByUserId", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ExpenseProvider_GetExpensesByUserIdResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("ExpenseProvider_GetExpensesByUserIdResult")]
        public ExpenseModel[] GetExpensesByUserId(long userId, long childUserId) {
            object[] results = this.Invoke("GetExpensesByUserId", new object[] {
                        userId,
                        childUserId});
            return ((ExpenseModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetExpensesByUserIdAsync(long userId, long childUserId) {
            this.GetExpensesByUserIdAsync(userId, childUserId, null);
        }
        
        /// <remarks/>
        public void GetExpensesByUserIdAsync(long userId, long childUserId, object userState) {
            if ((this.GetExpensesByUserIdOperationCompleted == null)) {
                this.GetExpensesByUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExpensesByUserIdOperationCompleted);
            }
            this.InvokeAsync("GetExpensesByUserId", new object[] {
                        userId,
                        childUserId}, this.GetExpensesByUserIdOperationCompleted, userState);
        }
        
        private void OnGetExpensesByUserIdOperationCompleted(object arg) {
            if ((this.GetExpensesByUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExpensesByUserIdCompleted(this, new GetExpensesByUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ExpenseProvider_LockExpense", RequestElementName="ExpenseProvider_LockExpense", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ExpenseProvider_LockExpenseResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ExpenseProvider_LockExpenseResult")]
        public int LockExpense(long expenseID, int locked) {
            object[] results = this.Invoke("LockExpense", new object[] {
                        expenseID,
                        locked});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void LockExpenseAsync(long expenseID, int locked) {
            this.LockExpenseAsync(expenseID, locked, null);
        }
        
        /// <remarks/>
        public void LockExpenseAsync(long expenseID, int locked, object userState) {
            if ((this.LockExpenseOperationCompleted == null)) {
                this.LockExpenseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLockExpenseOperationCompleted);
            }
            this.InvokeAsync("LockExpense", new object[] {
                        expenseID,
                        locked}, this.LockExpenseOperationCompleted, userState);
        }
        
        private void OnLockExpenseOperationCompleted(object arg) {
            if ((this.LockExpenseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LockExpenseCompleted(this, new LockExpenseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ExpenseProvider_GetExpensesForReport", RequestElementName="ExpenseProvider_GetExpensesForReport", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ExpenseProvider_GetExpensesForReportResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("ExpenseProvider_GetExpensesForReportResult")]
        public ExpenseModel[] GetExpensesForReport(long userId, string expGenIds, string vehicleFks, string vehicleGroupFks, System.DateTime dateFrom, System.DateTime dateTo, long chldUserId, int vehicleActive) {
            object[] results = this.Invoke("GetExpensesForReport", new object[] {
                        userId,
                        expGenIds,
                        vehicleFks,
                        vehicleGroupFks,
                        dateFrom,
                        dateTo,
                        chldUserId,
                        vehicleActive});
            return ((ExpenseModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetExpensesForReportAsync(long userId, string expGenIds, string vehicleFks, string vehicleGroupFks, System.DateTime dateFrom, System.DateTime dateTo, long chldUserId, int vehicleActive) {
            this.GetExpensesForReportAsync(userId, expGenIds, vehicleFks, vehicleGroupFks, dateFrom, dateTo, chldUserId, vehicleActive, null);
        }
        
        /// <remarks/>
        public void GetExpensesForReportAsync(long userId, string expGenIds, string vehicleFks, string vehicleGroupFks, System.DateTime dateFrom, System.DateTime dateTo, long chldUserId, int vehicleActive, object userState) {
            if ((this.GetExpensesForReportOperationCompleted == null)) {
                this.GetExpensesForReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExpensesForReportOperationCompleted);
            }
            this.InvokeAsync("GetExpensesForReport", new object[] {
                        userId,
                        expGenIds,
                        vehicleFks,
                        vehicleGroupFks,
                        dateFrom,
                        dateTo,
                        chldUserId,
                        vehicleActive}, this.GetExpensesForReportOperationCompleted, userState);
        }
        
        private void OnGetExpensesForReportOperationCompleted(object arg) {
            if ((this.GetExpensesForReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExpensesForReportCompleted(this, new GetExpensesForReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ExpenseProvider_GetExpensesByFilterLi" +
            "st", RequestElementName="ExpenseProvider_GetExpensesByFilterList", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ExpenseProvider_GetExpensesByFilterListResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("ExpenseProvider_GetExpensesByFilterListResult")]
        public ExpenseFilterModel[] GetExpensesByFilterList(ExpenseParams expenseParams) {
            object[] results = this.Invoke("GetExpensesByFilterList", new object[] {
                        expenseParams});
            return ((ExpenseFilterModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetExpensesByFilterListAsync(ExpenseParams expenseParams) {
            this.GetExpensesByFilterListAsync(expenseParams, null);
        }
        
        /// <remarks/>
        public void GetExpensesByFilterListAsync(ExpenseParams expenseParams, object userState) {
            if ((this.GetExpensesByFilterListOperationCompleted == null)) {
                this.GetExpensesByFilterListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExpensesByFilterListOperationCompleted);
            }
            this.InvokeAsync("GetExpensesByFilterList", new object[] {
                        expenseParams}, this.GetExpensesByFilterListOperationCompleted, userState);
        }
        
        private void OnGetExpensesByFilterListOperationCompleted(object arg) {
            if ((this.GetExpensesByFilterListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExpensesByFilterListCompleted(this, new GetExpensesByFilterListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ExpenseProvider_GetExpensesByFilterCo" +
            "unt", RequestElementName="ExpenseProvider_GetExpensesByFilterCount", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ExpenseProvider_GetExpensesByFilterCountResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ExpenseProvider_GetExpensesByFilterCountResult")]
        public int GetExpensesByFilterCount(ExpenseParams expenseParams) {
            object[] results = this.Invoke("GetExpensesByFilterCount", new object[] {
                        expenseParams});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetExpensesByFilterCountAsync(ExpenseParams expenseParams) {
            this.GetExpensesByFilterCountAsync(expenseParams, null);
        }
        
        /// <remarks/>
        public void GetExpensesByFilterCountAsync(ExpenseParams expenseParams, object userState) {
            if ((this.GetExpensesByFilterCountOperationCompleted == null)) {
                this.GetExpensesByFilterCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExpensesByFilterCountOperationCompleted);
            }
            this.InvokeAsync("GetExpensesByFilterCount", new object[] {
                        expenseParams}, this.GetExpensesByFilterCountOperationCompleted, userState);
        }
        
        private void OnGetExpensesByFilterCountOperationCompleted(object arg) {
            if ((this.GetExpensesByFilterCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExpensesByFilterCountCompleted(this, new GetExpensesByFilterCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ExpenseProvider_GetExpensesByFilter", RequestElementName="ExpenseProvider_GetExpensesByFilter", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ExpenseProvider_GetExpensesByFilterResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("ExpenseProvider_GetExpensesByFilterResult")]
        public ExpenseModel[] GetExpensesByFilter(
                    long userId, 
                    long expCatCode, 
                    long vehicleFk, 
                    long vehicleGroupFk, 
                    long driverId, 
                    string firstName, 
                    string lastName, 
                    string dateFrom, 
                    string dateTo, 
                    string valBeforeVatFrom, 
                    string valBeforeVatTo, 
                    long childUserId, 
                    string companyId, 
                    string classification, 
                    string billNumber, 
                    int pageNumber) {
            object[] results = this.Invoke("GetExpensesByFilter", new object[] {
                        userId,
                        expCatCode,
                        vehicleFk,
                        vehicleGroupFk,
                        driverId,
                        firstName,
                        lastName,
                        dateFrom,
                        dateTo,
                        valBeforeVatFrom,
                        valBeforeVatTo,
                        childUserId,
                        companyId,
                        classification,
                        billNumber,
                        pageNumber});
            return ((ExpenseModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetExpensesByFilterAsync(
                    long userId, 
                    long expCatCode, 
                    long vehicleFk, 
                    long vehicleGroupFk, 
                    long driverId, 
                    string firstName, 
                    string lastName, 
                    string dateFrom, 
                    string dateTo, 
                    string valBeforeVatFrom, 
                    string valBeforeVatTo, 
                    long childUserId, 
                    string companyId, 
                    string classification, 
                    string billNumber, 
                    int pageNumber) {
            this.GetExpensesByFilterAsync(userId, expCatCode, vehicleFk, vehicleGroupFk, driverId, firstName, lastName, dateFrom, dateTo, valBeforeVatFrom, valBeforeVatTo, childUserId, companyId, classification, billNumber, pageNumber, null);
        }
        
        /// <remarks/>
        public void GetExpensesByFilterAsync(
                    long userId, 
                    long expCatCode, 
                    long vehicleFk, 
                    long vehicleGroupFk, 
                    long driverId, 
                    string firstName, 
                    string lastName, 
                    string dateFrom, 
                    string dateTo, 
                    string valBeforeVatFrom, 
                    string valBeforeVatTo, 
                    long childUserId, 
                    string companyId, 
                    string classification, 
                    string billNumber, 
                    int pageNumber, 
                    object userState) {
            if ((this.GetExpensesByFilterOperationCompleted == null)) {
                this.GetExpensesByFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExpensesByFilterOperationCompleted);
            }
            this.InvokeAsync("GetExpensesByFilter", new object[] {
                        userId,
                        expCatCode,
                        vehicleFk,
                        vehicleGroupFk,
                        driverId,
                        firstName,
                        lastName,
                        dateFrom,
                        dateTo,
                        valBeforeVatFrom,
                        valBeforeVatTo,
                        childUserId,
                        companyId,
                        classification,
                        billNumber,
                        pageNumber}, this.GetExpensesByFilterOperationCompleted, userState);
        }
        
        private void OnGetExpensesByFilterOperationCompleted(object arg) {
            if ((this.GetExpensesByFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExpensesByFilterCompleted(this, new GetExpensesByFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ExpenseProvider_GetExpensesByUserIdAn" +
            "dVehicleFk", RequestElementName="ExpenseProvider_GetExpensesByUserIdAndVehicleFk", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ExpenseProvider_GetExpensesByUserIdAndVehicleFkResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("ExpenseProvider_GetExpensesByUserIdAndVehicleFkResult")]
        public ExpenseModel[] GetExpensesByUserIdAndVehicleFk(long userId, long vehicleFk) {
            object[] results = this.Invoke("GetExpensesByUserIdAndVehicleFk", new object[] {
                        userId,
                        vehicleFk});
            return ((ExpenseModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetExpensesByUserIdAndVehicleFkAsync(long userId, long vehicleFk) {
            this.GetExpensesByUserIdAndVehicleFkAsync(userId, vehicleFk, null);
        }
        
        /// <remarks/>
        public void GetExpensesByUserIdAndVehicleFkAsync(long userId, long vehicleFk, object userState) {
            if ((this.GetExpensesByUserIdAndVehicleFkOperationCompleted == null)) {
                this.GetExpensesByUserIdAndVehicleFkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExpensesByUserIdAndVehicleFkOperationCompleted);
            }
            this.InvokeAsync("GetExpensesByUserIdAndVehicleFk", new object[] {
                        userId,
                        vehicleFk}, this.GetExpensesByUserIdAndVehicleFkOperationCompleted, userState);
        }
        
        private void OnGetExpensesByUserIdAndVehicleFkOperationCompleted(object arg) {
            if ((this.GetExpensesByUserIdAndVehicleFkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExpensesByUserIdAndVehicleFkCompleted(this, new GetExpensesByUserIdAndVehicleFkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ExpenseProvider_GetExpensesByUserIdAn" +
            "dExpCatCode", RequestElementName="ExpenseProvider_GetExpensesByUserIdAndExpCatCode", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ExpenseProvider_GetExpensesByUserIdAndExpCatCodeResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("ExpenseProvider_GetExpensesByUserIdAndExpCatCodeResult")]
        public ExpenseModel[] GetExpensesByUserIdAndExpCatCode(long userId, long expCatCode) {
            object[] results = this.Invoke("GetExpensesByUserIdAndExpCatCode", new object[] {
                        userId,
                        expCatCode});
            return ((ExpenseModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetExpensesByUserIdAndExpCatCodeAsync(long userId, long expCatCode) {
            this.GetExpensesByUserIdAndExpCatCodeAsync(userId, expCatCode, null);
        }
        
        /// <remarks/>
        public void GetExpensesByUserIdAndExpCatCodeAsync(long userId, long expCatCode, object userState) {
            if ((this.GetExpensesByUserIdAndExpCatCodeOperationCompleted == null)) {
                this.GetExpensesByUserIdAndExpCatCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExpensesByUserIdAndExpCatCodeOperationCompleted);
            }
            this.InvokeAsync("GetExpensesByUserIdAndExpCatCode", new object[] {
                        userId,
                        expCatCode}, this.GetExpensesByUserIdAndExpCatCodeOperationCompleted, userState);
        }
        
        private void OnGetExpensesByUserIdAndExpCatCodeOperationCompleted(object arg) {
            if ((this.GetExpensesByUserIdAndExpCatCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExpensesByUserIdAndExpCatCodeCompleted(this, new GetExpensesByUserIdAndExpCatCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ExpenseProvider_DeleteExpense", RequestElementName="ExpenseProvider_DeleteExpense", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ExpenseProvider_DeleteExpenseResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ExpenseProvider_DeleteExpenseResult")]
        public int DeleteExpense(long expenseID) {
            object[] results = this.Invoke("DeleteExpense", new object[] {
                        expenseID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteExpenseAsync(long expenseID) {
            this.DeleteExpenseAsync(expenseID, null);
        }
        
        /// <remarks/>
        public void DeleteExpenseAsync(long expenseID, object userState) {
            if ((this.DeleteExpenseOperationCompleted == null)) {
                this.DeleteExpenseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteExpenseOperationCompleted);
            }
            this.InvokeAsync("DeleteExpense", new object[] {
                        expenseID}, this.DeleteExpenseOperationCompleted, userState);
        }
        
        private void OnDeleteExpenseOperationCompleted(object arg) {
            if ((this.DeleteExpenseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteExpenseCompleted(this, new DeleteExpenseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ExpenseProvider_SaveExpense", RequestElementName="ExpenseProvider_SaveExpense", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ExpenseProvider_SaveExpenseResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ExpenseProvider_SaveExpenseResult")]
        public int SaveExpense(ExpenseModel expense, out long newExpenseID) {
            object[] results = this.Invoke("SaveExpense", new object[] {
                        expense});
            newExpenseID = ((long)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveExpenseAsync(ExpenseModel expense) {
            this.SaveExpenseAsync(expense, null);
        }
        
        /// <remarks/>
        public void SaveExpenseAsync(ExpenseModel expense, object userState) {
            if ((this.SaveExpenseOperationCompleted == null)) {
                this.SaveExpenseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveExpenseOperationCompleted);
            }
            this.InvokeAsync("SaveExpense", new object[] {
                        expense}, this.SaveExpenseOperationCompleted, userState);
        }
        
        private void OnSaveExpenseOperationCompleted(object arg) {
            if ((this.SaveExpenseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveExpenseCompleted(this, new SaveExpenseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ExpenseProvider_GetExpensesByUserIdAn" +
            "dPrlId", RequestElementName="ExpenseProvider_GetExpensesByUserIdAndPrlId", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ExpenseProvider_GetExpensesByUserIdAndPrlIdResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("ExpenseProvider_GetExpensesByUserIdAndPrlIdResult")]
        public ExpenseModel[] GetExpensesByUserIdAndPrlId(long userId, long prlId) {
            object[] results = this.Invoke("GetExpensesByUserIdAndPrlId", new object[] {
                        userId,
                        prlId});
            return ((ExpenseModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetExpensesByUserIdAndPrlIdAsync(long userId, long prlId) {
            this.GetExpensesByUserIdAndPrlIdAsync(userId, prlId, null);
        }
        
        /// <remarks/>
        public void GetExpensesByUserIdAndPrlIdAsync(long userId, long prlId, object userState) {
            if ((this.GetExpensesByUserIdAndPrlIdOperationCompleted == null)) {
                this.GetExpensesByUserIdAndPrlIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExpensesByUserIdAndPrlIdOperationCompleted);
            }
            this.InvokeAsync("GetExpensesByUserIdAndPrlId", new object[] {
                        userId,
                        prlId}, this.GetExpensesByUserIdAndPrlIdOperationCompleted, userState);
        }
        
        private void OnGetExpensesByUserIdAndPrlIdOperationCompleted(object arg) {
            if ((this.GetExpensesByUserIdAndPrlIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExpensesByUserIdAndPrlIdCompleted(this, new GetExpensesByUserIdAndPrlIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ExpenseProvider_GetPrlForExpenseDetai" +
            "ls", RequestElementName="ExpenseProvider_GetPrlForExpenseDetails", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ExpenseProvider_GetPrlForExpenseDetailsResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ExpenseProvider_GetPrlForExpenseDetailsResult")]
        public PRLModel GetPrlForExpenseDetails(long userId, long prlId, long expenseId) {
            object[] results = this.Invoke("GetPrlForExpenseDetails", new object[] {
                        userId,
                        prlId,
                        expenseId});
            return ((PRLModel)(results[0]));
        }
        
        /// <remarks/>
        public void GetPrlForExpenseDetailsAsync(long userId, long prlId, long expenseId) {
            this.GetPrlForExpenseDetailsAsync(userId, prlId, expenseId, null);
        }
        
        /// <remarks/>
        public void GetPrlForExpenseDetailsAsync(long userId, long prlId, long expenseId, object userState) {
            if ((this.GetPrlForExpenseDetailsOperationCompleted == null)) {
                this.GetPrlForExpenseDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrlForExpenseDetailsOperationCompleted);
            }
            this.InvokeAsync("GetPrlForExpenseDetails", new object[] {
                        userId,
                        prlId,
                        expenseId}, this.GetPrlForExpenseDetailsOperationCompleted, userState);
        }
        
        private void OnGetPrlForExpenseDetailsOperationCompleted(object arg) {
            if ((this.GetPrlForExpenseDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrlForExpenseDetailsCompleted(this, new GetPrlForExpenseDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ExpenseGeneratorProvider_GetExpenseGe" +
            "nerator", RequestElementName="ExpenseGeneratorProvider_GetExpenseGenerator", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ExpenseGeneratorProvider_GetExpenseGeneratorResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ExpenseGeneratorProvider_GetExpenseGeneratorResult")]
        public ExpenseGeneratorModel GetExpenseGenerator(long expenseGeneratorID) {
            object[] results = this.Invoke("GetExpenseGenerator", new object[] {
                        expenseGeneratorID});
            return ((ExpenseGeneratorModel)(results[0]));
        }
        
        /// <remarks/>
        public void GetExpenseGeneratorAsync(long expenseGeneratorID) {
            this.GetExpenseGeneratorAsync(expenseGeneratorID, null);
        }
        
        /// <remarks/>
        public void GetExpenseGeneratorAsync(long expenseGeneratorID, object userState) {
            if ((this.GetExpenseGeneratorOperationCompleted == null)) {
                this.GetExpenseGeneratorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExpenseGeneratorOperationCompleted);
            }
            this.InvokeAsync("GetExpenseGenerator", new object[] {
                        expenseGeneratorID}, this.GetExpenseGeneratorOperationCompleted, userState);
        }
        
        private void OnGetExpenseGeneratorOperationCompleted(object arg) {
            if ((this.GetExpenseGeneratorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExpenseGeneratorCompleted(this, new GetExpenseGeneratorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ExpenseGeneratorProvider_GetExpenseGe" +
            "neratorsByUserId", RequestElementName="ExpenseGeneratorProvider_GetExpenseGeneratorsByUserId", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ExpenseGeneratorProvider_GetExpenseGeneratorsByUserIdResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("ExpenseGeneratorProvider_GetExpenseGeneratorsByUserIdResult")]
        public ExpenseGeneratorModel[] GetExpenseGeneratorsByUserId(long userId) {
            object[] results = this.Invoke("GetExpenseGeneratorsByUserId", new object[] {
                        userId});
            return ((ExpenseGeneratorModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetExpenseGeneratorsByUserIdAsync(long userId) {
            this.GetExpenseGeneratorsByUserIdAsync(userId, null);
        }
        
        /// <remarks/>
        public void GetExpenseGeneratorsByUserIdAsync(long userId, object userState) {
            if ((this.GetExpenseGeneratorsByUserIdOperationCompleted == null)) {
                this.GetExpenseGeneratorsByUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExpenseGeneratorsByUserIdOperationCompleted);
            }
            this.InvokeAsync("GetExpenseGeneratorsByUserId", new object[] {
                        userId}, this.GetExpenseGeneratorsByUserIdOperationCompleted, userState);
        }
        
        private void OnGetExpenseGeneratorsByUserIdOperationCompleted(object arg) {
            if ((this.GetExpenseGeneratorsByUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExpenseGeneratorsByUserIdCompleted(this, new GetExpenseGeneratorsByUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ExpenseGeneratorProvider_GetExpenseGe" +
            "neratorsByFilterList", RequestElementName="ExpenseGeneratorProvider_GetExpenseGeneratorsByFilterList", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ExpenseGeneratorProvider_GetExpenseGeneratorsByFilterListResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("ExpenseGeneratorProvider_GetExpenseGeneratorsByFilterListResult")]
        public ExpenseGeneratorFilterModel[] GetExpenseGeneratorsByFilterList(ExpenseGeneratorParams filterParams) {
            object[] results = this.Invoke("GetExpenseGeneratorsByFilterList", new object[] {
                        filterParams});
            return ((ExpenseGeneratorFilterModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetExpenseGeneratorsByFilterListAsync(ExpenseGeneratorParams filterParams) {
            this.GetExpenseGeneratorsByFilterListAsync(filterParams, null);
        }
        
        /// <remarks/>
        public void GetExpenseGeneratorsByFilterListAsync(ExpenseGeneratorParams filterParams, object userState) {
            if ((this.GetExpenseGeneratorsByFilterListOperationCompleted == null)) {
                this.GetExpenseGeneratorsByFilterListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExpenseGeneratorsByFilterListOperationCompleted);
            }
            this.InvokeAsync("GetExpenseGeneratorsByFilterList", new object[] {
                        filterParams}, this.GetExpenseGeneratorsByFilterListOperationCompleted, userState);
        }
        
        private void OnGetExpenseGeneratorsByFilterListOperationCompleted(object arg) {
            if ((this.GetExpenseGeneratorsByFilterListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExpenseGeneratorsByFilterListCompleted(this, new GetExpenseGeneratorsByFilterListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ExpenseGeneratorProvider_GetExpenseGe" +
            "neratorsByFilterCount", RequestElementName="ExpenseGeneratorProvider_GetExpenseGeneratorsByFilterCount", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ExpenseGeneratorProvider_GetExpenseGeneratorsByFilterCountResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ExpenseGeneratorProvider_GetExpenseGeneratorsByFilterCountResult")]
        public int GetExpenseGeneratorsByFilterCount(ExpenseGeneratorParams filterParams) {
            object[] results = this.Invoke("GetExpenseGeneratorsByFilterCount", new object[] {
                        filterParams});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetExpenseGeneratorsByFilterCountAsync(ExpenseGeneratorParams filterParams) {
            this.GetExpenseGeneratorsByFilterCountAsync(filterParams, null);
        }
        
        /// <remarks/>
        public void GetExpenseGeneratorsByFilterCountAsync(ExpenseGeneratorParams filterParams, object userState) {
            if ((this.GetExpenseGeneratorsByFilterCountOperationCompleted == null)) {
                this.GetExpenseGeneratorsByFilterCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExpenseGeneratorsByFilterCountOperationCompleted);
            }
            this.InvokeAsync("GetExpenseGeneratorsByFilterCount", new object[] {
                        filterParams}, this.GetExpenseGeneratorsByFilterCountOperationCompleted, userState);
        }
        
        private void OnGetExpenseGeneratorsByFilterCountOperationCompleted(object arg) {
            if ((this.GetExpenseGeneratorsByFilterCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExpenseGeneratorsByFilterCountCompleted(this, new GetExpenseGeneratorsByFilterCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ExpenseGeneratorProvider_GetAllShownE" +
            "xpenseGenerators", RequestElementName="ExpenseGeneratorProvider_GetAllShownExpenseGenerators", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ExpenseGeneratorProvider_GetAllShownExpenseGeneratorsResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("ExpenseGeneratorProvider_GetAllShownExpenseGeneratorsResult")]
        public ExpenseGeneratorModel[] GetAllShownExpenseGenerators(long userId) {
            object[] results = this.Invoke("GetAllShownExpenseGenerators", new object[] {
                        userId});
            return ((ExpenseGeneratorModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllShownExpenseGeneratorsAsync(long userId) {
            this.GetAllShownExpenseGeneratorsAsync(userId, null);
        }
        
        /// <remarks/>
        public void GetAllShownExpenseGeneratorsAsync(long userId, object userState) {
            if ((this.GetAllShownExpenseGeneratorsOperationCompleted == null)) {
                this.GetAllShownExpenseGeneratorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllShownExpenseGeneratorsOperationCompleted);
            }
            this.InvokeAsync("GetAllShownExpenseGenerators", new object[] {
                        userId}, this.GetAllShownExpenseGeneratorsOperationCompleted, userState);
        }
        
        private void OnGetAllShownExpenseGeneratorsOperationCompleted(object arg) {
            if ((this.GetAllShownExpenseGeneratorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllShownExpenseGeneratorsCompleted(this, new GetAllShownExpenseGeneratorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ExpenseGeneratorProvider_DeleteExpens" +
            "eGenerator", RequestElementName="ExpenseGeneratorProvider_DeleteExpenseGenerator", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ExpenseGeneratorProvider_DeleteExpenseGeneratorResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ExpenseGeneratorProvider_DeleteExpenseGeneratorResult")]
        public int DeleteExpenseGenerator(long expenseGeneratorID) {
            object[] results = this.Invoke("DeleteExpenseGenerator", new object[] {
                        expenseGeneratorID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteExpenseGeneratorAsync(long expenseGeneratorID) {
            this.DeleteExpenseGeneratorAsync(expenseGeneratorID, null);
        }
        
        /// <remarks/>
        public void DeleteExpenseGeneratorAsync(long expenseGeneratorID, object userState) {
            if ((this.DeleteExpenseGeneratorOperationCompleted == null)) {
                this.DeleteExpenseGeneratorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteExpenseGeneratorOperationCompleted);
            }
            this.InvokeAsync("DeleteExpenseGenerator", new object[] {
                        expenseGeneratorID}, this.DeleteExpenseGeneratorOperationCompleted, userState);
        }
        
        private void OnDeleteExpenseGeneratorOperationCompleted(object arg) {
            if ((this.DeleteExpenseGeneratorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteExpenseGeneratorCompleted(this, new DeleteExpenseGeneratorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ExpenseGeneratorProvider_SaveExpenseG" +
            "enerator", RequestElementName="ExpenseGeneratorProvider_SaveExpenseGenerator", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ExpenseGeneratorProvider_SaveExpenseGeneratorResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ExpenseGeneratorProvider_SaveExpenseGeneratorResult")]
        public int SaveExpenseGenerator(ExpenseGeneratorModel expenseGenerator, long oldId, out long newExpenseGeneratorID) {
            object[] results = this.Invoke("SaveExpenseGenerator", new object[] {
                        expenseGenerator,
                        oldId});
            newExpenseGeneratorID = ((long)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveExpenseGeneratorAsync(ExpenseGeneratorModel expenseGenerator, long oldId) {
            this.SaveExpenseGeneratorAsync(expenseGenerator, oldId, null);
        }
        
        /// <remarks/>
        public void SaveExpenseGeneratorAsync(ExpenseGeneratorModel expenseGenerator, long oldId, object userState) {
            if ((this.SaveExpenseGeneratorOperationCompleted == null)) {
                this.SaveExpenseGeneratorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveExpenseGeneratorOperationCompleted);
            }
            this.InvokeAsync("SaveExpenseGenerator", new object[] {
                        expenseGenerator,
                        oldId}, this.SaveExpenseGeneratorOperationCompleted, userState);
        }
        
        private void OnSaveExpenseGeneratorOperationCompleted(object arg) {
            if ((this.SaveExpenseGeneratorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveExpenseGeneratorCompleted(this, new SaveExpenseGeneratorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ExpenseCustomDefinedFieldProvider_Get" +
            "ExpenseCustdefField", RequestElementName="ExpenseCustomDefinedFieldProvider_GetExpenseCustdefField", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ExpenseCustomDefinedFieldProvider_GetExpenseCustdefFieldResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ExpenseCustomDefinedFieldProvider_GetExpenseCustdefFieldResult")]
        public ExpenseCustomDefinedFieldModel GetExpenseCustdefField(long expenseCustdefFieldID) {
            object[] results = this.Invoke("GetExpenseCustdefField", new object[] {
                        expenseCustdefFieldID});
            return ((ExpenseCustomDefinedFieldModel)(results[0]));
        }
        
        /// <remarks/>
        public void GetExpenseCustdefFieldAsync(long expenseCustdefFieldID) {
            this.GetExpenseCustdefFieldAsync(expenseCustdefFieldID, null);
        }
        
        /// <remarks/>
        public void GetExpenseCustdefFieldAsync(long expenseCustdefFieldID, object userState) {
            if ((this.GetExpenseCustdefFieldOperationCompleted == null)) {
                this.GetExpenseCustdefFieldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExpenseCustdefFieldOperationCompleted);
            }
            this.InvokeAsync("GetExpenseCustdefField", new object[] {
                        expenseCustdefFieldID}, this.GetExpenseCustdefFieldOperationCompleted, userState);
        }
        
        private void OnGetExpenseCustdefFieldOperationCompleted(object arg) {
            if ((this.GetExpenseCustdefFieldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExpenseCustdefFieldCompleted(this, new GetExpenseCustdefFieldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ExpenseCustomDefinedFieldProvider_Get" +
            "ExpenseCustdefFieldsByUserId", RequestElementName="ExpenseCustomDefinedFieldProvider_GetExpenseCustdefFieldsByUserId", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ExpenseCustomDefinedFieldProvider_GetExpenseCustdefFieldsByUserIdResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("ExpenseCustomDefinedFieldProvider_GetExpenseCustdefFieldsByUserIdResult")]
        public ExpenseCustomDefinedFieldModel[] GetExpenseCustdefFieldsByUserId(long userId) {
            object[] results = this.Invoke("GetExpenseCustdefFieldsByUserId", new object[] {
                        userId});
            return ((ExpenseCustomDefinedFieldModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetExpenseCustdefFieldsByUserIdAsync(long userId) {
            this.GetExpenseCustdefFieldsByUserIdAsync(userId, null);
        }
        
        /// <remarks/>
        public void GetExpenseCustdefFieldsByUserIdAsync(long userId, object userState) {
            if ((this.GetExpenseCustdefFieldsByUserIdOperationCompleted == null)) {
                this.GetExpenseCustdefFieldsByUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExpenseCustdefFieldsByUserIdOperationCompleted);
            }
            this.InvokeAsync("GetExpenseCustdefFieldsByUserId", new object[] {
                        userId}, this.GetExpenseCustdefFieldsByUserIdOperationCompleted, userState);
        }
        
        private void OnGetExpenseCustdefFieldsByUserIdOperationCompleted(object arg) {
            if ((this.GetExpenseCustdefFieldsByUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExpenseCustdefFieldsByUserIdCompleted(this, new GetExpenseCustdefFieldsByUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ExpenseCustomDefinedFieldProvider_Get" +
            "ExpenseCustdefFieldsByUserIdAndExpCatCode", RequestElementName="ExpenseCustomDefinedFieldProvider_GetExpenseCustdefFieldsByUserIdAndExpCatCode", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ExpenseCustomDefinedFieldProvider_GetExpenseCustdefFieldsByUserIdAndExpCatCodeRes" +
            "ponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("ExpenseCustomDefinedFieldProvider_GetExpenseCustdefFieldsByUserIdAndExpCatCodeRes" +
            "ult")]
        public ExpenseCustomDefinedFieldModel[] GetExpenseCustdefFieldsByUserIdAndExpCatCode(long userId, long expCatCode) {
            object[] results = this.Invoke("GetExpenseCustdefFieldsByUserIdAndExpCatCode", new object[] {
                        userId,
                        expCatCode});
            return ((ExpenseCustomDefinedFieldModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetExpenseCustdefFieldsByUserIdAndExpCatCodeAsync(long userId, long expCatCode) {
            this.GetExpenseCustdefFieldsByUserIdAndExpCatCodeAsync(userId, expCatCode, null);
        }
        
        /// <remarks/>
        public void GetExpenseCustdefFieldsByUserIdAndExpCatCodeAsync(long userId, long expCatCode, object userState) {
            if ((this.GetExpenseCustdefFieldsByUserIdAndExpCatCodeOperationCompleted == null)) {
                this.GetExpenseCustdefFieldsByUserIdAndExpCatCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExpenseCustdefFieldsByUserIdAndExpCatCodeOperationCompleted);
            }
            this.InvokeAsync("GetExpenseCustdefFieldsByUserIdAndExpCatCode", new object[] {
                        userId,
                        expCatCode}, this.GetExpenseCustdefFieldsByUserIdAndExpCatCodeOperationCompleted, userState);
        }
        
        private void OnGetExpenseCustdefFieldsByUserIdAndExpCatCodeOperationCompleted(object arg) {
            if ((this.GetExpenseCustdefFieldsByUserIdAndExpCatCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExpenseCustdefFieldsByUserIdAndExpCatCodeCompleted(this, new GetExpenseCustdefFieldsByUserIdAndExpCatCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ExpenseCustomDefinedFieldProvider_Del" +
            "eteExpenseCustdefField", RequestElementName="ExpenseCustomDefinedFieldProvider_DeleteExpenseCustdefField", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ExpenseCustomDefinedFieldProvider_DeleteExpenseCustdefFieldResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ExpenseCustomDefinedFieldProvider_DeleteExpenseCustdefFieldResult")]
        public int DeleteExpenseCustdefField(long expenseCustdefFieldID) {
            object[] results = this.Invoke("DeleteExpenseCustdefField", new object[] {
                        expenseCustdefFieldID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteExpenseCustdefFieldAsync(long expenseCustdefFieldID) {
            this.DeleteExpenseCustdefFieldAsync(expenseCustdefFieldID, null);
        }
        
        /// <remarks/>
        public void DeleteExpenseCustdefFieldAsync(long expenseCustdefFieldID, object userState) {
            if ((this.DeleteExpenseCustdefFieldOperationCompleted == null)) {
                this.DeleteExpenseCustdefFieldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteExpenseCustdefFieldOperationCompleted);
            }
            this.InvokeAsync("DeleteExpenseCustdefField", new object[] {
                        expenseCustdefFieldID}, this.DeleteExpenseCustdefFieldOperationCompleted, userState);
        }
        
        private void OnDeleteExpenseCustdefFieldOperationCompleted(object arg) {
            if ((this.DeleteExpenseCustdefFieldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteExpenseCustdefFieldCompleted(this, new DeleteExpenseCustdefFieldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ExpenseCustomDefinedFieldProvider_Sav" +
            "eExpenseCustdefField", RequestElementName="ExpenseCustomDefinedFieldProvider_SaveExpenseCustdefField", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ExpenseCustomDefinedFieldProvider_SaveExpenseCustdefFieldResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ExpenseCustomDefinedFieldProvider_SaveExpenseCustdefFieldResult")]
        public int SaveExpenseCustdefField(ExpenseCustomDefinedFieldModel expenseCustdefField, out long newExpenseCustdefFieldID) {
            object[] results = this.Invoke("SaveExpenseCustdefField", new object[] {
                        expenseCustdefField});
            newExpenseCustdefFieldID = ((long)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveExpenseCustdefFieldAsync(ExpenseCustomDefinedFieldModel expenseCustdefField) {
            this.SaveExpenseCustdefFieldAsync(expenseCustdefField, null);
        }
        
        /// <remarks/>
        public void SaveExpenseCustdefFieldAsync(ExpenseCustomDefinedFieldModel expenseCustdefField, object userState) {
            if ((this.SaveExpenseCustdefFieldOperationCompleted == null)) {
                this.SaveExpenseCustdefFieldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveExpenseCustdefFieldOperationCompleted);
            }
            this.InvokeAsync("SaveExpenseCustdefField", new object[] {
                        expenseCustdefField}, this.SaveExpenseCustdefFieldOperationCompleted, userState);
        }
        
        private void OnSaveExpenseCustdefFieldOperationCompleted(object arg) {
            if ((this.SaveExpenseCustdefFieldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveExpenseCustdefFieldCompleted(this, new SaveExpenseCustdefFieldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ExpenseCatalogValueProvider_GetExpCat" +
            "alogValue", RequestElementName="ExpenseCatalogValueProvider_GetExpCatalogValue", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ExpenseCatalogValueProvider_GetExpCatalogValueResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ExpenseCatalogValueProvider_GetExpCatalogValueResult")]
        public ExpenseCatalogValueModel GetExpCatalogValue(long userId, long valueId) {
            object[] results = this.Invoke("GetExpCatalogValue", new object[] {
                        userId,
                        valueId});
            return ((ExpenseCatalogValueModel)(results[0]));
        }
        
        /// <remarks/>
        public void GetExpCatalogValueAsync(long userId, long valueId) {
            this.GetExpCatalogValueAsync(userId, valueId, null);
        }
        
        /// <remarks/>
        public void GetExpCatalogValueAsync(long userId, long valueId, object userState) {
            if ((this.GetExpCatalogValueOperationCompleted == null)) {
                this.GetExpCatalogValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExpCatalogValueOperationCompleted);
            }
            this.InvokeAsync("GetExpCatalogValue", new object[] {
                        userId,
                        valueId}, this.GetExpCatalogValueOperationCompleted, userState);
        }
        
        private void OnGetExpCatalogValueOperationCompleted(object arg) {
            if ((this.GetExpCatalogValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExpCatalogValueCompleted(this, new GetExpCatalogValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ExpenseCatalogValueProvider_GetAllExp" +
            "CatalogValuesByUserId", RequestElementName="ExpenseCatalogValueProvider_GetAllExpCatalogValuesByUserId", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ExpenseCatalogValueProvider_GetAllExpCatalogValuesByUserIdResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("ExpenseCatalogValueProvider_GetAllExpCatalogValuesByUserIdResult")]
        public ExpenseCatalogValueModel[] GetAllExpCatalogValuesByUserId(long userId) {
            object[] results = this.Invoke("GetAllExpCatalogValuesByUserId", new object[] {
                        userId});
            return ((ExpenseCatalogValueModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllExpCatalogValuesByUserIdAsync(long userId) {
            this.GetAllExpCatalogValuesByUserIdAsync(userId, null);
        }
        
        /// <remarks/>
        public void GetAllExpCatalogValuesByUserIdAsync(long userId, object userState) {
            if ((this.GetAllExpCatalogValuesByUserIdOperationCompleted == null)) {
                this.GetAllExpCatalogValuesByUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllExpCatalogValuesByUserIdOperationCompleted);
            }
            this.InvokeAsync("GetAllExpCatalogValuesByUserId", new object[] {
                        userId}, this.GetAllExpCatalogValuesByUserIdOperationCompleted, userState);
        }
        
        private void OnGetAllExpCatalogValuesByUserIdOperationCompleted(object arg) {
            if ((this.GetAllExpCatalogValuesByUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllExpCatalogValuesByUserIdCompleted(this, new GetAllExpCatalogValuesByUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ExpenseCatalogValueProvider_GetAllExp" +
            "CatalogValues", RequestElementName="ExpenseCatalogValueProvider_GetAllExpCatalogValues", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ExpenseCatalogValueProvider_GetAllExpCatalogValuesResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("ExpenseCatalogValueProvider_GetAllExpCatalogValuesResult")]
        public ExpenseCatalogValueModel[] GetAllExpCatalogValues(long userId, long catalogId) {
            object[] results = this.Invoke("GetAllExpCatalogValues", new object[] {
                        userId,
                        catalogId});
            return ((ExpenseCatalogValueModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllExpCatalogValuesAsync(long userId, long catalogId) {
            this.GetAllExpCatalogValuesAsync(userId, catalogId, null);
        }
        
        /// <remarks/>
        public void GetAllExpCatalogValuesAsync(long userId, long catalogId, object userState) {
            if ((this.GetAllExpCatalogValuesOperationCompleted == null)) {
                this.GetAllExpCatalogValuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllExpCatalogValuesOperationCompleted);
            }
            this.InvokeAsync("GetAllExpCatalogValues", new object[] {
                        userId,
                        catalogId}, this.GetAllExpCatalogValuesOperationCompleted, userState);
        }
        
        private void OnGetAllExpCatalogValuesOperationCompleted(object arg) {
            if ((this.GetAllExpCatalogValuesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllExpCatalogValuesCompleted(this, new GetAllExpCatalogValuesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ExpenseCatalogValueProvider_GetAllExp" +
            "CatalogValuesByControlId", RequestElementName="ExpenseCatalogValueProvider_GetAllExpCatalogValuesByControlId", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ExpenseCatalogValueProvider_GetAllExpCatalogValuesByControlIdResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("ExpenseCatalogValueProvider_GetAllExpCatalogValuesByControlIdResult")]
        public ExpenseCatalogValueModel[] GetAllExpCatalogValuesByControlId(long userId, string controlId) {
            object[] results = this.Invoke("GetAllExpCatalogValuesByControlId", new object[] {
                        userId,
                        controlId});
            return ((ExpenseCatalogValueModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllExpCatalogValuesByControlIdAsync(long userId, string controlId) {
            this.GetAllExpCatalogValuesByControlIdAsync(userId, controlId, null);
        }
        
        /// <remarks/>
        public void GetAllExpCatalogValuesByControlIdAsync(long userId, string controlId, object userState) {
            if ((this.GetAllExpCatalogValuesByControlIdOperationCompleted == null)) {
                this.GetAllExpCatalogValuesByControlIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllExpCatalogValuesByControlIdOperationCompleted);
            }
            this.InvokeAsync("GetAllExpCatalogValuesByControlId", new object[] {
                        userId,
                        controlId}, this.GetAllExpCatalogValuesByControlIdOperationCompleted, userState);
        }
        
        private void OnGetAllExpCatalogValuesByControlIdOperationCompleted(object arg) {
            if ((this.GetAllExpCatalogValuesByControlIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllExpCatalogValuesByControlIdCompleted(this, new GetAllExpCatalogValuesByControlIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ExpenseCatalogValueProvider_GetAllExp" +
            "CatalogValuesByFieldName", RequestElementName="ExpenseCatalogValueProvider_GetAllExpCatalogValuesByFieldName", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ExpenseCatalogValueProvider_GetAllExpCatalogValuesByFieldNameResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("ExpenseCatalogValueProvider_GetAllExpCatalogValuesByFieldNameResult")]
        public ExpenseCatalogValueModel[] GetAllExpCatalogValuesByFieldName(long userId, string fieldName) {
            object[] results = this.Invoke("GetAllExpCatalogValuesByFieldName", new object[] {
                        userId,
                        fieldName});
            return ((ExpenseCatalogValueModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllExpCatalogValuesByFieldNameAsync(long userId, string fieldName) {
            this.GetAllExpCatalogValuesByFieldNameAsync(userId, fieldName, null);
        }
        
        /// <remarks/>
        public void GetAllExpCatalogValuesByFieldNameAsync(long userId, string fieldName, object userState) {
            if ((this.GetAllExpCatalogValuesByFieldNameOperationCompleted == null)) {
                this.GetAllExpCatalogValuesByFieldNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllExpCatalogValuesByFieldNameOperationCompleted);
            }
            this.InvokeAsync("GetAllExpCatalogValuesByFieldName", new object[] {
                        userId,
                        fieldName}, this.GetAllExpCatalogValuesByFieldNameOperationCompleted, userState);
        }
        
        private void OnGetAllExpCatalogValuesByFieldNameOperationCompleted(object arg) {
            if ((this.GetAllExpCatalogValuesByFieldNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllExpCatalogValuesByFieldNameCompleted(this, new GetAllExpCatalogValuesByFieldNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ExpenseCatalogValueProvider_DeleteExp" +
            "Value", RequestElementName="ExpenseCatalogValueProvider_DeleteExpValue", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ExpenseCatalogValueProvider_DeleteExpValueResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ExpenseCatalogValueProvider_DeleteExpValueResult")]
        public int DeleteExpValue(long userId, long valueId) {
            object[] results = this.Invoke("DeleteExpValue", new object[] {
                        userId,
                        valueId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteExpValueAsync(long userId, long valueId) {
            this.DeleteExpValueAsync(userId, valueId, null);
        }
        
        /// <remarks/>
        public void DeleteExpValueAsync(long userId, long valueId, object userState) {
            if ((this.DeleteExpValueOperationCompleted == null)) {
                this.DeleteExpValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteExpValueOperationCompleted);
            }
            this.InvokeAsync("DeleteExpValue", new object[] {
                        userId,
                        valueId}, this.DeleteExpValueOperationCompleted, userState);
        }
        
        private void OnDeleteExpValueOperationCompleted(object arg) {
            if ((this.DeleteExpValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteExpValueCompleted(this, new DeleteExpValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ExpenseCatalogValueProvider_CanDelete" +
            "", RequestElementName="ExpenseCatalogValueProvider_CanDelete", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ExpenseCatalogValueProvider_CanDeleteResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ExpenseCatalogValueProvider_CanDeleteResult")]
        public int CanDelete(long userId, long valueId) {
            object[] results = this.Invoke("CanDelete", new object[] {
                        userId,
                        valueId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CanDeleteAsync(long userId, long valueId) {
            this.CanDeleteAsync(userId, valueId, null);
        }
        
        /// <remarks/>
        public void CanDeleteAsync(long userId, long valueId, object userState) {
            if ((this.CanDeleteOperationCompleted == null)) {
                this.CanDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCanDeleteOperationCompleted);
            }
            this.InvokeAsync("CanDelete", new object[] {
                        userId,
                        valueId}, this.CanDeleteOperationCompleted, userState);
        }
        
        private void OnCanDeleteOperationCompleted(object arg) {
            if ((this.CanDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CanDeleteCompleted(this, new CanDeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ExpenseCatalogValueProvider_SaveExpVa" +
            "lue", RequestElementName="ExpenseCatalogValueProvider_SaveExpValue", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ExpenseCatalogValueProvider_SaveExpValueResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ExpenseCatalogValueProvider_SaveExpValueResult")]
        public int SaveExpValue(ExpenseCatalogValueModel catalogValue, out long newValueID) {
            object[] results = this.Invoke("SaveExpValue", new object[] {
                        catalogValue});
            newValueID = ((long)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveExpValueAsync(ExpenseCatalogValueModel catalogValue) {
            this.SaveExpValueAsync(catalogValue, null);
        }
        
        /// <remarks/>
        public void SaveExpValueAsync(ExpenseCatalogValueModel catalogValue, object userState) {
            if ((this.SaveExpValueOperationCompleted == null)) {
                this.SaveExpValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveExpValueOperationCompleted);
            }
            this.InvokeAsync("SaveExpValue", new object[] {
                        catalogValue}, this.SaveExpValueOperationCompleted, userState);
        }
        
        private void OnSaveExpValueOperationCompleted(object arg) {
            if ((this.SaveExpValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveExpValueCompleted(this, new SaveExpValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ExpenseCatalogProvider_GetExpCatalog", RequestElementName="ExpenseCatalogProvider_GetExpCatalog", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ExpenseCatalogProvider_GetExpCatalogResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ExpenseCatalogProvider_GetExpCatalogResult")]
        public ExpenseCatalogModel GetExpCatalog(long userId, long catalogId) {
            object[] results = this.Invoke("GetExpCatalog", new object[] {
                        userId,
                        catalogId});
            return ((ExpenseCatalogModel)(results[0]));
        }
        
        /// <remarks/>
        public void GetExpCatalogAsync(long userId, long catalogId) {
            this.GetExpCatalogAsync(userId, catalogId, null);
        }
        
        /// <remarks/>
        public void GetExpCatalogAsync(long userId, long catalogId, object userState) {
            if ((this.GetExpCatalogOperationCompleted == null)) {
                this.GetExpCatalogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExpCatalogOperationCompleted);
            }
            this.InvokeAsync("GetExpCatalog", new object[] {
                        userId,
                        catalogId}, this.GetExpCatalogOperationCompleted, userState);
        }
        
        private void OnGetExpCatalogOperationCompleted(object arg) {
            if ((this.GetExpCatalogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExpCatalogCompleted(this, new GetExpCatalogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ExpenseCatalogProvider_GetAllExpCatal" +
            "ogs", RequestElementName="ExpenseCatalogProvider_GetAllExpCatalogs", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ExpenseCatalogProvider_GetAllExpCatalogsResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("ExpenseCatalogProvider_GetAllExpCatalogsResult")]
        public ExpenseCatalogModel[] GetAllExpCatalogs(long userId) {
            object[] results = this.Invoke("GetAllExpCatalogs", new object[] {
                        userId});
            return ((ExpenseCatalogModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllExpCatalogsAsync(long userId) {
            this.GetAllExpCatalogsAsync(userId, null);
        }
        
        /// <remarks/>
        public void GetAllExpCatalogsAsync(long userId, object userState) {
            if ((this.GetAllExpCatalogsOperationCompleted == null)) {
                this.GetAllExpCatalogsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllExpCatalogsOperationCompleted);
            }
            this.InvokeAsync("GetAllExpCatalogs", new object[] {
                        userId}, this.GetAllExpCatalogsOperationCompleted, userState);
        }
        
        private void OnGetAllExpCatalogsOperationCompleted(object arg) {
            if ((this.GetAllExpCatalogsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllExpCatalogsCompleted(this, new GetAllExpCatalogsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ExpenseCatalogProvider_GetExpenseCata" +
            "logByFilterList", RequestElementName="ExpenseCatalogProvider_GetExpenseCatalogByFilterList", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ExpenseCatalogProvider_GetExpenseCatalogByFilterListResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("ExpenseCatalogProvider_GetExpenseCatalogByFilterListResult")]
        public ExpenseCatalogFilterModel[] GetExpenseCatalogByFilterList(ExpenseCatalogParams filterParams) {
            object[] results = this.Invoke("GetExpenseCatalogByFilterList", new object[] {
                        filterParams});
            return ((ExpenseCatalogFilterModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetExpenseCatalogByFilterListAsync(ExpenseCatalogParams filterParams) {
            this.GetExpenseCatalogByFilterListAsync(filterParams, null);
        }
        
        /// <remarks/>
        public void GetExpenseCatalogByFilterListAsync(ExpenseCatalogParams filterParams, object userState) {
            if ((this.GetExpenseCatalogByFilterListOperationCompleted == null)) {
                this.GetExpenseCatalogByFilterListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExpenseCatalogByFilterListOperationCompleted);
            }
            this.InvokeAsync("GetExpenseCatalogByFilterList", new object[] {
                        filterParams}, this.GetExpenseCatalogByFilterListOperationCompleted, userState);
        }
        
        private void OnGetExpenseCatalogByFilterListOperationCompleted(object arg) {
            if ((this.GetExpenseCatalogByFilterListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExpenseCatalogByFilterListCompleted(this, new GetExpenseCatalogByFilterListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ExpenseCatalogProvider_GetExpenseCata" +
            "logByFilterCount", RequestElementName="ExpenseCatalogProvider_GetExpenseCatalogByFilterCount", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ExpenseCatalogProvider_GetExpenseCatalogByFilterCountResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ExpenseCatalogProvider_GetExpenseCatalogByFilterCountResult")]
        public int GetExpenseCatalogByFilterCount(ExpenseCatalogParams filterParams) {
            object[] results = this.Invoke("GetExpenseCatalogByFilterCount", new object[] {
                        filterParams});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetExpenseCatalogByFilterCountAsync(ExpenseCatalogParams filterParams) {
            this.GetExpenseCatalogByFilterCountAsync(filterParams, null);
        }
        
        /// <remarks/>
        public void GetExpenseCatalogByFilterCountAsync(ExpenseCatalogParams filterParams, object userState) {
            if ((this.GetExpenseCatalogByFilterCountOperationCompleted == null)) {
                this.GetExpenseCatalogByFilterCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExpenseCatalogByFilterCountOperationCompleted);
            }
            this.InvokeAsync("GetExpenseCatalogByFilterCount", new object[] {
                        filterParams}, this.GetExpenseCatalogByFilterCountOperationCompleted, userState);
        }
        
        private void OnGetExpenseCatalogByFilterCountOperationCompleted(object arg) {
            if ((this.GetExpenseCatalogByFilterCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExpenseCatalogByFilterCountCompleted(this, new GetExpenseCatalogByFilterCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ExpenseCatalogProvider_FilterExpCatal" +
            "ogs", RequestElementName="ExpenseCatalogProvider_FilterExpCatalogs", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ExpenseCatalogProvider_FilterExpCatalogsResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("ExpenseCatalogProvider_FilterExpCatalogsResult")]
        public ExpenseCatalogModel[] FilterExpCatalogs(long userId, string fieldName, string generatorFk) {
            object[] results = this.Invoke("FilterExpCatalogs", new object[] {
                        userId,
                        fieldName,
                        generatorFk});
            return ((ExpenseCatalogModel[])(results[0]));
        }
        
        /// <remarks/>
        public void FilterExpCatalogsAsync(long userId, string fieldName, string generatorFk) {
            this.FilterExpCatalogsAsync(userId, fieldName, generatorFk, null);
        }
        
        /// <remarks/>
        public void FilterExpCatalogsAsync(long userId, string fieldName, string generatorFk, object userState) {
            if ((this.FilterExpCatalogsOperationCompleted == null)) {
                this.FilterExpCatalogsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFilterExpCatalogsOperationCompleted);
            }
            this.InvokeAsync("FilterExpCatalogs", new object[] {
                        userId,
                        fieldName,
                        generatorFk}, this.FilterExpCatalogsOperationCompleted, userState);
        }
        
        private void OnFilterExpCatalogsOperationCompleted(object arg) {
            if ((this.FilterExpCatalogsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FilterExpCatalogsCompleted(this, new FilterExpCatalogsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ExpenseCatalogProvider_FilterExpCatal" +
            "ogByFieldName", RequestElementName="ExpenseCatalogProvider_FilterExpCatalogByFieldName", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ExpenseCatalogProvider_FilterExpCatalogByFieldNameResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("ExpenseCatalogProvider_FilterExpCatalogByFieldNameResult")]
        public ExpenseCatalogModel[] FilterExpCatalogByFieldName(long userId, string fieldName) {
            object[] results = this.Invoke("FilterExpCatalogByFieldName", new object[] {
                        userId,
                        fieldName});
            return ((ExpenseCatalogModel[])(results[0]));
        }
        
        /// <remarks/>
        public void FilterExpCatalogByFieldNameAsync(long userId, string fieldName) {
            this.FilterExpCatalogByFieldNameAsync(userId, fieldName, null);
        }
        
        /// <remarks/>
        public void FilterExpCatalogByFieldNameAsync(long userId, string fieldName, object userState) {
            if ((this.FilterExpCatalogByFieldNameOperationCompleted == null)) {
                this.FilterExpCatalogByFieldNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFilterExpCatalogByFieldNameOperationCompleted);
            }
            this.InvokeAsync("FilterExpCatalogByFieldName", new object[] {
                        userId,
                        fieldName}, this.FilterExpCatalogByFieldNameOperationCompleted, userState);
        }
        
        private void OnFilterExpCatalogByFieldNameOperationCompleted(object arg) {
            if ((this.FilterExpCatalogByFieldNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FilterExpCatalogByFieldNameCompleted(this, new FilterExpCatalogByFieldNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ExpenseCatalogProvider_SaveExpCatalog" +
            "", RequestElementName="ExpenseCatalogProvider_SaveExpCatalog", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ExpenseCatalogProvider_SaveExpCatalogResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ExpenseCatalogProvider_SaveExpCatalogResult")]
        public int SaveExpCatalog(ExpenseCatalogModel catalogValue, out long newExpenseCatalogId) {
            object[] results = this.Invoke("SaveExpCatalog", new object[] {
                        catalogValue});
            newExpenseCatalogId = ((long)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveExpCatalogAsync(ExpenseCatalogModel catalogValue) {
            this.SaveExpCatalogAsync(catalogValue, null);
        }
        
        /// <remarks/>
        public void SaveExpCatalogAsync(ExpenseCatalogModel catalogValue, object userState) {
            if ((this.SaveExpCatalogOperationCompleted == null)) {
                this.SaveExpCatalogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveExpCatalogOperationCompleted);
            }
            this.InvokeAsync("SaveExpCatalog", new object[] {
                        catalogValue}, this.SaveExpCatalogOperationCompleted, userState);
        }
        
        private void OnSaveExpCatalogOperationCompleted(object arg) {
            if ((this.SaveExpCatalogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveExpCatalogCompleted(this, new SaveExpCatalogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ReportProvider_ReportGetSumByExpenses" +
            "TypesOnVehicle", RequestElementName="ReportProvider_ReportGetSumByExpensesTypesOnVehicle", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ReportProvider_ReportGetSumByExpensesTypesOnVehicleResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("ReportProvider_ReportGetSumByExpensesTypesOnVehicleResult")]
        public ReportGenericDataSumModel[] ReportGetSumByExpensesTypesOnVehicle(long userId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<long> expenseGeneratorPkList, string vehicleIds, string groupIds, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> expFrom, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> expTo, long childUserId, int vehicleActive) {
            object[] results = this.Invoke("ReportGetSumByExpensesTypesOnVehicle", new object[] {
                        userId,
                        expenseGeneratorPkList,
                        vehicleIds,
                        groupIds,
                        expFrom,
                        expTo,
                        childUserId,
                        vehicleActive});
            return ((ReportGenericDataSumModel[])(results[0]));
        }
        
        /// <remarks/>
        public void ReportGetSumByExpensesTypesOnVehicleAsync(long userId, System.Nullable<long> expenseGeneratorPkList, string vehicleIds, string groupIds, System.Nullable<System.DateTime> expFrom, System.Nullable<System.DateTime> expTo, long childUserId, int vehicleActive) {
            this.ReportGetSumByExpensesTypesOnVehicleAsync(userId, expenseGeneratorPkList, vehicleIds, groupIds, expFrom, expTo, childUserId, vehicleActive, null);
        }
        
        /// <remarks/>
        public void ReportGetSumByExpensesTypesOnVehicleAsync(long userId, System.Nullable<long> expenseGeneratorPkList, string vehicleIds, string groupIds, System.Nullable<System.DateTime> expFrom, System.Nullable<System.DateTime> expTo, long childUserId, int vehicleActive, object userState) {
            if ((this.ReportGetSumByExpensesTypesOnVehicleOperationCompleted == null)) {
                this.ReportGetSumByExpensesTypesOnVehicleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportGetSumByExpensesTypesOnVehicleOperationCompleted);
            }
            this.InvokeAsync("ReportGetSumByExpensesTypesOnVehicle", new object[] {
                        userId,
                        expenseGeneratorPkList,
                        vehicleIds,
                        groupIds,
                        expFrom,
                        expTo,
                        childUserId,
                        vehicleActive}, this.ReportGetSumByExpensesTypesOnVehicleOperationCompleted, userState);
        }
        
        private void OnReportGetSumByExpensesTypesOnVehicleOperationCompleted(object arg) {
            if ((this.ReportGetSumByExpensesTypesOnVehicleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportGetSumByExpensesTypesOnVehicleCompleted(this, new ReportGetSumByExpensesTypesOnVehicleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ReportProvider_GetPRLCountAndExpenses" +
            "TotalReport", RequestElementName="ReportProvider_GetPRLCountAndExpensesTotalReport", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ReportProvider_GetPRLCountAndExpensesTotalReportResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ReportProvider_GetPRLCountAndExpensesTotalReportResult")]
        public PRLCountAndExpensesTotalReportModel GetPRLCountAndExpensesTotalReport(string fromDate, string toDate, long userId, long childUserId) {
            object[] results = this.Invoke("GetPRLCountAndExpensesTotalReport", new object[] {
                        fromDate,
                        toDate,
                        userId,
                        childUserId});
            return ((PRLCountAndExpensesTotalReportModel)(results[0]));
        }
        
        /// <remarks/>
        public void GetPRLCountAndExpensesTotalReportAsync(string fromDate, string toDate, long userId, long childUserId) {
            this.GetPRLCountAndExpensesTotalReportAsync(fromDate, toDate, userId, childUserId, null);
        }
        
        /// <remarks/>
        public void GetPRLCountAndExpensesTotalReportAsync(string fromDate, string toDate, long userId, long childUserId, object userState) {
            if ((this.GetPRLCountAndExpensesTotalReportOperationCompleted == null)) {
                this.GetPRLCountAndExpensesTotalReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPRLCountAndExpensesTotalReportOperationCompleted);
            }
            this.InvokeAsync("GetPRLCountAndExpensesTotalReport", new object[] {
                        fromDate,
                        toDate,
                        userId,
                        childUserId}, this.GetPRLCountAndExpensesTotalReportOperationCompleted, userState);
        }
        
        private void OnGetPRLCountAndExpensesTotalReportOperationCompleted(object arg) {
            if ((this.GetPRLCountAndExpensesTotalReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPRLCountAndExpensesTotalReportCompleted(this, new GetPRLCountAndExpensesTotalReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ReportProvider_GetPRLCountAndExpenses" +
            "VehicleGroupReport", RequestElementName="ReportProvider_GetPRLCountAndExpensesVehicleGroupReport", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ReportProvider_GetPRLCountAndExpensesVehicleGroupReportResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("ReportProvider_GetPRLCountAndExpensesVehicleGroupReportResult")]
        public PRLCountAndExpensesTotalReportModel[] GetPRLCountAndExpensesVehicleGroupReport(string fromDate, string toDate, long userId, long childUserId) {
            object[] results = this.Invoke("GetPRLCountAndExpensesVehicleGroupReport", new object[] {
                        fromDate,
                        toDate,
                        userId,
                        childUserId});
            return ((PRLCountAndExpensesTotalReportModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPRLCountAndExpensesVehicleGroupReportAsync(string fromDate, string toDate, long userId, long childUserId) {
            this.GetPRLCountAndExpensesVehicleGroupReportAsync(fromDate, toDate, userId, childUserId, null);
        }
        
        /// <remarks/>
        public void GetPRLCountAndExpensesVehicleGroupReportAsync(string fromDate, string toDate, long userId, long childUserId, object userState) {
            if ((this.GetPRLCountAndExpensesVehicleGroupReportOperationCompleted == null)) {
                this.GetPRLCountAndExpensesVehicleGroupReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPRLCountAndExpensesVehicleGroupReportOperationCompleted);
            }
            this.InvokeAsync("GetPRLCountAndExpensesVehicleGroupReport", new object[] {
                        fromDate,
                        toDate,
                        userId,
                        childUserId}, this.GetPRLCountAndExpensesVehicleGroupReportOperationCompleted, userState);
        }
        
        private void OnGetPRLCountAndExpensesVehicleGroupReportOperationCompleted(object arg) {
            if ((this.GetPRLCountAndExpensesVehicleGroupReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPRLCountAndExpensesVehicleGroupReportCompleted(this, new GetPRLCountAndExpensesVehicleGroupReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ReportProvider_GetPRLCountAndExpenses" +
            "VehicleReport", RequestElementName="ReportProvider_GetPRLCountAndExpensesVehicleReport", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ReportProvider_GetPRLCountAndExpensesVehicleReportResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("ReportProvider_GetPRLCountAndExpensesVehicleReportResult")]
        public PRLCountAndExpensesTotalReportModel[] GetPRLCountAndExpensesVehicleReport(string fromDate, string toDate, long userId, long childUserId) {
            object[] results = this.Invoke("GetPRLCountAndExpensesVehicleReport", new object[] {
                        fromDate,
                        toDate,
                        userId,
                        childUserId});
            return ((PRLCountAndExpensesTotalReportModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPRLCountAndExpensesVehicleReportAsync(string fromDate, string toDate, long userId, long childUserId) {
            this.GetPRLCountAndExpensesVehicleReportAsync(fromDate, toDate, userId, childUserId, null);
        }
        
        /// <remarks/>
        public void GetPRLCountAndExpensesVehicleReportAsync(string fromDate, string toDate, long userId, long childUserId, object userState) {
            if ((this.GetPRLCountAndExpensesVehicleReportOperationCompleted == null)) {
                this.GetPRLCountAndExpensesVehicleReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPRLCountAndExpensesVehicleReportOperationCompleted);
            }
            this.InvokeAsync("GetPRLCountAndExpensesVehicleReport", new object[] {
                        fromDate,
                        toDate,
                        userId,
                        childUserId}, this.GetPRLCountAndExpensesVehicleReportOperationCompleted, userState);
        }
        
        private void OnGetPRLCountAndExpensesVehicleReportOperationCompleted(object arg) {
            if ((this.GetPRLCountAndExpensesVehicleReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPRLCountAndExpensesVehicleReportCompleted(this, new GetPRLCountAndExpensesVehicleReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ReportProvider_GetPRLCountAndExpenses" +
            "DriverReport", RequestElementName="ReportProvider_GetPRLCountAndExpensesDriverReport", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ReportProvider_GetPRLCountAndExpensesDriverReportResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("ReportProvider_GetPRLCountAndExpensesDriverReportResult")]
        public PRLCountAndExpensesTotalReportModel[] GetPRLCountAndExpensesDriverReport(string fromDate, string toDate, long userId, long childUserId) {
            object[] results = this.Invoke("GetPRLCountAndExpensesDriverReport", new object[] {
                        fromDate,
                        toDate,
                        userId,
                        childUserId});
            return ((PRLCountAndExpensesTotalReportModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPRLCountAndExpensesDriverReportAsync(string fromDate, string toDate, long userId, long childUserId) {
            this.GetPRLCountAndExpensesDriverReportAsync(fromDate, toDate, userId, childUserId, null);
        }
        
        /// <remarks/>
        public void GetPRLCountAndExpensesDriverReportAsync(string fromDate, string toDate, long userId, long childUserId, object userState) {
            if ((this.GetPRLCountAndExpensesDriverReportOperationCompleted == null)) {
                this.GetPRLCountAndExpensesDriverReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPRLCountAndExpensesDriverReportOperationCompleted);
            }
            this.InvokeAsync("GetPRLCountAndExpensesDriverReport", new object[] {
                        fromDate,
                        toDate,
                        userId,
                        childUserId}, this.GetPRLCountAndExpensesDriverReportOperationCompleted, userState);
        }
        
        private void OnGetPRLCountAndExpensesDriverReportOperationCompleted(object arg) {
            if ((this.GetPRLCountAndExpensesDriverReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPRLCountAndExpensesDriverReportCompleted(this, new GetPRLCountAndExpensesDriverReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ReportProvider_GetPRLCountAndExpenses" +
            "AreaReport", RequestElementName="ReportProvider_GetPRLCountAndExpensesAreaReport", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ReportProvider_GetPRLCountAndExpensesAreaReportResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("ReportProvider_GetPRLCountAndExpensesAreaReportResult")]
        public PRLCountAndExpensesTotalReportModel[] GetPRLCountAndExpensesAreaReport(string fromDate, string toDate, long userId, long childUserId) {
            object[] results = this.Invoke("GetPRLCountAndExpensesAreaReport", new object[] {
                        fromDate,
                        toDate,
                        userId,
                        childUserId});
            return ((PRLCountAndExpensesTotalReportModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPRLCountAndExpensesAreaReportAsync(string fromDate, string toDate, long userId, long childUserId) {
            this.GetPRLCountAndExpensesAreaReportAsync(fromDate, toDate, userId, childUserId, null);
        }
        
        /// <remarks/>
        public void GetPRLCountAndExpensesAreaReportAsync(string fromDate, string toDate, long userId, long childUserId, object userState) {
            if ((this.GetPRLCountAndExpensesAreaReportOperationCompleted == null)) {
                this.GetPRLCountAndExpensesAreaReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPRLCountAndExpensesAreaReportOperationCompleted);
            }
            this.InvokeAsync("GetPRLCountAndExpensesAreaReport", new object[] {
                        fromDate,
                        toDate,
                        userId,
                        childUserId}, this.GetPRLCountAndExpensesAreaReportOperationCompleted, userState);
        }
        
        private void OnGetPRLCountAndExpensesAreaReportOperationCompleted(object arg) {
            if ((this.GetPRLCountAndExpensesAreaReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPRLCountAndExpensesAreaReportCompleted(this, new GetPRLCountAndExpensesAreaReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ReportProvider_GetTollReport", RequestElementName="ReportProvider_GetTollReport", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ReportProvider_GetTollReportResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("ReportProvider_GetTollReportResult")]
        public FuelAndTollModel[] GetTollReport(long userId, long expenseGeneratorPkList, string vehicleId, string vehicleGroupId, System.DateTime dateFrom, System.DateTime dateTo, long childUserId, int groupBy) {
            object[] results = this.Invoke("GetTollReport", new object[] {
                        userId,
                        expenseGeneratorPkList,
                        vehicleId,
                        vehicleGroupId,
                        dateFrom,
                        dateTo,
                        childUserId,
                        groupBy});
            return ((FuelAndTollModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTollReportAsync(long userId, long expenseGeneratorPkList, string vehicleId, string vehicleGroupId, System.DateTime dateFrom, System.DateTime dateTo, long childUserId, int groupBy) {
            this.GetTollReportAsync(userId, expenseGeneratorPkList, vehicleId, vehicleGroupId, dateFrom, dateTo, childUserId, groupBy, null);
        }
        
        /// <remarks/>
        public void GetTollReportAsync(long userId, long expenseGeneratorPkList, string vehicleId, string vehicleGroupId, System.DateTime dateFrom, System.DateTime dateTo, long childUserId, int groupBy, object userState) {
            if ((this.GetTollReportOperationCompleted == null)) {
                this.GetTollReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTollReportOperationCompleted);
            }
            this.InvokeAsync("GetTollReport", new object[] {
                        userId,
                        expenseGeneratorPkList,
                        vehicleId,
                        vehicleGroupId,
                        dateFrom,
                        dateTo,
                        childUserId,
                        groupBy}, this.GetTollReportOperationCompleted, userState);
        }
        
        private void OnGetTollReportOperationCompleted(object arg) {
            if ((this.GetTollReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTollReportCompleted(this, new GetTollReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/ReportProvider_GetReportFile", RequestElementName="ReportProvider_GetReportFile", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="ReportProvider_GetReportFileResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ReportProvider_GetReportFileResult", DataType="base64Binary")]
        public byte[] GetReportFile(string reportId, string directoryPath) {
            object[] results = this.Invoke("GetReportFile", new object[] {
                        reportId,
                        directoryPath});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReportFileAsync(string reportId, string directoryPath) {
            this.GetReportFileAsync(reportId, directoryPath, null);
        }
        
        /// <remarks/>
        public void GetReportFileAsync(string reportId, string directoryPath, object userState) {
            if ((this.GetReportFileOperationCompleted == null)) {
                this.GetReportFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReportFileOperationCompleted);
            }
            this.InvokeAsync("GetReportFile", new object[] {
                        reportId,
                        directoryPath}, this.GetReportFileOperationCompleted, userState);
        }
        
        private void OnGetReportFileOperationCompleted(object arg) {
            if ((this.GetReportFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReportFileCompleted(this, new GetReportFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/UserProvider_DeleteUser", RequestElementName="UserProvider_DeleteUser", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="UserProvider_DeleteUserResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("UserProvider_DeleteUserResult")]
        public int DeleteUser(long userID, bool isChildUser) {
            object[] results = this.Invoke("DeleteUser", new object[] {
                        userID,
                        isChildUser});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteUserAsync(long userID, bool isChildUser) {
            this.DeleteUserAsync(userID, isChildUser, null);
        }
        
        /// <remarks/>
        public void DeleteUserAsync(long userID, bool isChildUser, object userState) {
            if ((this.DeleteUserOperationCompleted == null)) {
                this.DeleteUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteUserOperationCompleted);
            }
            this.InvokeAsync("DeleteUser", new object[] {
                        userID,
                        isChildUser}, this.DeleteUserOperationCompleted, userState);
        }
        
        private void OnDeleteUserOperationCompleted(object arg) {
            if ((this.DeleteUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteUserCompleted(this, new DeleteUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/UserProvider_GetChildUser", RequestElementName="UserProvider_GetChildUser", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="UserProvider_GetChildUserResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("UserProvider_GetChildUserResult")]
        public UserModel GetChildUser(long childUserID) {
            object[] results = this.Invoke("GetChildUser", new object[] {
                        childUserID});
            return ((UserModel)(results[0]));
        }
        
        /// <remarks/>
        public void GetChildUserAsync(long childUserID) {
            this.GetChildUserAsync(childUserID, null);
        }
        
        /// <remarks/>
        public void GetChildUserAsync(long childUserID, object userState) {
            if ((this.GetChildUserOperationCompleted == null)) {
                this.GetChildUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChildUserOperationCompleted);
            }
            this.InvokeAsync("GetChildUser", new object[] {
                        childUserID}, this.GetChildUserOperationCompleted, userState);
        }
        
        private void OnGetChildUserOperationCompleted(object arg) {
            if ((this.GetChildUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChildUserCompleted(this, new GetChildUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/UserProvider_GetChildUsers", RequestElementName="UserProvider_GetChildUsers", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="UserProvider_GetChildUsersResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("UserProvider_GetChildUsersResult")]
        public UserModel[] GetChildUsers(long userID) {
            object[] results = this.Invoke("GetChildUsers", new object[] {
                        userID});
            return ((UserModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetChildUsersAsync(long userID) {
            this.GetChildUsersAsync(userID, null);
        }
        
        /// <remarks/>
        public void GetChildUsersAsync(long userID, object userState) {
            if ((this.GetChildUsersOperationCompleted == null)) {
                this.GetChildUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChildUsersOperationCompleted);
            }
            this.InvokeAsync("GetChildUsers", new object[] {
                        userID}, this.GetChildUsersOperationCompleted, userState);
        }
        
        private void OnGetChildUsersOperationCompleted(object arg) {
            if ((this.GetChildUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChildUsersCompleted(this, new GetChildUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/UserProvider_GetParentAndHisChildUser" +
            "s", RequestElementName="UserProvider_GetParentAndHisChildUsers", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="UserProvider_GetParentAndHisChildUsersResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("UserProvider_GetParentAndHisChildUsersResult")]
        public UserModel[] GetParentAndHisChildUsers(long userID) {
            object[] results = this.Invoke("GetParentAndHisChildUsers", new object[] {
                        userID});
            return ((UserModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetParentAndHisChildUsersAsync(long userID) {
            this.GetParentAndHisChildUsersAsync(userID, null);
        }
        
        /// <remarks/>
        public void GetParentAndHisChildUsersAsync(long userID, object userState) {
            if ((this.GetParentAndHisChildUsersOperationCompleted == null)) {
                this.GetParentAndHisChildUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetParentAndHisChildUsersOperationCompleted);
            }
            this.InvokeAsync("GetParentAndHisChildUsers", new object[] {
                        userID}, this.GetParentAndHisChildUsersOperationCompleted, userState);
        }
        
        private void OnGetParentAndHisChildUsersOperationCompleted(object arg) {
            if ((this.GetParentAndHisChildUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetParentAndHisChildUsersCompleted(this, new GetParentAndHisChildUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/UserProvider_GetAuthorizedUsersForVeh" +
            "icleGroup", RequestElementName="UserProvider_GetAuthorizedUsersForVehicleGroup", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="UserProvider_GetAuthorizedUsersForVehicleGroupResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("UserProvider_GetAuthorizedUsersForVehicleGroupResult")]
        public UserModel[] GetAuthorizedUsersForVehicleGroup(long userID) {
            object[] results = this.Invoke("GetAuthorizedUsersForVehicleGroup", new object[] {
                        userID});
            return ((UserModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAuthorizedUsersForVehicleGroupAsync(long userID) {
            this.GetAuthorizedUsersForVehicleGroupAsync(userID, null);
        }
        
        /// <remarks/>
        public void GetAuthorizedUsersForVehicleGroupAsync(long userID, object userState) {
            if ((this.GetAuthorizedUsersForVehicleGroupOperationCompleted == null)) {
                this.GetAuthorizedUsersForVehicleGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAuthorizedUsersForVehicleGroupOperationCompleted);
            }
            this.InvokeAsync("GetAuthorizedUsersForVehicleGroup", new object[] {
                        userID}, this.GetAuthorizedUsersForVehicleGroupOperationCompleted, userState);
        }
        
        private void OnGetAuthorizedUsersForVehicleGroupOperationCompleted(object arg) {
            if ((this.GetAuthorizedUsersForVehicleGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAuthorizedUsersForVehicleGroupCompleted(this, new GetAuthorizedUsersForVehicleGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/UserProvider_SynchronizeChildUser", RequestElementName="UserProvider_SynchronizeChildUser", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="UserProvider_SynchronizeChildUserResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("UserProvider_SynchronizeChildUserResult")]
        public int SynchronizeChildUser(long childUserID, string username, long parentID, long groupID, bool deleted) {
            object[] results = this.Invoke("SynchronizeChildUser", new object[] {
                        childUserID,
                        username,
                        parentID,
                        groupID,
                        deleted});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SynchronizeChildUserAsync(long childUserID, string username, long parentID, long groupID, bool deleted) {
            this.SynchronizeChildUserAsync(childUserID, username, parentID, groupID, deleted, null);
        }
        
        /// <remarks/>
        public void SynchronizeChildUserAsync(long childUserID, string username, long parentID, long groupID, bool deleted, object userState) {
            if ((this.SynchronizeChildUserOperationCompleted == null)) {
                this.SynchronizeChildUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSynchronizeChildUserOperationCompleted);
            }
            this.InvokeAsync("SynchronizeChildUser", new object[] {
                        childUserID,
                        username,
                        parentID,
                        groupID,
                        deleted}, this.SynchronizeChildUserOperationCompleted, userState);
        }
        
        private void OnSynchronizeChildUserOperationCompleted(object arg) {
            if ((this.SynchronizeChildUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SynchronizeChildUserCompleted(this, new SynchronizeChildUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/UserProvider_SynchronizeUser", RequestElementName="UserProvider_SynchronizeUser", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="UserProvider_SynchronizeUserResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("UserProvider_SynchronizeUserResult")]
        public int SynchronizeUser(long userID, string username, long parentID, long groupID, string firstName, string lastName, string place) {
            object[] results = this.Invoke("SynchronizeUser", new object[] {
                        userID,
                        username,
                        parentID,
                        groupID,
                        firstName,
                        lastName,
                        place});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SynchronizeUserAsync(long userID, string username, long parentID, long groupID, string firstName, string lastName, string place) {
            this.SynchronizeUserAsync(userID, username, parentID, groupID, firstName, lastName, place, null);
        }
        
        /// <remarks/>
        public void SynchronizeUserAsync(long userID, string username, long parentID, long groupID, string firstName, string lastName, string place, object userState) {
            if ((this.SynchronizeUserOperationCompleted == null)) {
                this.SynchronizeUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSynchronizeUserOperationCompleted);
            }
            this.InvokeAsync("SynchronizeUser", new object[] {
                        userID,
                        username,
                        parentID,
                        groupID,
                        firstName,
                        lastName,
                        place}, this.SynchronizeUserOperationCompleted, userState);
        }
        
        private void OnSynchronizeUserOperationCompleted(object arg) {
            if ((this.SynchronizeUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SynchronizeUserCompleted(this, new SynchronizeUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/UserProvider_FilterUsersForAutoComple" +
            "te", RequestElementName="UserProvider_FilterUsersForAutoComplete", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="UserProvider_FilterUsersForAutoCompleteResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("UserProvider_FilterUsersForAutoCompleteResult")]
        public UserModel[] FilterUsersForAutoComplete(string filter, int beginIndex, int endIndex, long userId) {
            object[] results = this.Invoke("FilterUsersForAutoComplete", new object[] {
                        filter,
                        beginIndex,
                        endIndex,
                        userId});
            return ((UserModel[])(results[0]));
        }
        
        /// <remarks/>
        public void FilterUsersForAutoCompleteAsync(string filter, int beginIndex, int endIndex, long userId) {
            this.FilterUsersForAutoCompleteAsync(filter, beginIndex, endIndex, userId, null);
        }
        
        /// <remarks/>
        public void FilterUsersForAutoCompleteAsync(string filter, int beginIndex, int endIndex, long userId, object userState) {
            if ((this.FilterUsersForAutoCompleteOperationCompleted == null)) {
                this.FilterUsersForAutoCompleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFilterUsersForAutoCompleteOperationCompleted);
            }
            this.InvokeAsync("FilterUsersForAutoComplete", new object[] {
                        filter,
                        beginIndex,
                        endIndex,
                        userId}, this.FilterUsersForAutoCompleteOperationCompleted, userState);
        }
        
        private void OnFilterUsersForAutoCompleteOperationCompleted(object arg) {
            if ((this.FilterUsersForAutoCompleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FilterUsersForAutoCompleteCompleted(this, new FilterUsersForAutoCompleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/UserProvider_GetUserMail", RequestElementName="UserProvider_GetUserMail", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="UserProvider_GetUserMailResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("UserProvider_GetUserMailResult")]
        public string GetUserMail(long userId) {
            object[] results = this.Invoke("GetUserMail", new object[] {
                        userId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserMailAsync(long userId) {
            this.GetUserMailAsync(userId, null);
        }
        
        /// <remarks/>
        public void GetUserMailAsync(long userId, object userState) {
            if ((this.GetUserMailOperationCompleted == null)) {
                this.GetUserMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserMailOperationCompleted);
            }
            this.InvokeAsync("GetUserMail", new object[] {
                        userId}, this.GetUserMailOperationCompleted, userState);
        }
        
        private void OnGetUserMailOperationCompleted(object arg) {
            if ((this.GetUserMailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserMailCompleted(this, new GetUserMailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/UserRightsProvider_GetUserRights", RequestElementName="UserRightsProvider_GetUserRights", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="UserRightsProvider_GetUserRightsResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("UserRightsProvider_GetUserRightsResult")]
        public RightModel[] GetUserRights(long userId) {
            object[] results = this.Invoke("GetUserRights", new object[] {
                        userId});
            return ((RightModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUserRightsAsync(long userId) {
            this.GetUserRightsAsync(userId, null);
        }
        
        /// <remarks/>
        public void GetUserRightsAsync(long userId, object userState) {
            if ((this.GetUserRightsOperationCompleted == null)) {
                this.GetUserRightsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserRightsOperationCompleted);
            }
            this.InvokeAsync("GetUserRights", new object[] {
                        userId}, this.GetUserRightsOperationCompleted, userState);
        }
        
        private void OnGetUserRightsOperationCompleted(object arg) {
            if ((this.GetUserRightsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserRightsCompleted(this, new GetUserRightsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/UserRightsProvider_GetAllUsersWithRig" +
            "hts", RequestElementName="UserRightsProvider_GetAllUsersWithRights", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="UserRightsProvider_GetAllUsersWithRightsResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("UserRightsProvider_GetAllUsersWithRightsResult")]
        public UserRightsModel[] GetAllUsersWithRights(long parentId) {
            object[] results = this.Invoke("GetAllUsersWithRights", new object[] {
                        parentId});
            return ((UserRightsModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllUsersWithRightsAsync(long parentId) {
            this.GetAllUsersWithRightsAsync(parentId, null);
        }
        
        /// <remarks/>
        public void GetAllUsersWithRightsAsync(long parentId, object userState) {
            if ((this.GetAllUsersWithRightsOperationCompleted == null)) {
                this.GetAllUsersWithRightsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllUsersWithRightsOperationCompleted);
            }
            this.InvokeAsync("GetAllUsersWithRights", new object[] {
                        parentId}, this.GetAllUsersWithRightsOperationCompleted, userState);
        }
        
        private void OnGetAllUsersWithRightsOperationCompleted(object arg) {
            if ((this.GetAllUsersWithRightsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllUsersWithRightsCompleted(this, new GetAllUsersWithRightsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/UserRightsProvider_FilterUsersWithRig" +
            "hts", RequestElementName="UserRightsProvider_FilterUsersWithRights", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="UserRightsProvider_FilterUsersWithRightsResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("UserRightsProvider_FilterUsersWithRightsResult")]
        public UserRightsModel[] FilterUsersWithRights(string userName, long parentId) {
            object[] results = this.Invoke("FilterUsersWithRights", new object[] {
                        userName,
                        parentId});
            return ((UserRightsModel[])(results[0]));
        }
        
        /// <remarks/>
        public void FilterUsersWithRightsAsync(string userName, long parentId) {
            this.FilterUsersWithRightsAsync(userName, parentId, null);
        }
        
        /// <remarks/>
        public void FilterUsersWithRightsAsync(string userName, long parentId, object userState) {
            if ((this.FilterUsersWithRightsOperationCompleted == null)) {
                this.FilterUsersWithRightsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFilterUsersWithRightsOperationCompleted);
            }
            this.InvokeAsync("FilterUsersWithRights", new object[] {
                        userName,
                        parentId}, this.FilterUsersWithRightsOperationCompleted, userState);
        }
        
        private void OnFilterUsersWithRightsOperationCompleted(object arg) {
            if ((this.FilterUsersWithRightsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FilterUsersWithRightsCompleted(this, new FilterUsersWithRightsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/UserRightsProvider_HasRight", RequestElementName="UserRightsProvider_HasRight", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="UserRightsProvider_HasRightResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("UserRightsProvider_HasRightResult")]
        public int HasRight(long userId, string rightName) {
            object[] results = this.Invoke("HasRight", new object[] {
                        userId,
                        rightName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void HasRightAsync(long userId, string rightName) {
            this.HasRightAsync(userId, rightName, null);
        }
        
        /// <remarks/>
        public void HasRightAsync(long userId, string rightName, object userState) {
            if ((this.HasRightOperationCompleted == null)) {
                this.HasRightOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHasRightOperationCompleted);
            }
            this.InvokeAsync("HasRight", new object[] {
                        userId,
                        rightName}, this.HasRightOperationCompleted, userState);
        }
        
        private void OnHasRightOperationCompleted(object arg) {
            if ((this.HasRightCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HasRightCompleted(this, new HasRightCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/UserRightsProvider_SaveUserRights", RequestElementName="UserRightsProvider_SaveUserRights", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="UserRightsProvider_SaveUserRightsResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("UserRightsProvider_SaveUserRightsResult")]
        public int SaveUserRights(UserRightsModel userRights) {
            object[] results = this.Invoke("SaveUserRights", new object[] {
                        userRights});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveUserRightsAsync(UserRightsModel userRights) {
            this.SaveUserRightsAsync(userRights, null);
        }
        
        /// <remarks/>
        public void SaveUserRightsAsync(UserRightsModel userRights, object userState) {
            if ((this.SaveUserRightsOperationCompleted == null)) {
                this.SaveUserRightsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveUserRightsOperationCompleted);
            }
            this.InvokeAsync("SaveUserRights", new object[] {
                        userRights}, this.SaveUserRightsOperationCompleted, userState);
        }
        
        private void OnSaveUserRightsOperationCompleted(object arg) {
            if ((this.SaveUserRightsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveUserRightsCompleted(this, new SaveUserRightsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/CompanyProvider_GetCompany", RequestElementName="CompanyProvider_GetCompany", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="CompanyProvider_GetCompanyResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("CompanyProvider_GetCompanyResult")]
        public CompanyModel GetCompany(long userId, long companyID) {
            object[] results = this.Invoke("GetCompany", new object[] {
                        userId,
                        companyID});
            return ((CompanyModel)(results[0]));
        }
        
        /// <remarks/>
        public void GetCompanyAsync(long userId, long companyID) {
            this.GetCompanyAsync(userId, companyID, null);
        }
        
        /// <remarks/>
        public void GetCompanyAsync(long userId, long companyID, object userState) {
            if ((this.GetCompanyOperationCompleted == null)) {
                this.GetCompanyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCompanyOperationCompleted);
            }
            this.InvokeAsync("GetCompany", new object[] {
                        userId,
                        companyID}, this.GetCompanyOperationCompleted, userState);
        }
        
        private void OnGetCompanyOperationCompleted(object arg) {
            if ((this.GetCompanyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCompanyCompleted(this, new GetCompanyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/CompanyProvider_GetAllCompanies", RequestElementName="CompanyProvider_GetAllCompanies", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="CompanyProvider_GetAllCompaniesResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("CompanyProvider_GetAllCompaniesResult")]
        public CompanyModel[] GetAllCompanies(long userId) {
            object[] results = this.Invoke("GetAllCompanies", new object[] {
                        userId});
            return ((CompanyModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllCompaniesAsync(long userId) {
            this.GetAllCompaniesAsync(userId, null);
        }
        
        /// <remarks/>
        public void GetAllCompaniesAsync(long userId, object userState) {
            if ((this.GetAllCompaniesOperationCompleted == null)) {
                this.GetAllCompaniesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllCompaniesOperationCompleted);
            }
            this.InvokeAsync("GetAllCompanies", new object[] {
                        userId}, this.GetAllCompaniesOperationCompleted, userState);
        }
        
        private void OnGetAllCompaniesOperationCompleted(object arg) {
            if ((this.GetAllCompaniesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllCompaniesCompleted(this, new GetAllCompaniesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/CompanyProvider_GetCompaniesByUserId", RequestElementName="CompanyProvider_GetCompaniesByUserId", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="CompanyProvider_GetCompaniesByUserIdResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("CompanyProvider_GetCompaniesByUserIdResult")]
        public CompanyModel[] GetCompaniesByUserId(long userId) {
            object[] results = this.Invoke("GetCompaniesByUserId", new object[] {
                        userId});
            return ((CompanyModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCompaniesByUserIdAsync(long userId) {
            this.GetCompaniesByUserIdAsync(userId, null);
        }
        
        /// <remarks/>
        public void GetCompaniesByUserIdAsync(long userId, object userState) {
            if ((this.GetCompaniesByUserIdOperationCompleted == null)) {
                this.GetCompaniesByUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCompaniesByUserIdOperationCompleted);
            }
            this.InvokeAsync("GetCompaniesByUserId", new object[] {
                        userId}, this.GetCompaniesByUserIdOperationCompleted, userState);
        }
        
        private void OnGetCompaniesByUserIdOperationCompleted(object arg) {
            if ((this.GetCompaniesByUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCompaniesByUserIdCompleted(this, new GetCompaniesByUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/CompanyProvider_GetCompanyByFilterCou" +
            "nt", RequestElementName="CompanyProvider_GetCompanyByFilterCount", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="CompanyProvider_GetCompanyByFilterCountResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("CompanyProvider_GetCompanyByFilterCountResult")]
        public int GetCompanyByFilterCount(CompanyParams companyParams) {
            object[] results = this.Invoke("GetCompanyByFilterCount", new object[] {
                        companyParams});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetCompanyByFilterCountAsync(CompanyParams companyParams) {
            this.GetCompanyByFilterCountAsync(companyParams, null);
        }
        
        /// <remarks/>
        public void GetCompanyByFilterCountAsync(CompanyParams companyParams, object userState) {
            if ((this.GetCompanyByFilterCountOperationCompleted == null)) {
                this.GetCompanyByFilterCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCompanyByFilterCountOperationCompleted);
            }
            this.InvokeAsync("GetCompanyByFilterCount", new object[] {
                        companyParams}, this.GetCompanyByFilterCountOperationCompleted, userState);
        }
        
        private void OnGetCompanyByFilterCountOperationCompleted(object arg) {
            if ((this.GetCompanyByFilterCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCompanyByFilterCountCompleted(this, new GetCompanyByFilterCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/CompanyProvider_GetCompanyByFilterLis" +
            "t", RequestElementName="CompanyProvider_GetCompanyByFilterList", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="CompanyProvider_GetCompanyByFilterListResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("CompanyProvider_GetCompanyByFilterListResult")]
        public CompanyFilterModel[] GetCompanyByFilterList(CompanyParams companyParams) {
            object[] results = this.Invoke("GetCompanyByFilterList", new object[] {
                        companyParams});
            return ((CompanyFilterModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCompanyByFilterListAsync(CompanyParams companyParams) {
            this.GetCompanyByFilterListAsync(companyParams, null);
        }
        
        /// <remarks/>
        public void GetCompanyByFilterListAsync(CompanyParams companyParams, object userState) {
            if ((this.GetCompanyByFilterListOperationCompleted == null)) {
                this.GetCompanyByFilterListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCompanyByFilterListOperationCompleted);
            }
            this.InvokeAsync("GetCompanyByFilterList", new object[] {
                        companyParams}, this.GetCompanyByFilterListOperationCompleted, userState);
        }
        
        private void OnGetCompanyByFilterListOperationCompleted(object arg) {
            if ((this.GetCompanyByFilterListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCompanyByFilterListCompleted(this, new GetCompanyByFilterListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/CompanyProvider_FilterCompaniesForAut" +
            "oComplete", RequestElementName="CompanyProvider_FilterCompaniesForAutoComplete", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="CompanyProvider_FilterCompaniesForAutoCompleteResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("CompanyProvider_FilterCompaniesForAutoCompleteResult")]
        public CompanyModel[] FilterCompaniesForAutoComplete(string filter, int beginIndex, int endIndex) {
            object[] results = this.Invoke("FilterCompaniesForAutoComplete", new object[] {
                        filter,
                        beginIndex,
                        endIndex});
            return ((CompanyModel[])(results[0]));
        }
        
        /// <remarks/>
        public void FilterCompaniesForAutoCompleteAsync(string filter, int beginIndex, int endIndex) {
            this.FilterCompaniesForAutoCompleteAsync(filter, beginIndex, endIndex, null);
        }
        
        /// <remarks/>
        public void FilterCompaniesForAutoCompleteAsync(string filter, int beginIndex, int endIndex, object userState) {
            if ((this.FilterCompaniesForAutoCompleteOperationCompleted == null)) {
                this.FilterCompaniesForAutoCompleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFilterCompaniesForAutoCompleteOperationCompleted);
            }
            this.InvokeAsync("FilterCompaniesForAutoComplete", new object[] {
                        filter,
                        beginIndex,
                        endIndex}, this.FilterCompaniesForAutoCompleteOperationCompleted, userState);
        }
        
        private void OnFilterCompaniesForAutoCompleteOperationCompleted(object arg) {
            if ((this.FilterCompaniesForAutoCompleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FilterCompaniesForAutoCompleteCompleted(this, new FilterCompaniesForAutoCompleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/CompanyProvider_DeleteCompany", RequestElementName="CompanyProvider_DeleteCompany", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="CompanyProvider_DeleteCompanyResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("CompanyProvider_DeleteCompanyResult")]
        public int DeleteCompany(long userId, long companyID) {
            object[] results = this.Invoke("DeleteCompany", new object[] {
                        userId,
                        companyID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteCompanyAsync(long userId, long companyID) {
            this.DeleteCompanyAsync(userId, companyID, null);
        }
        
        /// <remarks/>
        public void DeleteCompanyAsync(long userId, long companyID, object userState) {
            if ((this.DeleteCompanyOperationCompleted == null)) {
                this.DeleteCompanyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCompanyOperationCompleted);
            }
            this.InvokeAsync("DeleteCompany", new object[] {
                        userId,
                        companyID}, this.DeleteCompanyOperationCompleted, userState);
        }
        
        private void OnDeleteCompanyOperationCompleted(object arg) {
            if ((this.DeleteCompanyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCompanyCompleted(this, new DeleteCompanyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/CompanyProvider_SaveCompany", RequestElementName="CompanyProvider_SaveCompany", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="CompanyProvider_SaveCompanyResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("CompanyProvider_SaveCompanyResult")]
        public int SaveCompany(CompanyModel company, out long newCompanyID) {
            object[] results = this.Invoke("SaveCompany", new object[] {
                        company});
            newCompanyID = ((long)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveCompanyAsync(CompanyModel company) {
            this.SaveCompanyAsync(company, null);
        }
        
        /// <remarks/>
        public void SaveCompanyAsync(CompanyModel company, object userState) {
            if ((this.SaveCompanyOperationCompleted == null)) {
                this.SaveCompanyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveCompanyOperationCompleted);
            }
            this.InvokeAsync("SaveCompany", new object[] {
                        company}, this.SaveCompanyOperationCompleted, userState);
        }
        
        private void OnSaveCompanyOperationCompleted(object arg) {
            if ((this.SaveCompanyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveCompanyCompleted(this, new SaveCompanyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/DamageProvider_GetDamagesByFilterList" +
            "", RequestElementName="DamageProvider_GetDamagesByFilterList", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="DamageProvider_GetDamagesByFilterListResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("DamageProvider_GetDamagesByFilterListResult")]
        public DamageFilterModel[] GetDamagesByFilterList(DamageParams filterParams) {
            object[] results = this.Invoke("GetDamagesByFilterList", new object[] {
                        filterParams});
            return ((DamageFilterModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDamagesByFilterListAsync(DamageParams filterParams) {
            this.GetDamagesByFilterListAsync(filterParams, null);
        }
        
        /// <remarks/>
        public void GetDamagesByFilterListAsync(DamageParams filterParams, object userState) {
            if ((this.GetDamagesByFilterListOperationCompleted == null)) {
                this.GetDamagesByFilterListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDamagesByFilterListOperationCompleted);
            }
            this.InvokeAsync("GetDamagesByFilterList", new object[] {
                        filterParams}, this.GetDamagesByFilterListOperationCompleted, userState);
        }
        
        private void OnGetDamagesByFilterListOperationCompleted(object arg) {
            if ((this.GetDamagesByFilterListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDamagesByFilterListCompleted(this, new GetDamagesByFilterListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/DamageProvider_GetDamagesByFilterCoun" +
            "t", RequestElementName="DamageProvider_GetDamagesByFilterCount", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="DamageProvider_GetDamagesByFilterCountResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("DamageProvider_GetDamagesByFilterCountResult")]
        public int GetDamagesByFilterCount(DamageParams filterParams) {
            object[] results = this.Invoke("GetDamagesByFilterCount", new object[] {
                        filterParams});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetDamagesByFilterCountAsync(DamageParams filterParams) {
            this.GetDamagesByFilterCountAsync(filterParams, null);
        }
        
        /// <remarks/>
        public void GetDamagesByFilterCountAsync(DamageParams filterParams, object userState) {
            if ((this.GetDamagesByFilterCountOperationCompleted == null)) {
                this.GetDamagesByFilterCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDamagesByFilterCountOperationCompleted);
            }
            this.InvokeAsync("GetDamagesByFilterCount", new object[] {
                        filterParams}, this.GetDamagesByFilterCountOperationCompleted, userState);
        }
        
        private void OnGetDamagesByFilterCountOperationCompleted(object arg) {
            if ((this.GetDamagesByFilterCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDamagesByFilterCountCompleted(this, new GetDamagesByFilterCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/DamageProvider_GetExpenseDamagesByFil" +
            "terList", RequestElementName="DamageProvider_GetExpenseDamagesByFilterList", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="DamageProvider_GetExpenseDamagesByFilterListResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("DamageProvider_GetExpenseDamagesByFilterListResult")]
        public ExpenseDamageFilterModel[] GetExpenseDamagesByFilterList(ExpenseDamageParams filterParams) {
            object[] results = this.Invoke("GetExpenseDamagesByFilterList", new object[] {
                        filterParams});
            return ((ExpenseDamageFilterModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetExpenseDamagesByFilterListAsync(ExpenseDamageParams filterParams) {
            this.GetExpenseDamagesByFilterListAsync(filterParams, null);
        }
        
        /// <remarks/>
        public void GetExpenseDamagesByFilterListAsync(ExpenseDamageParams filterParams, object userState) {
            if ((this.GetExpenseDamagesByFilterListOperationCompleted == null)) {
                this.GetExpenseDamagesByFilterListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExpenseDamagesByFilterListOperationCompleted);
            }
            this.InvokeAsync("GetExpenseDamagesByFilterList", new object[] {
                        filterParams}, this.GetExpenseDamagesByFilterListOperationCompleted, userState);
        }
        
        private void OnGetExpenseDamagesByFilterListOperationCompleted(object arg) {
            if ((this.GetExpenseDamagesByFilterListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExpenseDamagesByFilterListCompleted(this, new GetExpenseDamagesByFilterListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/DamageProvider_GetExpenseDamagesByFil" +
            "terCount", RequestElementName="DamageProvider_GetExpenseDamagesByFilterCount", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="DamageProvider_GetExpenseDamagesByFilterCountResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("DamageProvider_GetExpenseDamagesByFilterCountResult")]
        public int GetExpenseDamagesByFilterCount(ExpenseDamageParams filterParams) {
            object[] results = this.Invoke("GetExpenseDamagesByFilterCount", new object[] {
                        filterParams});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetExpenseDamagesByFilterCountAsync(ExpenseDamageParams filterParams) {
            this.GetExpenseDamagesByFilterCountAsync(filterParams, null);
        }
        
        /// <remarks/>
        public void GetExpenseDamagesByFilterCountAsync(ExpenseDamageParams filterParams, object userState) {
            if ((this.GetExpenseDamagesByFilterCountOperationCompleted == null)) {
                this.GetExpenseDamagesByFilterCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExpenseDamagesByFilterCountOperationCompleted);
            }
            this.InvokeAsync("GetExpenseDamagesByFilterCount", new object[] {
                        filterParams}, this.GetExpenseDamagesByFilterCountOperationCompleted, userState);
        }
        
        private void OnGetExpenseDamagesByFilterCountOperationCompleted(object arg) {
            if ((this.GetExpenseDamagesByFilterCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExpenseDamagesByFilterCountCompleted(this, new GetExpenseDamagesByFilterCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/DamageProvider_GetDamagedVehicles", RequestElementName="DamageProvider_GetDamagedVehicles", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="DamageProvider_GetDamagedVehiclesResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("DamageProvider_GetDamagedVehiclesResult")]
        public UiDamageModel[] GetDamagedVehicles(long userId, long childUserId) {
            object[] results = this.Invoke("GetDamagedVehicles", new object[] {
                        userId,
                        childUserId});
            return ((UiDamageModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDamagedVehiclesAsync(long userId, long childUserId) {
            this.GetDamagedVehiclesAsync(userId, childUserId, null);
        }
        
        /// <remarks/>
        public void GetDamagedVehiclesAsync(long userId, long childUserId, object userState) {
            if ((this.GetDamagedVehiclesOperationCompleted == null)) {
                this.GetDamagedVehiclesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDamagedVehiclesOperationCompleted);
            }
            this.InvokeAsync("GetDamagedVehicles", new object[] {
                        userId,
                        childUserId}, this.GetDamagedVehiclesOperationCompleted, userState);
        }
        
        private void OnGetDamagedVehiclesOperationCompleted(object arg) {
            if ((this.GetDamagedVehiclesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDamagedVehiclesCompleted(this, new GetDamagedVehiclesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/DamageProvider_GetDamagedVehiclesFilt" +
            "er", RequestElementName="DamageProvider_GetDamagedVehiclesFilter", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="DamageProvider_GetDamagedVehiclesFilterResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("DamageProvider_GetDamagedVehiclesFilterResult")]
        public UiDamageModel[] GetDamagedVehiclesFilter([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<long> userId, string vehicleName, string registration, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<long> vehicleType, long childUserId) {
            object[] results = this.Invoke("GetDamagedVehiclesFilter", new object[] {
                        userId,
                        vehicleName,
                        registration,
                        vehicleType,
                        childUserId});
            return ((UiDamageModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDamagedVehiclesFilterAsync(System.Nullable<long> userId, string vehicleName, string registration, System.Nullable<long> vehicleType, long childUserId) {
            this.GetDamagedVehiclesFilterAsync(userId, vehicleName, registration, vehicleType, childUserId, null);
        }
        
        /// <remarks/>
        public void GetDamagedVehiclesFilterAsync(System.Nullable<long> userId, string vehicleName, string registration, System.Nullable<long> vehicleType, long childUserId, object userState) {
            if ((this.GetDamagedVehiclesFilterOperationCompleted == null)) {
                this.GetDamagedVehiclesFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDamagedVehiclesFilterOperationCompleted);
            }
            this.InvokeAsync("GetDamagedVehiclesFilter", new object[] {
                        userId,
                        vehicleName,
                        registration,
                        vehicleType,
                        childUserId}, this.GetDamagedVehiclesFilterOperationCompleted, userState);
        }
        
        private void OnGetDamagedVehiclesFilterOperationCompleted(object arg) {
            if ((this.GetDamagedVehiclesFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDamagedVehiclesFilterCompleted(this, new GetDamagedVehiclesFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/DamageProvider_GetDamagesByVehicleId", RequestElementName="DamageProvider_GetDamagesByVehicleId", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="DamageProvider_GetDamagesByVehicleIdResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("DamageProvider_GetDamagesByVehicleIdResult")]
        public DamageModel[] GetDamagesByVehicleId(long userId, long vehicleId) {
            object[] results = this.Invoke("GetDamagesByVehicleId", new object[] {
                        userId,
                        vehicleId});
            return ((DamageModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDamagesByVehicleIdAsync(long userId, long vehicleId) {
            this.GetDamagesByVehicleIdAsync(userId, vehicleId, null);
        }
        
        /// <remarks/>
        public void GetDamagesByVehicleIdAsync(long userId, long vehicleId, object userState) {
            if ((this.GetDamagesByVehicleIdOperationCompleted == null)) {
                this.GetDamagesByVehicleIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDamagesByVehicleIdOperationCompleted);
            }
            this.InvokeAsync("GetDamagesByVehicleId", new object[] {
                        userId,
                        vehicleId}, this.GetDamagesByVehicleIdOperationCompleted, userState);
        }
        
        private void OnGetDamagesByVehicleIdOperationCompleted(object arg) {
            if ((this.GetDamagesByVehicleIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDamagesByVehicleIdCompleted(this, new GetDamagesByVehicleIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/DamageProvider_GetDamagesByExpenseId", RequestElementName="DamageProvider_GetDamagesByExpenseId", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="DamageProvider_GetDamagesByExpenseIdResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("DamageProvider_GetDamagesByExpenseIdResult")]
        public UiDamageModel[] GetDamagesByExpenseId(long userId, long expenseId) {
            object[] results = this.Invoke("GetDamagesByExpenseId", new object[] {
                        userId,
                        expenseId});
            return ((UiDamageModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDamagesByExpenseIdAsync(long userId, long expenseId) {
            this.GetDamagesByExpenseIdAsync(userId, expenseId, null);
        }
        
        /// <remarks/>
        public void GetDamagesByExpenseIdAsync(long userId, long expenseId, object userState) {
            if ((this.GetDamagesByExpenseIdOperationCompleted == null)) {
                this.GetDamagesByExpenseIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDamagesByExpenseIdOperationCompleted);
            }
            this.InvokeAsync("GetDamagesByExpenseId", new object[] {
                        userId,
                        expenseId}, this.GetDamagesByExpenseIdOperationCompleted, userState);
        }
        
        private void OnGetDamagesByExpenseIdOperationCompleted(object arg) {
            if ((this.GetDamagesByExpenseIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDamagesByExpenseIdCompleted(this, new GetDamagesByExpenseIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/DamageProvider_FilterDamagesByVehicle" +
            "Id", RequestElementName="DamageProvider_FilterDamagesByVehicleId", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="DamageProvider_FilterDamagesByVehicleIdResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("DamageProvider_FilterDamagesByVehicleIdResult")]
        public DamageModel[] FilterDamagesByVehicleId(long userId, long vehicleId, string damageDate, string damageNumber, string driverName, string fromRepairDate, string toRepairDate, string fromDamageAmount, string toDamageAmount) {
            object[] results = this.Invoke("FilterDamagesByVehicleId", new object[] {
                        userId,
                        vehicleId,
                        damageDate,
                        damageNumber,
                        driverName,
                        fromRepairDate,
                        toRepairDate,
                        fromDamageAmount,
                        toDamageAmount});
            return ((DamageModel[])(results[0]));
        }
        
        /// <remarks/>
        public void FilterDamagesByVehicleIdAsync(long userId, long vehicleId, string damageDate, string damageNumber, string driverName, string fromRepairDate, string toRepairDate, string fromDamageAmount, string toDamageAmount) {
            this.FilterDamagesByVehicleIdAsync(userId, vehicleId, damageDate, damageNumber, driverName, fromRepairDate, toRepairDate, fromDamageAmount, toDamageAmount, null);
        }
        
        /// <remarks/>
        public void FilterDamagesByVehicleIdAsync(long userId, long vehicleId, string damageDate, string damageNumber, string driverName, string fromRepairDate, string toRepairDate, string fromDamageAmount, string toDamageAmount, object userState) {
            if ((this.FilterDamagesByVehicleIdOperationCompleted == null)) {
                this.FilterDamagesByVehicleIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFilterDamagesByVehicleIdOperationCompleted);
            }
            this.InvokeAsync("FilterDamagesByVehicleId", new object[] {
                        userId,
                        vehicleId,
                        damageDate,
                        damageNumber,
                        driverName,
                        fromRepairDate,
                        toRepairDate,
                        fromDamageAmount,
                        toDamageAmount}, this.FilterDamagesByVehicleIdOperationCompleted, userState);
        }
        
        private void OnFilterDamagesByVehicleIdOperationCompleted(object arg) {
            if ((this.FilterDamagesByVehicleIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FilterDamagesByVehicleIdCompleted(this, new FilterDamagesByVehicleIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/DamageProvider_DeleteDamage", RequestElementName="DamageProvider_DeleteDamage", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="DamageProvider_DeleteDamageResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("DamageProvider_DeleteDamageResult")]
        public int DeleteDamage(long userId, long damagePk) {
            object[] results = this.Invoke("DeleteDamage", new object[] {
                        userId,
                        damagePk});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteDamageAsync(long userId, long damagePk) {
            this.DeleteDamageAsync(userId, damagePk, null);
        }
        
        /// <remarks/>
        public void DeleteDamageAsync(long userId, long damagePk, object userState) {
            if ((this.DeleteDamageOperationCompleted == null)) {
                this.DeleteDamageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDamageOperationCompleted);
            }
            this.InvokeAsync("DeleteDamage", new object[] {
                        userId,
                        damagePk}, this.DeleteDamageOperationCompleted, userState);
        }
        
        private void OnDeleteDamageOperationCompleted(object arg) {
            if ((this.DeleteDamageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDamageCompleted(this, new DeleteDamageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/DamageProvider_GetDamage", RequestElementName="DamageProvider_GetDamage", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="DamageProvider_GetDamageResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("DamageProvider_GetDamageResult")]
        public DamageModel GetDamage(long userId, long damagePk) {
            object[] results = this.Invoke("GetDamage", new object[] {
                        userId,
                        damagePk});
            return ((DamageModel)(results[0]));
        }
        
        /// <remarks/>
        public void GetDamageAsync(long userId, long damagePk) {
            this.GetDamageAsync(userId, damagePk, null);
        }
        
        /// <remarks/>
        public void GetDamageAsync(long userId, long damagePk, object userState) {
            if ((this.GetDamageOperationCompleted == null)) {
                this.GetDamageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDamageOperationCompleted);
            }
            this.InvokeAsync("GetDamage", new object[] {
                        userId,
                        damagePk}, this.GetDamageOperationCompleted, userState);
        }
        
        private void OnGetDamageOperationCompleted(object arg) {
            if ((this.GetDamageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDamageCompleted(this, new GetDamageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/DamageProvider_GetNextDamageNum", RequestElementName="DamageProvider_GetNextDamageNum", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="DamageProvider_GetNextDamageNumResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("DamageProvider_GetNextDamageNumResult")]
        public long GetNextDamageNum(long userId, long vehicleFk) {
            object[] results = this.Invoke("GetNextDamageNum", new object[] {
                        userId,
                        vehicleFk});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetNextDamageNumAsync(long userId, long vehicleFk) {
            this.GetNextDamageNumAsync(userId, vehicleFk, null);
        }
        
        /// <remarks/>
        public void GetNextDamageNumAsync(long userId, long vehicleFk, object userState) {
            if ((this.GetNextDamageNumOperationCompleted == null)) {
                this.GetNextDamageNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNextDamageNumOperationCompleted);
            }
            this.InvokeAsync("GetNextDamageNum", new object[] {
                        userId,
                        vehicleFk}, this.GetNextDamageNumOperationCompleted, userState);
        }
        
        private void OnGetNextDamageNumOperationCompleted(object arg) {
            if ((this.GetNextDamageNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNextDamageNumCompleted(this, new GetNextDamageNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/DamageProvider_SaveDamage", RequestElementName="DamageProvider_SaveDamage", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="DamageProvider_SaveDamageResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("DamageProvider_SaveDamageResult")]
        public int SaveDamage(DamageModel damage, out long newDamagePk) {
            object[] results = this.Invoke("SaveDamage", new object[] {
                        damage});
            newDamagePk = ((long)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveDamageAsync(DamageModel damage) {
            this.SaveDamageAsync(damage, null);
        }
        
        /// <remarks/>
        public void SaveDamageAsync(DamageModel damage, object userState) {
            if ((this.SaveDamageOperationCompleted == null)) {
                this.SaveDamageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveDamageOperationCompleted);
            }
            this.InvokeAsync("SaveDamage", new object[] {
                        damage}, this.SaveDamageOperationCompleted, userState);
        }
        
        private void OnSaveDamageOperationCompleted(object arg) {
            if ((this.SaveDamageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveDamageCompleted(this, new SaveDamageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/DamageReportProvider_GetDamagedVehicl" +
            "esForReport", RequestElementName="DamageReportProvider_GetDamagedVehiclesForReport", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="DamageReportProvider_GetDamagedVehiclesForReportResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("DamageReportProvider_GetDamagedVehiclesForReportResult")]
        public DamageReportModel[] GetDamagedVehiclesForReport(long userId, string vehicleFk, string vehicleGroupFk, string damageType, string dateFrom, string dateTo, long childUserId) {
            object[] results = this.Invoke("GetDamagedVehiclesForReport", new object[] {
                        userId,
                        vehicleFk,
                        vehicleGroupFk,
                        damageType,
                        dateFrom,
                        dateTo,
                        childUserId});
            return ((DamageReportModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDamagedVehiclesForReportAsync(long userId, string vehicleFk, string vehicleGroupFk, string damageType, string dateFrom, string dateTo, long childUserId) {
            this.GetDamagedVehiclesForReportAsync(userId, vehicleFk, vehicleGroupFk, damageType, dateFrom, dateTo, childUserId, null);
        }
        
        /// <remarks/>
        public void GetDamagedVehiclesForReportAsync(long userId, string vehicleFk, string vehicleGroupFk, string damageType, string dateFrom, string dateTo, long childUserId, object userState) {
            if ((this.GetDamagedVehiclesForReportOperationCompleted == null)) {
                this.GetDamagedVehiclesForReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDamagedVehiclesForReportOperationCompleted);
            }
            this.InvokeAsync("GetDamagedVehiclesForReport", new object[] {
                        userId,
                        vehicleFk,
                        vehicleGroupFk,
                        damageType,
                        dateFrom,
                        dateTo,
                        childUserId}, this.GetDamagedVehiclesForReportOperationCompleted, userState);
        }
        
        private void OnGetDamagedVehiclesForReportOperationCompleted(object arg) {
            if ((this.GetDamagedVehiclesForReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDamagedVehiclesForReportCompleted(this, new GetDamagedVehiclesForReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/DamageReportProvider_GetDamagedVehicl" +
            "esForExcelReport", RequestElementName="DamageReportProvider_GetDamagedVehiclesForExcelReport", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="DamageReportProvider_GetDamagedVehiclesForExcelReportResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("DamageReportProvider_GetDamagedVehiclesForExcelReportResult")]
        public DamageExcelReportModel[] GetDamagedVehiclesForExcelReport(long userId, string vehicleFk, string vehicleGroupFk, string damageType, string dateFrom, string dateTo, long childUserId) {
            object[] results = this.Invoke("GetDamagedVehiclesForExcelReport", new object[] {
                        userId,
                        vehicleFk,
                        vehicleGroupFk,
                        damageType,
                        dateFrom,
                        dateTo,
                        childUserId});
            return ((DamageExcelReportModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDamagedVehiclesForExcelReportAsync(long userId, string vehicleFk, string vehicleGroupFk, string damageType, string dateFrom, string dateTo, long childUserId) {
            this.GetDamagedVehiclesForExcelReportAsync(userId, vehicleFk, vehicleGroupFk, damageType, dateFrom, dateTo, childUserId, null);
        }
        
        /// <remarks/>
        public void GetDamagedVehiclesForExcelReportAsync(long userId, string vehicleFk, string vehicleGroupFk, string damageType, string dateFrom, string dateTo, long childUserId, object userState) {
            if ((this.GetDamagedVehiclesForExcelReportOperationCompleted == null)) {
                this.GetDamagedVehiclesForExcelReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDamagedVehiclesForExcelReportOperationCompleted);
            }
            this.InvokeAsync("GetDamagedVehiclesForExcelReport", new object[] {
                        userId,
                        vehicleFk,
                        vehicleGroupFk,
                        damageType,
                        dateFrom,
                        dateTo,
                        childUserId}, this.GetDamagedVehiclesForExcelReportOperationCompleted, userState);
        }
        
        private void OnGetDamagedVehiclesForExcelReportOperationCompleted(object arg) {
            if ((this.GetDamagedVehiclesForExcelReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDamagedVehiclesForExcelReportCompleted(this, new GetDamagedVehiclesForExcelReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/DriverProvider_GetDriver", RequestElementName="DriverProvider_GetDriver", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="DriverProvider_GetDriverResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("DriverProvider_GetDriverResult")]
        public DriverModel GetDriver(long userId, long driverID) {
            object[] results = this.Invoke("GetDriver", new object[] {
                        userId,
                        driverID});
            return ((DriverModel)(results[0]));
        }
        
        /// <remarks/>
        public void GetDriverAsync(long userId, long driverID) {
            this.GetDriverAsync(userId, driverID, null);
        }
        
        /// <remarks/>
        public void GetDriverAsync(long userId, long driverID, object userState) {
            if ((this.GetDriverOperationCompleted == null)) {
                this.GetDriverOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDriverOperationCompleted);
            }
            this.InvokeAsync("GetDriver", new object[] {
                        userId,
                        driverID}, this.GetDriverOperationCompleted, userState);
        }
        
        private void OnGetDriverOperationCompleted(object arg) {
            if ((this.GetDriverCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDriverCompleted(this, new GetDriverCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/DriverProvider_GetDriverByDesignation" +
            "", RequestElementName="DriverProvider_GetDriverByDesignation", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="DriverProvider_GetDriverByDesignationResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("DriverProvider_GetDriverByDesignationResult")]
        public DriverModel GetDriverByDesignation(long userId, long designation) {
            object[] results = this.Invoke("GetDriverByDesignation", new object[] {
                        userId,
                        designation});
            return ((DriverModel)(results[0]));
        }
        
        /// <remarks/>
        public void GetDriverByDesignationAsync(long userId, long designation) {
            this.GetDriverByDesignationAsync(userId, designation, null);
        }
        
        /// <remarks/>
        public void GetDriverByDesignationAsync(long userId, long designation, object userState) {
            if ((this.GetDriverByDesignationOperationCompleted == null)) {
                this.GetDriverByDesignationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDriverByDesignationOperationCompleted);
            }
            this.InvokeAsync("GetDriverByDesignation", new object[] {
                        userId,
                        designation}, this.GetDriverByDesignationOperationCompleted, userState);
        }
        
        private void OnGetDriverByDesignationOperationCompleted(object arg) {
            if ((this.GetDriverByDesignationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDriverByDesignationCompleted(this, new GetDriverByDesignationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/DriverProvider_GetDriversByUserId", RequestElementName="DriverProvider_GetDriversByUserId", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="DriverProvider_GetDriversByUserIdResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("DriverProvider_GetDriversByUserIdResult")]
        public DriverModel[] GetDriversByUserId(long userId) {
            object[] results = this.Invoke("GetDriversByUserId", new object[] {
                        userId});
            return ((DriverModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDriversByUserIdAsync(long userId) {
            this.GetDriversByUserIdAsync(userId, null);
        }
        
        /// <remarks/>
        public void GetDriversByUserIdAsync(long userId, object userState) {
            if ((this.GetDriversByUserIdOperationCompleted == null)) {
                this.GetDriversByUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDriversByUserIdOperationCompleted);
            }
            this.InvokeAsync("GetDriversByUserId", new object[] {
                        userId}, this.GetDriversByUserIdOperationCompleted, userState);
        }
        
        private void OnGetDriversByUserIdOperationCompleted(object arg) {
            if ((this.GetDriversByUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDriversByUserIdCompleted(this, new GetDriversByUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/DriverProvider_GetDriversByFilterList" +
            "", RequestElementName="DriverProvider_GetDriversByFilterList", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="DriverProvider_GetDriversByFilterListResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("DriverProvider_GetDriversByFilterListResult")]
        public DriverFilterModel[] GetDriversByFilterList(DriverParams driverParams) {
            object[] results = this.Invoke("GetDriversByFilterList", new object[] {
                        driverParams});
            return ((DriverFilterModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDriversByFilterListAsync(DriverParams driverParams) {
            this.GetDriversByFilterListAsync(driverParams, null);
        }
        
        /// <remarks/>
        public void GetDriversByFilterListAsync(DriverParams driverParams, object userState) {
            if ((this.GetDriversByFilterListOperationCompleted == null)) {
                this.GetDriversByFilterListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDriversByFilterListOperationCompleted);
            }
            this.InvokeAsync("GetDriversByFilterList", new object[] {
                        driverParams}, this.GetDriversByFilterListOperationCompleted, userState);
        }
        
        private void OnGetDriversByFilterListOperationCompleted(object arg) {
            if ((this.GetDriversByFilterListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDriversByFilterListCompleted(this, new GetDriversByFilterListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/DriverProvider_GetDriversByFilterCoun" +
            "t", RequestElementName="DriverProvider_GetDriversByFilterCount", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="DriverProvider_GetDriversByFilterCountResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("DriverProvider_GetDriversByFilterCountResult")]
        public int GetDriversByFilterCount(DriverParams driverParams) {
            object[] results = this.Invoke("GetDriversByFilterCount", new object[] {
                        driverParams});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetDriversByFilterCountAsync(DriverParams driverParams) {
            this.GetDriversByFilterCountAsync(driverParams, null);
        }
        
        /// <remarks/>
        public void GetDriversByFilterCountAsync(DriverParams driverParams, object userState) {
            if ((this.GetDriversByFilterCountOperationCompleted == null)) {
                this.GetDriversByFilterCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDriversByFilterCountOperationCompleted);
            }
            this.InvokeAsync("GetDriversByFilterCount", new object[] {
                        driverParams}, this.GetDriversByFilterCountOperationCompleted, userState);
        }
        
        private void OnGetDriversByFilterCountOperationCompleted(object arg) {
            if ((this.GetDriversByFilterCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDriversByFilterCountCompleted(this, new GetDriversByFilterCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/DriverProvider_FilterDrivers", RequestElementName="DriverProvider_FilterDrivers", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="DriverProvider_FilterDriversResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("DriverProvider_FilterDriversResult")]
        public DriverModel[] FilterDrivers(long userId, string firstName, string lastName, string placeName) {
            object[] results = this.Invoke("FilterDrivers", new object[] {
                        userId,
                        firstName,
                        lastName,
                        placeName});
            return ((DriverModel[])(results[0]));
        }
        
        /// <remarks/>
        public void FilterDriversAsync(long userId, string firstName, string lastName, string placeName) {
            this.FilterDriversAsync(userId, firstName, lastName, placeName, null);
        }
        
        /// <remarks/>
        public void FilterDriversAsync(long userId, string firstName, string lastName, string placeName, object userState) {
            if ((this.FilterDriversOperationCompleted == null)) {
                this.FilterDriversOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFilterDriversOperationCompleted);
            }
            this.InvokeAsync("FilterDrivers", new object[] {
                        userId,
                        firstName,
                        lastName,
                        placeName}, this.FilterDriversOperationCompleted, userState);
        }
        
        private void OnFilterDriversOperationCompleted(object arg) {
            if ((this.FilterDriversCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FilterDriversCompleted(this, new FilterDriversCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/DriverProvider_FilterDriversForAutoCo" +
            "mplete", RequestElementName="DriverProvider_FilterDriversForAutoComplete", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="DriverProvider_FilterDriversForAutoCompleteResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("DriverProvider_FilterDriversForAutoCompleteResult")]
        public DriverModel[] FilterDriversForAutoComplete(string filter, int beginIndex, int endIndex) {
            object[] results = this.Invoke("FilterDriversForAutoComplete", new object[] {
                        filter,
                        beginIndex,
                        endIndex});
            return ((DriverModel[])(results[0]));
        }
        
        /// <remarks/>
        public void FilterDriversForAutoCompleteAsync(string filter, int beginIndex, int endIndex) {
            this.FilterDriversForAutoCompleteAsync(filter, beginIndex, endIndex, null);
        }
        
        /// <remarks/>
        public void FilterDriversForAutoCompleteAsync(string filter, int beginIndex, int endIndex, object userState) {
            if ((this.FilterDriversForAutoCompleteOperationCompleted == null)) {
                this.FilterDriversForAutoCompleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFilterDriversForAutoCompleteOperationCompleted);
            }
            this.InvokeAsync("FilterDriversForAutoComplete", new object[] {
                        filter,
                        beginIndex,
                        endIndex}, this.FilterDriversForAutoCompleteOperationCompleted, userState);
        }
        
        private void OnFilterDriversForAutoCompleteOperationCompleted(object arg) {
            if ((this.FilterDriversForAutoCompleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FilterDriversForAutoCompleteCompleted(this, new FilterDriversForAutoCompleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/DriverProvider_DeleteDriver", RequestElementName="DriverProvider_DeleteDriver", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="DriverProvider_DeleteDriverResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("DriverProvider_DeleteDriverResult")]
        public int DeleteDriver(long userId, long driverID) {
            object[] results = this.Invoke("DeleteDriver", new object[] {
                        userId,
                        driverID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteDriverAsync(long userId, long driverID) {
            this.DeleteDriverAsync(userId, driverID, null);
        }
        
        /// <remarks/>
        public void DeleteDriverAsync(long userId, long driverID, object userState) {
            if ((this.DeleteDriverOperationCompleted == null)) {
                this.DeleteDriverOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDriverOperationCompleted);
            }
            this.InvokeAsync("DeleteDriver", new object[] {
                        userId,
                        driverID}, this.DeleteDriverOperationCompleted, userState);
        }
        
        private void OnDeleteDriverOperationCompleted(object arg) {
            if ((this.DeleteDriverCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDriverCompleted(this, new DeleteDriverCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/DriverProvider_SaveDriver", RequestElementName="DriverProvider_SaveDriver", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="DriverProvider_SaveDriverResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("DriverProvider_SaveDriverResult")]
        public int SaveDriver(DriverModel driver, out long newDriverID) {
            object[] results = this.Invoke("SaveDriver", new object[] {
                        driver});
            newDriverID = ((long)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveDriverAsync(DriverModel driver) {
            this.SaveDriverAsync(driver, null);
        }
        
        /// <remarks/>
        public void SaveDriverAsync(DriverModel driver, object userState) {
            if ((this.SaveDriverOperationCompleted == null)) {
                this.SaveDriverOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveDriverOperationCompleted);
            }
            this.InvokeAsync("SaveDriver", new object[] {
                        driver}, this.SaveDriverOperationCompleted, userState);
        }
        
        private void OnSaveDriverOperationCompleted(object arg) {
            if ((this.SaveDriverCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveDriverCompleted(this, new SaveDriverCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/VehicleProvider_GetVehicle", RequestElementName="VehicleProvider_GetVehicle", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="VehicleProvider_GetVehicleResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("VehicleProvider_GetVehicleResult")]
        public VehicleModel GetVehicle(long userId, long vehicleID) {
            object[] results = this.Invoke("GetVehicle", new object[] {
                        userId,
                        vehicleID});
            return ((VehicleModel)(results[0]));
        }
        
        /// <remarks/>
        public void GetVehicleAsync(long userId, long vehicleID) {
            this.GetVehicleAsync(userId, vehicleID, null);
        }
        
        /// <remarks/>
        public void GetVehicleAsync(long userId, long vehicleID, object userState) {
            if ((this.GetVehicleOperationCompleted == null)) {
                this.GetVehicleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVehicleOperationCompleted);
            }
            this.InvokeAsync("GetVehicle", new object[] {
                        userId,
                        vehicleID}, this.GetVehicleOperationCompleted, userState);
        }
        
        private void OnGetVehicleOperationCompleted(object arg) {
            if ((this.GetVehicleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVehicleCompleted(this, new GetVehicleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/VehicleProvider_GetVehiclesByUserId", RequestElementName="VehicleProvider_GetVehiclesByUserId", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="VehicleProvider_GetVehiclesByUserIdResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("VehicleProvider_GetVehiclesByUserIdResult")]
        public VehicleModel[] GetVehiclesByUserId(long userId, long childUserId) {
            object[] results = this.Invoke("GetVehiclesByUserId", new object[] {
                        userId,
                        childUserId});
            return ((VehicleModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetVehiclesByUserIdAsync(long userId, long childUserId) {
            this.GetVehiclesByUserIdAsync(userId, childUserId, null);
        }
        
        /// <remarks/>
        public void GetVehiclesByUserIdAsync(long userId, long childUserId, object userState) {
            if ((this.GetVehiclesByUserIdOperationCompleted == null)) {
                this.GetVehiclesByUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVehiclesByUserIdOperationCompleted);
            }
            this.InvokeAsync("GetVehiclesByUserId", new object[] {
                        userId,
                        childUserId}, this.GetVehiclesByUserIdOperationCompleted, userState);
        }
        
        private void OnGetVehiclesByUserIdOperationCompleted(object arg) {
            if ((this.GetVehiclesByUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVehiclesByUserIdCompleted(this, new GetVehiclesByUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/VehicleProvider_GetVehiclesByReservat" +
            "ionId", RequestElementName="VehicleProvider_GetVehiclesByReservationId", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="VehicleProvider_GetVehiclesByReservationIdResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("VehicleProvider_GetVehiclesByReservationIdResult")]
        public VehicleModel[] GetVehiclesByReservationId(long reservationId) {
            object[] results = this.Invoke("GetVehiclesByReservationId", new object[] {
                        reservationId});
            return ((VehicleModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetVehiclesByReservationIdAsync(long reservationId) {
            this.GetVehiclesByReservationIdAsync(reservationId, null);
        }
        
        /// <remarks/>
        public void GetVehiclesByReservationIdAsync(long reservationId, object userState) {
            if ((this.GetVehiclesByReservationIdOperationCompleted == null)) {
                this.GetVehiclesByReservationIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVehiclesByReservationIdOperationCompleted);
            }
            this.InvokeAsync("GetVehiclesByReservationId", new object[] {
                        reservationId}, this.GetVehiclesByReservationIdOperationCompleted, userState);
        }
        
        private void OnGetVehiclesByReservationIdOperationCompleted(object arg) {
            if ((this.GetVehiclesByReservationIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVehiclesByReservationIdCompleted(this, new GetVehiclesByReservationIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/VehicleProvider_GetAllAssignedVehicle" +
            "s", RequestElementName="VehicleProvider_GetAllAssignedVehicles", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="VehicleProvider_GetAllAssignedVehiclesResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("VehicleProvider_GetAllAssignedVehiclesResult")]
        public VehicleModel[] GetAllAssignedVehicles(long userId, long childUserId) {
            object[] results = this.Invoke("GetAllAssignedVehicles", new object[] {
                        userId,
                        childUserId});
            return ((VehicleModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllAssignedVehiclesAsync(long userId, long childUserId) {
            this.GetAllAssignedVehiclesAsync(userId, childUserId, null);
        }
        
        /// <remarks/>
        public void GetAllAssignedVehiclesAsync(long userId, long childUserId, object userState) {
            if ((this.GetAllAssignedVehiclesOperationCompleted == null)) {
                this.GetAllAssignedVehiclesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllAssignedVehiclesOperationCompleted);
            }
            this.InvokeAsync("GetAllAssignedVehicles", new object[] {
                        userId,
                        childUserId}, this.GetAllAssignedVehiclesOperationCompleted, userState);
        }
        
        private void OnGetAllAssignedVehiclesOperationCompleted(object arg) {
            if ((this.GetAllAssignedVehiclesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllAssignedVehiclesCompleted(this, new GetAllAssignedVehiclesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/VehicleProvider_GetVehicleListByFilte" +
            "rList", RequestElementName="VehicleProvider_GetVehicleListByFilterList", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="VehicleProvider_GetVehicleListByFilterListResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("VehicleProvider_GetVehicleListByFilterListResult")]
        public VehicleListFilterModel[] GetVehicleListByFilterList(VehicleListParams filterParams) {
            object[] results = this.Invoke("GetVehicleListByFilterList", new object[] {
                        filterParams});
            return ((VehicleListFilterModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetVehicleListByFilterListAsync(VehicleListParams filterParams) {
            this.GetVehicleListByFilterListAsync(filterParams, null);
        }
        
        /// <remarks/>
        public void GetVehicleListByFilterListAsync(VehicleListParams filterParams, object userState) {
            if ((this.GetVehicleListByFilterListOperationCompleted == null)) {
                this.GetVehicleListByFilterListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVehicleListByFilterListOperationCompleted);
            }
            this.InvokeAsync("GetVehicleListByFilterList", new object[] {
                        filterParams}, this.GetVehicleListByFilterListOperationCompleted, userState);
        }
        
        private void OnGetVehicleListByFilterListOperationCompleted(object arg) {
            if ((this.GetVehicleListByFilterListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVehicleListByFilterListCompleted(this, new GetVehicleListByFilterListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/VehicleProvider_GetVehicleListByFilte" +
            "rCount", RequestElementName="VehicleProvider_GetVehicleListByFilterCount", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="VehicleProvider_GetVehicleListByFilterCountResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("VehicleProvider_GetVehicleListByFilterCountResult")]
        public int GetVehicleListByFilterCount(VehicleListParams filterParams) {
            object[] results = this.Invoke("GetVehicleListByFilterCount", new object[] {
                        filterParams});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetVehicleListByFilterCountAsync(VehicleListParams filterParams) {
            this.GetVehicleListByFilterCountAsync(filterParams, null);
        }
        
        /// <remarks/>
        public void GetVehicleListByFilterCountAsync(VehicleListParams filterParams, object userState) {
            if ((this.GetVehicleListByFilterCountOperationCompleted == null)) {
                this.GetVehicleListByFilterCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVehicleListByFilterCountOperationCompleted);
            }
            this.InvokeAsync("GetVehicleListByFilterCount", new object[] {
                        filterParams}, this.GetVehicleListByFilterCountOperationCompleted, userState);
        }
        
        private void OnGetVehicleListByFilterCountOperationCompleted(object arg) {
            if ((this.GetVehicleListByFilterCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVehicleListByFilterCountCompleted(this, new GetVehicleListByFilterCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/VehicleProvider_FilterVehiclesForAuto" +
            "Complete", RequestElementName="VehicleProvider_FilterVehiclesForAutoComplete", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="VehicleProvider_FilterVehiclesForAutoCompleteResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("VehicleProvider_FilterVehiclesForAutoCompleteResult")]
        public VehicleModel[] FilterVehiclesForAutoComplete(string filter, int beginIndex, int endIndex) {
            object[] results = this.Invoke("FilterVehiclesForAutoComplete", new object[] {
                        filter,
                        beginIndex,
                        endIndex});
            return ((VehicleModel[])(results[0]));
        }
        
        /// <remarks/>
        public void FilterVehiclesForAutoCompleteAsync(string filter, int beginIndex, int endIndex) {
            this.FilterVehiclesForAutoCompleteAsync(filter, beginIndex, endIndex, null);
        }
        
        /// <remarks/>
        public void FilterVehiclesForAutoCompleteAsync(string filter, int beginIndex, int endIndex, object userState) {
            if ((this.FilterVehiclesForAutoCompleteOperationCompleted == null)) {
                this.FilterVehiclesForAutoCompleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFilterVehiclesForAutoCompleteOperationCompleted);
            }
            this.InvokeAsync("FilterVehiclesForAutoComplete", new object[] {
                        filter,
                        beginIndex,
                        endIndex}, this.FilterVehiclesForAutoCompleteOperationCompleted, userState);
        }
        
        private void OnFilterVehiclesForAutoCompleteOperationCompleted(object arg) {
            if ((this.FilterVehiclesForAutoCompleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FilterVehiclesForAutoCompleteCompleted(this, new FilterVehiclesForAutoCompleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/VehicleProvider_GetVehiclesByFilter", RequestElementName="VehicleProvider_GetVehiclesByFilter", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="VehicleProvider_GetVehiclesByFilterResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("VehicleProvider_GetVehiclesByFilterResult")]
        public VehicleModel[] GetVehiclesByFilter(long userId, string v_name, string registration, string type, string manufacturer, string model, long vehicleGroupId, string pool, long childUserId, string vehicleStatus, int pageNumber) {
            object[] results = this.Invoke("GetVehiclesByFilter", new object[] {
                        userId,
                        v_name,
                        registration,
                        type,
                        manufacturer,
                        model,
                        vehicleGroupId,
                        pool,
                        childUserId,
                        vehicleStatus,
                        pageNumber});
            return ((VehicleModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetVehiclesByFilterAsync(long userId, string v_name, string registration, string type, string manufacturer, string model, long vehicleGroupId, string pool, long childUserId, string vehicleStatus, int pageNumber) {
            this.GetVehiclesByFilterAsync(userId, v_name, registration, type, manufacturer, model, vehicleGroupId, pool, childUserId, vehicleStatus, pageNumber, null);
        }
        
        /// <remarks/>
        public void GetVehiclesByFilterAsync(long userId, string v_name, string registration, string type, string manufacturer, string model, long vehicleGroupId, string pool, long childUserId, string vehicleStatus, int pageNumber, object userState) {
            if ((this.GetVehiclesByFilterOperationCompleted == null)) {
                this.GetVehiclesByFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVehiclesByFilterOperationCompleted);
            }
            this.InvokeAsync("GetVehiclesByFilter", new object[] {
                        userId,
                        v_name,
                        registration,
                        type,
                        manufacturer,
                        model,
                        vehicleGroupId,
                        pool,
                        childUserId,
                        vehicleStatus,
                        pageNumber}, this.GetVehiclesByFilterOperationCompleted, userState);
        }
        
        private void OnGetVehiclesByFilterOperationCompleted(object arg) {
            if ((this.GetVehiclesByFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVehiclesByFilterCompleted(this, new GetVehiclesByFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/VehicleProvider_GetVehiclesByFilterCo" +
            "unt", RequestElementName="VehicleProvider_GetVehiclesByFilterCount", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="VehicleProvider_GetVehiclesByFilterCountResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("VehicleProvider_GetVehiclesByFilterCountResult")]
        public int GetVehiclesByFilterCount(VehicleParams filterParams) {
            object[] results = this.Invoke("GetVehiclesByFilterCount", new object[] {
                        filterParams});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetVehiclesByFilterCountAsync(VehicleParams filterParams) {
            this.GetVehiclesByFilterCountAsync(filterParams, null);
        }
        
        /// <remarks/>
        public void GetVehiclesByFilterCountAsync(VehicleParams filterParams, object userState) {
            if ((this.GetVehiclesByFilterCountOperationCompleted == null)) {
                this.GetVehiclesByFilterCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVehiclesByFilterCountOperationCompleted);
            }
            this.InvokeAsync("GetVehiclesByFilterCount", new object[] {
                        filterParams}, this.GetVehiclesByFilterCountOperationCompleted, userState);
        }
        
        private void OnGetVehiclesByFilterCountOperationCompleted(object arg) {
            if ((this.GetVehiclesByFilterCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVehiclesByFilterCountCompleted(this, new GetVehiclesByFilterCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/VehicleProvider_GetVehiclesByFilterLi" +
            "st", RequestElementName="VehicleProvider_GetVehiclesByFilterList", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="VehicleProvider_GetVehiclesByFilterListResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("VehicleProvider_GetVehiclesByFilterListResult")]
        public VehiclesFilterModel[] GetVehiclesByFilterList(VehicleParams filterParams) {
            object[] results = this.Invoke("GetVehiclesByFilterList", new object[] {
                        filterParams});
            return ((VehiclesFilterModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetVehiclesByFilterListAsync(VehicleParams filterParams) {
            this.GetVehiclesByFilterListAsync(filterParams, null);
        }
        
        /// <remarks/>
        public void GetVehiclesByFilterListAsync(VehicleParams filterParams, object userState) {
            if ((this.GetVehiclesByFilterListOperationCompleted == null)) {
                this.GetVehiclesByFilterListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVehiclesByFilterListOperationCompleted);
            }
            this.InvokeAsync("GetVehiclesByFilterList", new object[] {
                        filterParams}, this.GetVehiclesByFilterListOperationCompleted, userState);
        }
        
        private void OnGetVehiclesByFilterListOperationCompleted(object arg) {
            if ((this.GetVehiclesByFilterListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVehiclesByFilterListCompleted(this, new GetVehiclesByFilterListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/VehicleProvider_GetAllVehiclesByOrgan" +
            "izationalUnit", RequestElementName="VehicleProvider_GetAllVehiclesByOrganizationalUnit", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="VehicleProvider_GetAllVehiclesByOrganizationalUnitResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("VehicleProvider_GetAllVehiclesByOrganizationalUnitResult")]
        public VehicleModel[] GetAllVehiclesByOrganizationalUnit(long userId, long ouId) {
            object[] results = this.Invoke("GetAllVehiclesByOrganizationalUnit", new object[] {
                        userId,
                        ouId});
            return ((VehicleModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllVehiclesByOrganizationalUnitAsync(long userId, long ouId) {
            this.GetAllVehiclesByOrganizationalUnitAsync(userId, ouId, null);
        }
        
        /// <remarks/>
        public void GetAllVehiclesByOrganizationalUnitAsync(long userId, long ouId, object userState) {
            if ((this.GetAllVehiclesByOrganizationalUnitOperationCompleted == null)) {
                this.GetAllVehiclesByOrganizationalUnitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllVehiclesByOrganizationalUnitOperationCompleted);
            }
            this.InvokeAsync("GetAllVehiclesByOrganizationalUnit", new object[] {
                        userId,
                        ouId}, this.GetAllVehiclesByOrganizationalUnitOperationCompleted, userState);
        }
        
        private void OnGetAllVehiclesByOrganizationalUnitOperationCompleted(object arg) {
            if ((this.GetAllVehiclesByOrganizationalUnitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllVehiclesByOrganizationalUnitCompleted(this, new GetAllVehiclesByOrganizationalUnitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/VehicleProvider_GetAllVehiclesByOrgan" +
            "izationalUnitForCustomControl", RequestElementName="VehicleProvider_GetAllVehiclesByOrganizationalUnitForCustomControl", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="VehicleProvider_GetAllVehiclesByOrganizationalUnitForCustomControlResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("VehicleProvider_GetAllVehiclesByOrganizationalUnitForCustomControlResult")]
        public VehicleModel[] GetAllVehiclesByOrganizationalUnitForCustomControl(long userId, long ouId) {
            object[] results = this.Invoke("GetAllVehiclesByOrganizationalUnitForCustomControl", new object[] {
                        userId,
                        ouId});
            return ((VehicleModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllVehiclesByOrganizationalUnitForCustomControlAsync(long userId, long ouId) {
            this.GetAllVehiclesByOrganizationalUnitForCustomControlAsync(userId, ouId, null);
        }
        
        /// <remarks/>
        public void GetAllVehiclesByOrganizationalUnitForCustomControlAsync(long userId, long ouId, object userState) {
            if ((this.GetAllVehiclesByOrganizationalUnitForCustomControlOperationCompleted == null)) {
                this.GetAllVehiclesByOrganizationalUnitForCustomControlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllVehiclesByOrganizationalUnitForCustomControlOperationCompleted);
            }
            this.InvokeAsync("GetAllVehiclesByOrganizationalUnitForCustomControl", new object[] {
                        userId,
                        ouId}, this.GetAllVehiclesByOrganizationalUnitForCustomControlOperationCompleted, userState);
        }
        
        private void OnGetAllVehiclesByOrganizationalUnitForCustomControlOperationCompleted(object arg) {
            if ((this.GetAllVehiclesByOrganizationalUnitForCustomControlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllVehiclesByOrganizationalUnitForCustomControlCompleted(this, new GetAllVehiclesByOrganizationalUnitForCustomControlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/VehicleProvider_GetUngroupedVehiclesB" +
            "yUserId", RequestElementName="VehicleProvider_GetUngroupedVehiclesByUserId", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="VehicleProvider_GetUngroupedVehiclesByUserIdResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("VehicleProvider_GetUngroupedVehiclesByUserIdResult")]
        public VehicleModel[] GetUngroupedVehiclesByUserId(long userId) {
            object[] results = this.Invoke("GetUngroupedVehiclesByUserId", new object[] {
                        userId});
            return ((VehicleModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUngroupedVehiclesByUserIdAsync(long userId) {
            this.GetUngroupedVehiclesByUserIdAsync(userId, null);
        }
        
        /// <remarks/>
        public void GetUngroupedVehiclesByUserIdAsync(long userId, object userState) {
            if ((this.GetUngroupedVehiclesByUserIdOperationCompleted == null)) {
                this.GetUngroupedVehiclesByUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUngroupedVehiclesByUserIdOperationCompleted);
            }
            this.InvokeAsync("GetUngroupedVehiclesByUserId", new object[] {
                        userId}, this.GetUngroupedVehiclesByUserIdOperationCompleted, userState);
        }
        
        private void OnGetUngroupedVehiclesByUserIdOperationCompleted(object arg) {
            if ((this.GetUngroupedVehiclesByUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUngroupedVehiclesByUserIdCompleted(this, new GetUngroupedVehiclesByUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/VehicleProvider_DeleteVehicle", RequestElementName="VehicleProvider_DeleteVehicle", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="VehicleProvider_DeleteVehicleResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("VehicleProvider_DeleteVehicleResult")]
        public int DeleteVehicle(long userId, long vehicleID) {
            object[] results = this.Invoke("DeleteVehicle", new object[] {
                        userId,
                        vehicleID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteVehicleAsync(long userId, long vehicleID) {
            this.DeleteVehicleAsync(userId, vehicleID, null);
        }
        
        /// <remarks/>
        public void DeleteVehicleAsync(long userId, long vehicleID, object userState) {
            if ((this.DeleteVehicleOperationCompleted == null)) {
                this.DeleteVehicleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteVehicleOperationCompleted);
            }
            this.InvokeAsync("DeleteVehicle", new object[] {
                        userId,
                        vehicleID}, this.DeleteVehicleOperationCompleted, userState);
        }
        
        private void OnDeleteVehicleOperationCompleted(object arg) {
            if ((this.DeleteVehicleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteVehicleCompleted(this, new DeleteVehicleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/VehicleProvider_HasVehicle", RequestElementName="VehicleProvider_HasVehicle", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="VehicleProvider_HasVehicleResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("VehicleProvider_HasVehicleResult")]
        public int HasVehicle(long vehicleID) {
            object[] results = this.Invoke("HasVehicle", new object[] {
                        vehicleID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void HasVehicleAsync(long vehicleID) {
            this.HasVehicleAsync(vehicleID, null);
        }
        
        /// <remarks/>
        public void HasVehicleAsync(long vehicleID, object userState) {
            if ((this.HasVehicleOperationCompleted == null)) {
                this.HasVehicleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHasVehicleOperationCompleted);
            }
            this.InvokeAsync("HasVehicle", new object[] {
                        vehicleID}, this.HasVehicleOperationCompleted, userState);
        }
        
        private void OnHasVehicleOperationCompleted(object arg) {
            if ((this.HasVehicleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HasVehicleCompleted(this, new HasVehicleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/VehicleProvider_GetMaxVehicleId", RequestElementName="VehicleProvider_GetMaxVehicleId", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="VehicleProvider_GetMaxVehicleIdResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("VehicleProvider_GetMaxVehicleIdResult")]
        public long GetMaxVehicleId() {
            object[] results = this.Invoke("GetMaxVehicleId", new object[0]);
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetMaxVehicleIdAsync() {
            this.GetMaxVehicleIdAsync(null);
        }
        
        /// <remarks/>
        public void GetMaxVehicleIdAsync(object userState) {
            if ((this.GetMaxVehicleIdOperationCompleted == null)) {
                this.GetMaxVehicleIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMaxVehicleIdOperationCompleted);
            }
            this.InvokeAsync("GetMaxVehicleId", new object[0], this.GetMaxVehicleIdOperationCompleted, userState);
        }
        
        private void OnGetMaxVehicleIdOperationCompleted(object arg) {
            if ((this.GetMaxVehicleIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMaxVehicleIdCompleted(this, new GetMaxVehicleIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/VehicleProvider_SaveVehicle", RequestElementName="VehicleProvider_SaveVehicle", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="VehicleProvider_SaveVehicleResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("VehicleProvider_SaveVehicleResult")]
        public int SaveVehicle(VehicleModel vehicle, out long newVehicleID) {
            object[] results = this.Invoke("SaveVehicle", new object[] {
                        vehicle});
            newVehicleID = ((long)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveVehicleAsync(VehicleModel vehicle) {
            this.SaveVehicleAsync(vehicle, null);
        }
        
        /// <remarks/>
        public void SaveVehicleAsync(VehicleModel vehicle, object userState) {
            if ((this.SaveVehicleOperationCompleted == null)) {
                this.SaveVehicleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveVehicleOperationCompleted);
            }
            this.InvokeAsync("SaveVehicle", new object[] {
                        vehicle}, this.SaveVehicleOperationCompleted, userState);
        }
        
        private void OnSaveVehicleOperationCompleted(object arg) {
            if ((this.SaveVehicleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveVehicleCompleted(this, new SaveVehicleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/FCM.Applications.MWS/VehicleProvider_GetVehicleTiresByFilt" +
            "erList", RequestElementName="VehicleProvider_GetVehicleTiresByFilterList", RequestNamespace="http://www.gisdata.com/FCM.Applications.MWS/", ResponseElementName="VehicleProvider_GetVehicleTiresByFilterListResponse", ResponseNamespace="http://www.gisdata.com/FCM.Applications.MWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("VehicleProvider_GetVehicleTiresByFilterListResult")]
        public TireFilterModel[] GetVehicleTiresByFilterList(TireParams tireParams) {
            object[] results = this.Invoke("GetVehicleTiresByFilterList", new object[] {
                        tireParams});
            return ((TireFilterModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetVehicleTiresByFilterListAsync(TireParams tireParams) {
            this.GetVehicleTiresByFilterListAsync(tireParams, null);
        }
        
        /// <remarks/>
        public void GetVehicleTiresByFilterListAsync(TireParams tireParams, object userState) {
            if ((this.GetVehicleTiresByFilterListOperationCompleted == null)) {
                this.GetVehicleTiresByFilterListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVehicleTiresByFilterListOperationCompleted);
            }
            this.InvokeAsync("GetVehicleTiresByFilterList", new object[] {
                        tireParams}, this.GetVehicleTiresByFilterListOperationCompleted, userState);
        }
        
        private void OnGetVehicleTiresByFilterListOperationCompleted(object arg) {
            if ((this.GetVehicleTiresByFilterListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVehicleTiresByFilterListCompleted(this, new GetVehicleTiresByFilterListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class ServiceOrderItemModel {
        
        private long itemIdField;
        
        private long serviceOrderIdField;
        
        private int itemCategoryField;
        
        private long workDoneIdField;
        
        private long sparePartIdField;
        
        private string itemCodeField;
        
        private string itemNameField;
        
        private double unitQuantityField;
        
        private long unitMeasureIdField;
        
        private string unitMeasureTextField;
        
        private double unitPriceField;
        
        private double totalCostField;
        
        private long itemExpenseIdField;
        
        private System.Nullable<long> itemSupplierIdField;
        
        private string itemExpenseReceiptField;
        
        private long userIdField;
        
        private int deletedField;
        
        private System.Nullable<long> internalDriverIdField;
        
        private string serviceOrderNumberField;
        
        private string internalDriverFullNameField;
        
        private string supplierNameField;
        
        private string workDoneNameField;
        
        private string sparePartNameField;
        
        private string authorField;
        
        private string vehicleGarageNumberField;
        
        private string vehicleRegistrationField;
        
        private System.Nullable<System.DateTime> startDateField;
        
        private System.Nullable<System.DateTime> endDateField;
        
        /// <remarks/>
        public long ItemId {
            get {
                return this.itemIdField;
            }
            set {
                this.itemIdField = value;
            }
        }
        
        /// <remarks/>
        public long ServiceOrderId {
            get {
                return this.serviceOrderIdField;
            }
            set {
                this.serviceOrderIdField = value;
            }
        }
        
        /// <remarks/>
        public int ItemCategory {
            get {
                return this.itemCategoryField;
            }
            set {
                this.itemCategoryField = value;
            }
        }
        
        /// <remarks/>
        public long WorkDoneId {
            get {
                return this.workDoneIdField;
            }
            set {
                this.workDoneIdField = value;
            }
        }
        
        /// <remarks/>
        public long SparePartId {
            get {
                return this.sparePartIdField;
            }
            set {
                this.sparePartIdField = value;
            }
        }
        
        /// <remarks/>
        public string ItemCode {
            get {
                return this.itemCodeField;
            }
            set {
                this.itemCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ItemName {
            get {
                return this.itemNameField;
            }
            set {
                this.itemNameField = value;
            }
        }
        
        /// <remarks/>
        public double UnitQuantity {
            get {
                return this.unitQuantityField;
            }
            set {
                this.unitQuantityField = value;
            }
        }
        
        /// <remarks/>
        public long UnitMeasureId {
            get {
                return this.unitMeasureIdField;
            }
            set {
                this.unitMeasureIdField = value;
            }
        }
        
        /// <remarks/>
        public string UnitMeasureText {
            get {
                return this.unitMeasureTextField;
            }
            set {
                this.unitMeasureTextField = value;
            }
        }
        
        /// <remarks/>
        public double UnitPrice {
            get {
                return this.unitPriceField;
            }
            set {
                this.unitPriceField = value;
            }
        }
        
        /// <remarks/>
        public double TotalCost {
            get {
                return this.totalCostField;
            }
            set {
                this.totalCostField = value;
            }
        }
        
        /// <remarks/>
        public long ItemExpenseId {
            get {
                return this.itemExpenseIdField;
            }
            set {
                this.itemExpenseIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> ItemSupplierId {
            get {
                return this.itemSupplierIdField;
            }
            set {
                this.itemSupplierIdField = value;
            }
        }
        
        /// <remarks/>
        public string ItemExpenseReceipt {
            get {
                return this.itemExpenseReceiptField;
            }
            set {
                this.itemExpenseReceiptField = value;
            }
        }
        
        /// <remarks/>
        public long UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public int Deleted {
            get {
                return this.deletedField;
            }
            set {
                this.deletedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> InternalDriverId {
            get {
                return this.internalDriverIdField;
            }
            set {
                this.internalDriverIdField = value;
            }
        }
        
        /// <remarks/>
        public string ServiceOrderNumber {
            get {
                return this.serviceOrderNumberField;
            }
            set {
                this.serviceOrderNumberField = value;
            }
        }
        
        /// <remarks/>
        public string InternalDriverFullName {
            get {
                return this.internalDriverFullNameField;
            }
            set {
                this.internalDriverFullNameField = value;
            }
        }
        
        /// <remarks/>
        public string SupplierName {
            get {
                return this.supplierNameField;
            }
            set {
                this.supplierNameField = value;
            }
        }
        
        /// <remarks/>
        public string WorkDoneName {
            get {
                return this.workDoneNameField;
            }
            set {
                this.workDoneNameField = value;
            }
        }
        
        /// <remarks/>
        public string SparePartName {
            get {
                return this.sparePartNameField;
            }
            set {
                this.sparePartNameField = value;
            }
        }
        
        /// <remarks/>
        public string Author {
            get {
                return this.authorField;
            }
            set {
                this.authorField = value;
            }
        }
        
        /// <remarks/>
        public string VehicleGarageNumber {
            get {
                return this.vehicleGarageNumberField;
            }
            set {
                this.vehicleGarageNumberField = value;
            }
        }
        
        /// <remarks/>
        public string VehicleRegistration {
            get {
                return this.vehicleRegistrationField;
            }
            set {
                this.vehicleRegistrationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class TireFilterModel {
        
        private long tireIdField;
        
        private int replacementCountField;
        
        private string classificationField;
        
        private int positionEnumField;
        
        private string positionField;
        
        private int quantityField;
        
        private long placementOdometerField;
        
        private System.DateTime placementDateField;
        
        /// <remarks/>
        public long TireId {
            get {
                return this.tireIdField;
            }
            set {
                this.tireIdField = value;
            }
        }
        
        /// <remarks/>
        public int ReplacementCount {
            get {
                return this.replacementCountField;
            }
            set {
                this.replacementCountField = value;
            }
        }
        
        /// <remarks/>
        public string Classification {
            get {
                return this.classificationField;
            }
            set {
                this.classificationField = value;
            }
        }
        
        /// <remarks/>
        public int PositionEnum {
            get {
                return this.positionEnumField;
            }
            set {
                this.positionEnumField = value;
            }
        }
        
        /// <remarks/>
        public string Position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
            }
        }
        
        /// <remarks/>
        public int Quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
        
        /// <remarks/>
        public long PlacementOdometer {
            get {
                return this.placementOdometerField;
            }
            set {
                this.placementOdometerField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime PlacementDate {
            get {
                return this.placementDateField;
            }
            set {
                this.placementDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class VehiclesFilterModel {
        
        private System.Nullable<long> vehicleIdField;
        
        private string vehicleNameField;
        
        private string garageNumberField;
        
        private string registrationField;
        
        private string fullVehicleNameField;
        
        private System.Nullable<int> areaEnumField;
        
        private string areaField;
        
        private string regionField;
        
        private string vehicleTypeIconEnumField;
        
        private string vehicleTypeField;
        
        private string manufacturerField;
        
        private string modelField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> VehicleId {
            get {
                return this.vehicleIdField;
            }
            set {
                this.vehicleIdField = value;
            }
        }
        
        /// <remarks/>
        public string VehicleName {
            get {
                return this.vehicleNameField;
            }
            set {
                this.vehicleNameField = value;
            }
        }
        
        /// <remarks/>
        public string GarageNumber {
            get {
                return this.garageNumberField;
            }
            set {
                this.garageNumberField = value;
            }
        }
        
        /// <remarks/>
        public string Registration {
            get {
                return this.registrationField;
            }
            set {
                this.registrationField = value;
            }
        }
        
        /// <remarks/>
        public string FullVehicleName {
            get {
                return this.fullVehicleNameField;
            }
            set {
                this.fullVehicleNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> AreaEnum {
            get {
                return this.areaEnumField;
            }
            set {
                this.areaEnumField = value;
            }
        }
        
        /// <remarks/>
        public string Area {
            get {
                return this.areaField;
            }
            set {
                this.areaField = value;
            }
        }
        
        /// <remarks/>
        public string Region {
            get {
                return this.regionField;
            }
            set {
                this.regionField = value;
            }
        }
        
        /// <remarks/>
        public string VehicleTypeIconEnum {
            get {
                return this.vehicleTypeIconEnumField;
            }
            set {
                this.vehicleTypeIconEnumField = value;
            }
        }
        
        /// <remarks/>
        public string VehicleType {
            get {
                return this.vehicleTypeField;
            }
            set {
                this.vehicleTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        public string Model {
            get {
                return this.modelField;
            }
            set {
                this.modelField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class VehicleListFilterModel {
        
        private System.Nullable<long> vehicleIdField;
        
        private string vehicleGroupNameField;
        
        private System.Nullable<System.DateTime> returnDateTimeField;
        
        private string vehicleTypeField;
        
        private string manufacturerField;
        
        private string modelAndTypeField;
        
        private string vehicleNameField;
        
        private string registrationField;
        
        private System.Nullable<int> odometerField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> VehicleId {
            get {
                return this.vehicleIdField;
            }
            set {
                this.vehicleIdField = value;
            }
        }
        
        /// <remarks/>
        public string VehicleGroupName {
            get {
                return this.vehicleGroupNameField;
            }
            set {
                this.vehicleGroupNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ReturnDateTime {
            get {
                return this.returnDateTimeField;
            }
            set {
                this.returnDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string VehicleType {
            get {
                return this.vehicleTypeField;
            }
            set {
                this.vehicleTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        public string ModelAndType {
            get {
                return this.modelAndTypeField;
            }
            set {
                this.modelAndTypeField = value;
            }
        }
        
        /// <remarks/>
        public string VehicleName {
            get {
                return this.vehicleNameField;
            }
            set {
                this.vehicleNameField = value;
            }
        }
        
        /// <remarks/>
        public string Registration {
            get {
                return this.registrationField;
            }
            set {
                this.registrationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Odometer {
            get {
                return this.odometerField;
            }
            set {
                this.odometerField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class DriverFilterModel {
        
        private System.Nullable<long> driverIdField;
        
        private string driverNameField;
        
        private string addressField;
        
        private string placeField;
        
        private System.Nullable<int> divisionEnumField;
        
        private string divisionField;
        
        private System.Nullable<int> sectorEnumField;
        
        private string sectorField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> DriverId {
            get {
                return this.driverIdField;
            }
            set {
                this.driverIdField = value;
            }
        }
        
        /// <remarks/>
        public string DriverName {
            get {
                return this.driverNameField;
            }
            set {
                this.driverNameField = value;
            }
        }
        
        /// <remarks/>
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public string Place {
            get {
                return this.placeField;
            }
            set {
                this.placeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> DivisionEnum {
            get {
                return this.divisionEnumField;
            }
            set {
                this.divisionEnumField = value;
            }
        }
        
        /// <remarks/>
        public string Division {
            get {
                return this.divisionField;
            }
            set {
                this.divisionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> SectorEnum {
            get {
                return this.sectorEnumField;
            }
            set {
                this.sectorEnumField = value;
            }
        }
        
        /// <remarks/>
        public string Sector {
            get {
                return this.sectorField;
            }
            set {
                this.sectorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class DamageExcelReportModel {
        
        private string vehicleNameField;
        
        private string vehicleRegistrationField;
        
        private int damageCountField;
        
        private int totalDamageAmountField;
        
        private bool driveableField;
        
        private string noteField;
        
        private string repairCoveredByField;
        
        private string typeField;
        
        private int numberField;
        
        private string driverField;
        
        private string expenseField;
        
        private System.DateTime repairDateField;
        
        private bool driverFaultField;
        
        private string fileNumberField;
        
        private string damageLocationField;
        
        private System.DateTime damageDateField;
        
        private bool policeCalledField;
        
        private bool alcotestField;
        
        private bool movementField;
        
        private int damageEstimateField;
        
        private System.DateTime dateFixedField;
        
        private int repairDurationField;
        
        private int repairAmountField;
        
        private bool fileStatusField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string vehicleManufacturerField;
        
        private string vehicleTypeField;
        
        private string vehicleModelField;
        
        /// <remarks/>
        public string VehicleName {
            get {
                return this.vehicleNameField;
            }
            set {
                this.vehicleNameField = value;
            }
        }
        
        /// <remarks/>
        public string VehicleRegistration {
            get {
                return this.vehicleRegistrationField;
            }
            set {
                this.vehicleRegistrationField = value;
            }
        }
        
        /// <remarks/>
        public int DamageCount {
            get {
                return this.damageCountField;
            }
            set {
                this.damageCountField = value;
            }
        }
        
        /// <remarks/>
        public int TotalDamageAmount {
            get {
                return this.totalDamageAmountField;
            }
            set {
                this.totalDamageAmountField = value;
            }
        }
        
        /// <remarks/>
        public bool Driveable {
            get {
                return this.driveableField;
            }
            set {
                this.driveableField = value;
            }
        }
        
        /// <remarks/>
        public string Note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
            }
        }
        
        /// <remarks/>
        public string RepairCoveredBy {
            get {
                return this.repairCoveredByField;
            }
            set {
                this.repairCoveredByField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public int Number {
            get {
                return this.numberField;
            }
            set {
                this.numberField = value;
            }
        }
        
        /// <remarks/>
        public string Driver {
            get {
                return this.driverField;
            }
            set {
                this.driverField = value;
            }
        }
        
        /// <remarks/>
        public string Expense {
            get {
                return this.expenseField;
            }
            set {
                this.expenseField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime RepairDate {
            get {
                return this.repairDateField;
            }
            set {
                this.repairDateField = value;
            }
        }
        
        /// <remarks/>
        public bool DriverFault {
            get {
                return this.driverFaultField;
            }
            set {
                this.driverFaultField = value;
            }
        }
        
        /// <remarks/>
        public string FileNumber {
            get {
                return this.fileNumberField;
            }
            set {
                this.fileNumberField = value;
            }
        }
        
        /// <remarks/>
        public string DamageLocation {
            get {
                return this.damageLocationField;
            }
            set {
                this.damageLocationField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DamageDate {
            get {
                return this.damageDateField;
            }
            set {
                this.damageDateField = value;
            }
        }
        
        /// <remarks/>
        public bool PoliceCalled {
            get {
                return this.policeCalledField;
            }
            set {
                this.policeCalledField = value;
            }
        }
        
        /// <remarks/>
        public bool Alcotest {
            get {
                return this.alcotestField;
            }
            set {
                this.alcotestField = value;
            }
        }
        
        /// <remarks/>
        public bool Movement {
            get {
                return this.movementField;
            }
            set {
                this.movementField = value;
            }
        }
        
        /// <remarks/>
        public int DamageEstimate {
            get {
                return this.damageEstimateField;
            }
            set {
                this.damageEstimateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateFixed {
            get {
                return this.dateFixedField;
            }
            set {
                this.dateFixedField = value;
            }
        }
        
        /// <remarks/>
        public int RepairDuration {
            get {
                return this.repairDurationField;
            }
            set {
                this.repairDurationField = value;
            }
        }
        
        /// <remarks/>
        public int RepairAmount {
            get {
                return this.repairAmountField;
            }
            set {
                this.repairAmountField = value;
            }
        }
        
        /// <remarks/>
        public bool FileStatus {
            get {
                return this.fileStatusField;
            }
            set {
                this.fileStatusField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string VehicleManufacturer {
            get {
                return this.vehicleManufacturerField;
            }
            set {
                this.vehicleManufacturerField = value;
            }
        }
        
        /// <remarks/>
        public string VehicleType {
            get {
                return this.vehicleTypeField;
            }
            set {
                this.vehicleTypeField = value;
            }
        }
        
        /// <remarks/>
        public string VehicleModel {
            get {
                return this.vehicleModelField;
            }
            set {
                this.vehicleModelField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class DamageReportModel {
        
        private string vehicleNameField;
        
        private string vehicleRegistrationField;
        
        private int damageCountField;
        
        private int totalDamageAmountField;
        
        /// <remarks/>
        public string VehicleName {
            get {
                return this.vehicleNameField;
            }
            set {
                this.vehicleNameField = value;
            }
        }
        
        /// <remarks/>
        public string VehicleRegistration {
            get {
                return this.vehicleRegistrationField;
            }
            set {
                this.vehicleRegistrationField = value;
            }
        }
        
        /// <remarks/>
        public int DamageCount {
            get {
                return this.damageCountField;
            }
            set {
                this.damageCountField = value;
            }
        }
        
        /// <remarks/>
        public int TotalDamageAmount {
            get {
                return this.totalDamageAmountField;
            }
            set {
                this.totalDamageAmountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class DamageModel {
        
        private System.Nullable<long> damagePkField;
        
        private System.Nullable<long> vehicleFkField;
        
        private System.Nullable<long> vehDriveableField;
        
        private System.Nullable<System.DateTime> damageDateField;
        
        private System.Nullable<long> damageTypeField;
        
        private System.Nullable<long> damageNumField;
        
        private System.Nullable<long> userIdField;
        
        private System.Nullable<int> picXField;
        
        private System.Nullable<int> picYField;
        
        private string noteField;
        
        private string additionalNoteField;
        
        private string driverWorkPlaceField;
        
        private System.Nullable<System.DateTime> repairDateField;
        
        private System.Nullable<double> repairAmountField;
        
        private System.Nullable<long> repairCoveredByField;
        
        private System.Nullable<long> expenseGeneratorFkField;
        
        private System.Nullable<int> driverFaultField;
        
        private System.Nullable<int> policeReportField;
        
        private System.Nullable<long> driverFkField;
        
        private string fileNumberField;
        
        private string damageLocationField;
        
        private System.Nullable<int> policeCalledField;
        
        private System.Nullable<int> alcotestField;
        
        private System.Nullable<int> movementField;
        
        private System.Nullable<int> insideHPField;
        
        private System.Nullable<int> damageEstimateField;
        
        private System.Nullable<System.DateTime> dateFixedField;
        
        private string repairDurationField;
        
        private System.Nullable<int> fileStatusField;
        
        private System.Nullable<long> expenseIdField;
        
        private string driverFirstNameTextField;
        
        private string driverLastNameTextField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> DamagePk {
            get {
                return this.damagePkField;
            }
            set {
                this.damagePkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> VehicleFk {
            get {
                return this.vehicleFkField;
            }
            set {
                this.vehicleFkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> VehDriveable {
            get {
                return this.vehDriveableField;
            }
            set {
                this.vehDriveableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> DamageDate {
            get {
                return this.damageDateField;
            }
            set {
                this.damageDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> DamageType {
            get {
                return this.damageTypeField;
            }
            set {
                this.damageTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> DamageNum {
            get {
                return this.damageNumField;
            }
            set {
                this.damageNumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> PicX {
            get {
                return this.picXField;
            }
            set {
                this.picXField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> PicY {
            get {
                return this.picYField;
            }
            set {
                this.picYField = value;
            }
        }
        
        /// <remarks/>
        public string Note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
            }
        }
        
        /// <remarks/>
        public string AdditionalNote {
            get {
                return this.additionalNoteField;
            }
            set {
                this.additionalNoteField = value;
            }
        }
        
        /// <remarks/>
        public string DriverWorkPlace {
            get {
                return this.driverWorkPlaceField;
            }
            set {
                this.driverWorkPlaceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> RepairDate {
            get {
                return this.repairDateField;
            }
            set {
                this.repairDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> RepairAmount {
            get {
                return this.repairAmountField;
            }
            set {
                this.repairAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> RepairCoveredBy {
            get {
                return this.repairCoveredByField;
            }
            set {
                this.repairCoveredByField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> ExpenseGeneratorFk {
            get {
                return this.expenseGeneratorFkField;
            }
            set {
                this.expenseGeneratorFkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> DriverFault {
            get {
                return this.driverFaultField;
            }
            set {
                this.driverFaultField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> PoliceReport {
            get {
                return this.policeReportField;
            }
            set {
                this.policeReportField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> DriverFk {
            get {
                return this.driverFkField;
            }
            set {
                this.driverFkField = value;
            }
        }
        
        /// <remarks/>
        public string FileNumber {
            get {
                return this.fileNumberField;
            }
            set {
                this.fileNumberField = value;
            }
        }
        
        /// <remarks/>
        public string DamageLocation {
            get {
                return this.damageLocationField;
            }
            set {
                this.damageLocationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> PoliceCalled {
            get {
                return this.policeCalledField;
            }
            set {
                this.policeCalledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Alcotest {
            get {
                return this.alcotestField;
            }
            set {
                this.alcotestField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Movement {
            get {
                return this.movementField;
            }
            set {
                this.movementField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> InsideHP {
            get {
                return this.insideHPField;
            }
            set {
                this.insideHPField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> DamageEstimate {
            get {
                return this.damageEstimateField;
            }
            set {
                this.damageEstimateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> DateFixed {
            get {
                return this.dateFixedField;
            }
            set {
                this.dateFixedField = value;
            }
        }
        
        /// <remarks/>
        public string RepairDuration {
            get {
                return this.repairDurationField;
            }
            set {
                this.repairDurationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> FileStatus {
            get {
                return this.fileStatusField;
            }
            set {
                this.fileStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> ExpenseId {
            get {
                return this.expenseIdField;
            }
            set {
                this.expenseIdField = value;
            }
        }
        
        /// <remarks/>
        public string DriverFirstNameText {
            get {
                return this.driverFirstNameTextField;
            }
            set {
                this.driverFirstNameTextField = value;
            }
        }
        
        /// <remarks/>
        public string DriverLastNameText {
            get {
                return this.driverLastNameTextField;
            }
            set {
                this.driverLastNameTextField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class UiDamageModel {
        
        private DamageModel damageField;
        
        private VehicleModel vehicleField;
        
        private DriverModel driverField;
        
        private System.Nullable<long> repairsCountField;
        
        private System.Nullable<long> damagesCountField;
        
        private string repearedField;
        
        /// <remarks/>
        public DamageModel damage {
            get {
                return this.damageField;
            }
            set {
                this.damageField = value;
            }
        }
        
        /// <remarks/>
        public VehicleModel vehicle {
            get {
                return this.vehicleField;
            }
            set {
                this.vehicleField = value;
            }
        }
        
        /// <remarks/>
        public DriverModel driver {
            get {
                return this.driverField;
            }
            set {
                this.driverField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> RepairsCount {
            get {
                return this.repairsCountField;
            }
            set {
                this.repairsCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> DamagesCount {
            get {
                return this.damagesCountField;
            }
            set {
                this.damagesCountField = value;
            }
        }
        
        /// <remarks/>
        public string Repeared {
            get {
                return this.repearedField;
            }
            set {
                this.repearedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class VehicleModel {
        
        private System.Nullable<long> vehiclePkField;
        
        private System.Nullable<long> userIdField;
        
        private string zoneField;
        
        private string vNameField;
        
        private System.Nullable<long> vTypeField;
        
        private string vehicleTypetextField;
        
        private string vehicleTypeField;
        
        private System.Nullable<long> vUsageTypeField;
        
        private string registrationField;
        
        private string manufacturerField;
        
        private string modelField;
        
        private string typeField;
        
        private string engineField;
        
        private string colorField;
        
        private string equipmentField;
        
        private string chassisnoField;
        
        private System.Nullable<double> fuelConsumptionField;
        
        private System.Nullable<long> bearingCapacityField;
        
        private System.Nullable<long> cargoVolumeField;
        
        private System.Nullable<long> tireTypeField;
        
        private System.Nullable<long> retrofittedPartsField;
        
        private string remarkField;
        
        private string noteField;
        
        private System.Nullable<int> yearField;
        
        private System.Nullable<decimal> initialPriceField;
        
        private System.Nullable<int> initialOdometerField;
        
        private System.Nullable<System.DateTime> firstRegistrationDtField;
        
        private System.Nullable<System.DateTime> lastRegistrationDtField;
        
        private System.Nullable<System.DateTime> nextRegistrationDtField;
        
        private System.Nullable<System.DateTime> lastServiceDtField;
        
        private System.Nullable<System.DateTime> nextServiceDtField;
        
        private System.Nullable<long> nextServiceOdometerField;
        
        private System.Nullable<int> lastServiceOdometerField;
        
        private System.Nullable<int> serviceIntervalField;
        
        private System.Nullable<int> vStatusField;
        
        private System.Nullable<int> engineTypeField;
        
        private System.Nullable<int> enginePowerField;
        
        private System.Nullable<int> odometerField;
        
        private System.Nullable<int> fuelTankLevelField;
        
        private int activeField;
        
        private int poolField;
        
        private System.Nullable<int> classificationField;
        
        private string garageNumberField;
        
        private string fullVehicleNameField;
        
        private string encField;
        
        private string inaCardField;
        
        private System.Nullable<int> areaField;
        
        private string binaField;
        
        private string petrolField;
        
        private string regionTextField;
        
        private string areaTextField;
        
        private string vehicleGroupNameField;
        
        private string availableField;
        
        private bool showEmergencyPickupButtonField;
        
        private string ecoCategoryField;
        
        private string azmField;
        
        private string inventoryNumberField;
        
        private string vehicleCategoryField;
        
        private string locationNameField;
        
        private string locationCodeField;
        
        private string usageCategoryField;
        
        private string riskZoneField;
        
        private System.Nullable<int> divisionField;
        
        private System.Nullable<int> sectorField;
        
        private string vehicleLenghtField;
        
        private string vehicleHeightField;
        
        private string vehicleWidthField;
        
        private string cargoLenghtField;
        
        private string cargoWidthField;
        
        private string cargoHeightField;
        
        private System.Nullable<int> vehicleWieghtField;
        
        private System.Nullable<int> vehicleMaxLoadField;
        
        private System.Nullable<int> vehicleSeatsField;
        
        private System.Nullable<System.DateTime> insuranceExpiryDateField;
        
        private string insurancePolicyNumberField;
        
        private string insuranceCompanyField;
        
        private System.Nullable<int> hasKaskoField;
        
        private string kaskoPolicyNumberField;
        
        private string manufactureCountryField;
        
        private System.Nullable<int> panicButtonField;
        
        private System.Nullable<int> radioField;
        
        private System.Nullable<int> extinguisherWeightField;
        
        private System.Nullable<int> extinguisherField;
        
        private System.Nullable<int> electroChemicalSafeField;
        
        private System.Nullable<int> loadingRampField;
        
        private string frontTiresField;
        
        private string backTiresField;
        
        private System.Nullable<int> cashRegisterField;
        
        private System.Nullable<int> cashRegiserWeightField;
        
        private string suspensionBagField;
        
        private string basketField;
        
        private System.Nullable<int> bellField;
        
        private System.Nullable<int> h_TrestleField;
        
        private System.Nullable<int> frontBrakeField;
        
        private System.Nullable<int> rearBrakeField;
        
        private System.Nullable<int> rearBrakeTorpedoField;
        
        private string gearShifterField;
        
        private string frameField;
        
        private string scaleCapacityField;
        
        private string forkHeightField;
        
        private string forkLengthField;
        
        private System.Nullable<int> forkSideShiftField;
        
        private string forkRadiusField;
        
        private string forkPowerField;
        
        private string batteryCapacityField;
        
        private string batteryVoltageField;
        
        private string climbLoadedField;
        
        private string climbUnloadedField;
        
        private System.Nullable<System.DateTime> resReturnTimeField;
        
        private System.Nullable<long> driverIdField;
        
        private System.Nullable<System.DateTime> brakeTestLastDateField;
        
        private System.Nullable<System.DateTime> brakeTestNextDateField;
        
        private System.Nullable<System.DateTime> tachographsLastTestDateField;
        
        private System.Nullable<System.DateTime> tachographsNextTestDateField;
        
        private System.Nullable<System.DateTime> periodicServiceLastDateField;
        
        private System.Nullable<System.DateTime> periodicServiceNextDateField;
        
        private System.Nullable<System.DateTime> fireExtinguisherNextDateField;
        
        private System.Nullable<System.DateTime> fireExtinguisherLastDateField;
        
        private System.Nullable<long> oU_IDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> VehiclePk {
            get {
                return this.vehiclePkField;
            }
            set {
                this.vehiclePkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public string Zone {
            get {
                return this.zoneField;
            }
            set {
                this.zoneField = value;
            }
        }
        
        /// <remarks/>
        public string VName {
            get {
                return this.vNameField;
            }
            set {
                this.vNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> VType {
            get {
                return this.vTypeField;
            }
            set {
                this.vTypeField = value;
            }
        }
        
        /// <remarks/>
        public string VehicleTypetext {
            get {
                return this.vehicleTypetextField;
            }
            set {
                this.vehicleTypetextField = value;
            }
        }
        
        /// <remarks/>
        public string VehicleType {
            get {
                return this.vehicleTypeField;
            }
            set {
                this.vehicleTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> VUsageType {
            get {
                return this.vUsageTypeField;
            }
            set {
                this.vUsageTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Registration {
            get {
                return this.registrationField;
            }
            set {
                this.registrationField = value;
            }
        }
        
        /// <remarks/>
        public string Manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        public string Model {
            get {
                return this.modelField;
            }
            set {
                this.modelField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string Engine {
            get {
                return this.engineField;
            }
            set {
                this.engineField = value;
            }
        }
        
        /// <remarks/>
        public string Color {
            get {
                return this.colorField;
            }
            set {
                this.colorField = value;
            }
        }
        
        /// <remarks/>
        public string Equipment {
            get {
                return this.equipmentField;
            }
            set {
                this.equipmentField = value;
            }
        }
        
        /// <remarks/>
        public string Chassisno {
            get {
                return this.chassisnoField;
            }
            set {
                this.chassisnoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> FuelConsumption {
            get {
                return this.fuelConsumptionField;
            }
            set {
                this.fuelConsumptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> BearingCapacity {
            get {
                return this.bearingCapacityField;
            }
            set {
                this.bearingCapacityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> CargoVolume {
            get {
                return this.cargoVolumeField;
            }
            set {
                this.cargoVolumeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> TireType {
            get {
                return this.tireTypeField;
            }
            set {
                this.tireTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> RetrofittedParts {
            get {
                return this.retrofittedPartsField;
            }
            set {
                this.retrofittedPartsField = value;
            }
        }
        
        /// <remarks/>
        public string Remark {
            get {
                return this.remarkField;
            }
            set {
                this.remarkField = value;
            }
        }
        
        /// <remarks/>
        public string Note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Year {
            get {
                return this.yearField;
            }
            set {
                this.yearField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> InitialPrice {
            get {
                return this.initialPriceField;
            }
            set {
                this.initialPriceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> InitialOdometer {
            get {
                return this.initialOdometerField;
            }
            set {
                this.initialOdometerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> FirstRegistrationDt {
            get {
                return this.firstRegistrationDtField;
            }
            set {
                this.firstRegistrationDtField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> LastRegistrationDt {
            get {
                return this.lastRegistrationDtField;
            }
            set {
                this.lastRegistrationDtField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> NextRegistrationDt {
            get {
                return this.nextRegistrationDtField;
            }
            set {
                this.nextRegistrationDtField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> LastServiceDt {
            get {
                return this.lastServiceDtField;
            }
            set {
                this.lastServiceDtField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> NextServiceDt {
            get {
                return this.nextServiceDtField;
            }
            set {
                this.nextServiceDtField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> NextServiceOdometer {
            get {
                return this.nextServiceOdometerField;
            }
            set {
                this.nextServiceOdometerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> LastServiceOdometer {
            get {
                return this.lastServiceOdometerField;
            }
            set {
                this.lastServiceOdometerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ServiceInterval {
            get {
                return this.serviceIntervalField;
            }
            set {
                this.serviceIntervalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> VStatus {
            get {
                return this.vStatusField;
            }
            set {
                this.vStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> EngineType {
            get {
                return this.engineTypeField;
            }
            set {
                this.engineTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> EnginePower {
            get {
                return this.enginePowerField;
            }
            set {
                this.enginePowerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Odometer {
            get {
                return this.odometerField;
            }
            set {
                this.odometerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> FuelTankLevel {
            get {
                return this.fuelTankLevelField;
            }
            set {
                this.fuelTankLevelField = value;
            }
        }
        
        /// <remarks/>
        public int Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
        
        /// <remarks/>
        public int Pool {
            get {
                return this.poolField;
            }
            set {
                this.poolField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Classification {
            get {
                return this.classificationField;
            }
            set {
                this.classificationField = value;
            }
        }
        
        /// <remarks/>
        public string GarageNumber {
            get {
                return this.garageNumberField;
            }
            set {
                this.garageNumberField = value;
            }
        }
        
        /// <remarks/>
        public string FullVehicleName {
            get {
                return this.fullVehicleNameField;
            }
            set {
                this.fullVehicleNameField = value;
            }
        }
        
        /// <remarks/>
        public string Enc {
            get {
                return this.encField;
            }
            set {
                this.encField = value;
            }
        }
        
        /// <remarks/>
        public string InaCard {
            get {
                return this.inaCardField;
            }
            set {
                this.inaCardField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Area {
            get {
                return this.areaField;
            }
            set {
                this.areaField = value;
            }
        }
        
        /// <remarks/>
        public string Bina {
            get {
                return this.binaField;
            }
            set {
                this.binaField = value;
            }
        }
        
        /// <remarks/>
        public string Petrol {
            get {
                return this.petrolField;
            }
            set {
                this.petrolField = value;
            }
        }
        
        /// <remarks/>
        public string RegionText {
            get {
                return this.regionTextField;
            }
            set {
                this.regionTextField = value;
            }
        }
        
        /// <remarks/>
        public string AreaText {
            get {
                return this.areaTextField;
            }
            set {
                this.areaTextField = value;
            }
        }
        
        /// <remarks/>
        public string VehicleGroupName {
            get {
                return this.vehicleGroupNameField;
            }
            set {
                this.vehicleGroupNameField = value;
            }
        }
        
        /// <remarks/>
        public string Available {
            get {
                return this.availableField;
            }
            set {
                this.availableField = value;
            }
        }
        
        /// <remarks/>
        public bool ShowEmergencyPickupButton {
            get {
                return this.showEmergencyPickupButtonField;
            }
            set {
                this.showEmergencyPickupButtonField = value;
            }
        }
        
        /// <remarks/>
        public string EcoCategory {
            get {
                return this.ecoCategoryField;
            }
            set {
                this.ecoCategoryField = value;
            }
        }
        
        /// <remarks/>
        public string Azm {
            get {
                return this.azmField;
            }
            set {
                this.azmField = value;
            }
        }
        
        /// <remarks/>
        public string InventoryNumber {
            get {
                return this.inventoryNumberField;
            }
            set {
                this.inventoryNumberField = value;
            }
        }
        
        /// <remarks/>
        public string VehicleCategory {
            get {
                return this.vehicleCategoryField;
            }
            set {
                this.vehicleCategoryField = value;
            }
        }
        
        /// <remarks/>
        public string LocationName {
            get {
                return this.locationNameField;
            }
            set {
                this.locationNameField = value;
            }
        }
        
        /// <remarks/>
        public string LocationCode {
            get {
                return this.locationCodeField;
            }
            set {
                this.locationCodeField = value;
            }
        }
        
        /// <remarks/>
        public string UsageCategory {
            get {
                return this.usageCategoryField;
            }
            set {
                this.usageCategoryField = value;
            }
        }
        
        /// <remarks/>
        public string RiskZone {
            get {
                return this.riskZoneField;
            }
            set {
                this.riskZoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Division {
            get {
                return this.divisionField;
            }
            set {
                this.divisionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Sector {
            get {
                return this.sectorField;
            }
            set {
                this.sectorField = value;
            }
        }
        
        /// <remarks/>
        public string VehicleLenght {
            get {
                return this.vehicleLenghtField;
            }
            set {
                this.vehicleLenghtField = value;
            }
        }
        
        /// <remarks/>
        public string VehicleHeight {
            get {
                return this.vehicleHeightField;
            }
            set {
                this.vehicleHeightField = value;
            }
        }
        
        /// <remarks/>
        public string VehicleWidth {
            get {
                return this.vehicleWidthField;
            }
            set {
                this.vehicleWidthField = value;
            }
        }
        
        /// <remarks/>
        public string CargoLenght {
            get {
                return this.cargoLenghtField;
            }
            set {
                this.cargoLenghtField = value;
            }
        }
        
        /// <remarks/>
        public string CargoWidth {
            get {
                return this.cargoWidthField;
            }
            set {
                this.cargoWidthField = value;
            }
        }
        
        /// <remarks/>
        public string CargoHeight {
            get {
                return this.cargoHeightField;
            }
            set {
                this.cargoHeightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> VehicleWieght {
            get {
                return this.vehicleWieghtField;
            }
            set {
                this.vehicleWieghtField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> VehicleMaxLoad {
            get {
                return this.vehicleMaxLoadField;
            }
            set {
                this.vehicleMaxLoadField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> VehicleSeats {
            get {
                return this.vehicleSeatsField;
            }
            set {
                this.vehicleSeatsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> InsuranceExpiryDate {
            get {
                return this.insuranceExpiryDateField;
            }
            set {
                this.insuranceExpiryDateField = value;
            }
        }
        
        /// <remarks/>
        public string InsurancePolicyNumber {
            get {
                return this.insurancePolicyNumberField;
            }
            set {
                this.insurancePolicyNumberField = value;
            }
        }
        
        /// <remarks/>
        public string InsuranceCompany {
            get {
                return this.insuranceCompanyField;
            }
            set {
                this.insuranceCompanyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> HasKasko {
            get {
                return this.hasKaskoField;
            }
            set {
                this.hasKaskoField = value;
            }
        }
        
        /// <remarks/>
        public string KaskoPolicyNumber {
            get {
                return this.kaskoPolicyNumberField;
            }
            set {
                this.kaskoPolicyNumberField = value;
            }
        }
        
        /// <remarks/>
        public string ManufactureCountry {
            get {
                return this.manufactureCountryField;
            }
            set {
                this.manufactureCountryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> PanicButton {
            get {
                return this.panicButtonField;
            }
            set {
                this.panicButtonField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Radio {
            get {
                return this.radioField;
            }
            set {
                this.radioField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ExtinguisherWeight {
            get {
                return this.extinguisherWeightField;
            }
            set {
                this.extinguisherWeightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Extinguisher {
            get {
                return this.extinguisherField;
            }
            set {
                this.extinguisherField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ElectroChemicalSafe {
            get {
                return this.electroChemicalSafeField;
            }
            set {
                this.electroChemicalSafeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> LoadingRamp {
            get {
                return this.loadingRampField;
            }
            set {
                this.loadingRampField = value;
            }
        }
        
        /// <remarks/>
        public string FrontTires {
            get {
                return this.frontTiresField;
            }
            set {
                this.frontTiresField = value;
            }
        }
        
        /// <remarks/>
        public string BackTires {
            get {
                return this.backTiresField;
            }
            set {
                this.backTiresField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> CashRegister {
            get {
                return this.cashRegisterField;
            }
            set {
                this.cashRegisterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> CashRegiserWeight {
            get {
                return this.cashRegiserWeightField;
            }
            set {
                this.cashRegiserWeightField = value;
            }
        }
        
        /// <remarks/>
        public string SuspensionBag {
            get {
                return this.suspensionBagField;
            }
            set {
                this.suspensionBagField = value;
            }
        }
        
        /// <remarks/>
        public string Basket {
            get {
                return this.basketField;
            }
            set {
                this.basketField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Bell {
            get {
                return this.bellField;
            }
            set {
                this.bellField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> H_Trestle {
            get {
                return this.h_TrestleField;
            }
            set {
                this.h_TrestleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> FrontBrake {
            get {
                return this.frontBrakeField;
            }
            set {
                this.frontBrakeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> RearBrake {
            get {
                return this.rearBrakeField;
            }
            set {
                this.rearBrakeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> RearBrakeTorpedo {
            get {
                return this.rearBrakeTorpedoField;
            }
            set {
                this.rearBrakeTorpedoField = value;
            }
        }
        
        /// <remarks/>
        public string GearShifter {
            get {
                return this.gearShifterField;
            }
            set {
                this.gearShifterField = value;
            }
        }
        
        /// <remarks/>
        public string Frame {
            get {
                return this.frameField;
            }
            set {
                this.frameField = value;
            }
        }
        
        /// <remarks/>
        public string ScaleCapacity {
            get {
                return this.scaleCapacityField;
            }
            set {
                this.scaleCapacityField = value;
            }
        }
        
        /// <remarks/>
        public string ForkHeight {
            get {
                return this.forkHeightField;
            }
            set {
                this.forkHeightField = value;
            }
        }
        
        /// <remarks/>
        public string ForkLength {
            get {
                return this.forkLengthField;
            }
            set {
                this.forkLengthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ForkSideShift {
            get {
                return this.forkSideShiftField;
            }
            set {
                this.forkSideShiftField = value;
            }
        }
        
        /// <remarks/>
        public string ForkRadius {
            get {
                return this.forkRadiusField;
            }
            set {
                this.forkRadiusField = value;
            }
        }
        
        /// <remarks/>
        public string ForkPower {
            get {
                return this.forkPowerField;
            }
            set {
                this.forkPowerField = value;
            }
        }
        
        /// <remarks/>
        public string BatteryCapacity {
            get {
                return this.batteryCapacityField;
            }
            set {
                this.batteryCapacityField = value;
            }
        }
        
        /// <remarks/>
        public string BatteryVoltage {
            get {
                return this.batteryVoltageField;
            }
            set {
                this.batteryVoltageField = value;
            }
        }
        
        /// <remarks/>
        public string ClimbLoaded {
            get {
                return this.climbLoadedField;
            }
            set {
                this.climbLoadedField = value;
            }
        }
        
        /// <remarks/>
        public string ClimbUnloaded {
            get {
                return this.climbUnloadedField;
            }
            set {
                this.climbUnloadedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ResReturnTime {
            get {
                return this.resReturnTimeField;
            }
            set {
                this.resReturnTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> DriverId {
            get {
                return this.driverIdField;
            }
            set {
                this.driverIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> BrakeTestLastDate {
            get {
                return this.brakeTestLastDateField;
            }
            set {
                this.brakeTestLastDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> BrakeTestNextDate {
            get {
                return this.brakeTestNextDateField;
            }
            set {
                this.brakeTestNextDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> TachographsLastTestDate {
            get {
                return this.tachographsLastTestDateField;
            }
            set {
                this.tachographsLastTestDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> TachographsNextTestDate {
            get {
                return this.tachographsNextTestDateField;
            }
            set {
                this.tachographsNextTestDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> PeriodicServiceLastDate {
            get {
                return this.periodicServiceLastDateField;
            }
            set {
                this.periodicServiceLastDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> PeriodicServiceNextDate {
            get {
                return this.periodicServiceNextDateField;
            }
            set {
                this.periodicServiceNextDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> FireExtinguisherNextDate {
            get {
                return this.fireExtinguisherNextDateField;
            }
            set {
                this.fireExtinguisherNextDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> FireExtinguisherLastDate {
            get {
                return this.fireExtinguisherLastDateField;
            }
            set {
                this.fireExtinguisherLastDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> OU_ID {
            get {
                return this.oU_IDField;
            }
            set {
                this.oU_IDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class DriverModel {
        
        private System.Nullable<long> driverIdField;
        
        private System.Nullable<long> userIdField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string addressField;
        
        private string houseNumberField;
        
        private string placeNameField;
        
        private string zipField;
        
        private string phoneField;
        
        private string emailField;
        
        private System.Nullable<int> activeStatusField;
        
        private System.Nullable<System.DateTime> sysinsDtField;
        
        private System.Nullable<System.DateTime> activatedDtField;
        
        private System.Nullable<System.DateTime> suspendedDtField;
        
        private System.Nullable<System.DateTime> deletedDtField;
        
        private System.Nullable<long> rankField;
        
        private System.Nullable<long> designationField;
        
        private System.Nullable<int> penaltyPointsField;
        
        private System.Nullable<int> divisionField;
        
        private System.Nullable<int> sectorField;
        
        private string divisionTextField;
        
        private string sectorTextField;
        
        private string internalIDField;
        
        private System.Nullable<long> oU_IDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> DriverId {
            get {
                return this.driverIdField;
            }
            set {
                this.driverIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public string HouseNumber {
            get {
                return this.houseNumberField;
            }
            set {
                this.houseNumberField = value;
            }
        }
        
        /// <remarks/>
        public string PlaceName {
            get {
                return this.placeNameField;
            }
            set {
                this.placeNameField = value;
            }
        }
        
        /// <remarks/>
        public string Zip {
            get {
                return this.zipField;
            }
            set {
                this.zipField = value;
            }
        }
        
        /// <remarks/>
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ActiveStatus {
            get {
                return this.activeStatusField;
            }
            set {
                this.activeStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> SysinsDt {
            get {
                return this.sysinsDtField;
            }
            set {
                this.sysinsDtField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ActivatedDt {
            get {
                return this.activatedDtField;
            }
            set {
                this.activatedDtField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> SuspendedDt {
            get {
                return this.suspendedDtField;
            }
            set {
                this.suspendedDtField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> DeletedDt {
            get {
                return this.deletedDtField;
            }
            set {
                this.deletedDtField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> Rank {
            get {
                return this.rankField;
            }
            set {
                this.rankField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> Designation {
            get {
                return this.designationField;
            }
            set {
                this.designationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> PenaltyPoints {
            get {
                return this.penaltyPointsField;
            }
            set {
                this.penaltyPointsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Division {
            get {
                return this.divisionField;
            }
            set {
                this.divisionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Sector {
            get {
                return this.sectorField;
            }
            set {
                this.sectorField = value;
            }
        }
        
        /// <remarks/>
        public string DivisionText {
            get {
                return this.divisionTextField;
            }
            set {
                this.divisionTextField = value;
            }
        }
        
        /// <remarks/>
        public string SectorText {
            get {
                return this.sectorTextField;
            }
            set {
                this.sectorTextField = value;
            }
        }
        
        /// <remarks/>
        public string InternalID {
            get {
                return this.internalIDField;
            }
            set {
                this.internalIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> OU_ID {
            get {
                return this.oU_IDField;
            }
            set {
                this.oU_IDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class ExpenseDamageFilterModel {
        
        private System.Nullable<long> damageIdField;
        
        private string vehicleNameField;
        
        private string vehicleTypeField;
        
        private string registrationField;
        
        private string manufacturerField;
        
        private string modelField;
        
        private int repairStatusEnumField;
        
        private string repairStatusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> DamageId {
            get {
                return this.damageIdField;
            }
            set {
                this.damageIdField = value;
            }
        }
        
        /// <remarks/>
        public string VehicleName {
            get {
                return this.vehicleNameField;
            }
            set {
                this.vehicleNameField = value;
            }
        }
        
        /// <remarks/>
        public string VehicleType {
            get {
                return this.vehicleTypeField;
            }
            set {
                this.vehicleTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Registration {
            get {
                return this.registrationField;
            }
            set {
                this.registrationField = value;
            }
        }
        
        /// <remarks/>
        public string Manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        public string Model {
            get {
                return this.modelField;
            }
            set {
                this.modelField = value;
            }
        }
        
        /// <remarks/>
        public int RepairStatusEnum {
            get {
                return this.repairStatusEnumField;
            }
            set {
                this.repairStatusEnumField = value;
            }
        }
        
        /// <remarks/>
        public string RepairStatus {
            get {
                return this.repairStatusField;
            }
            set {
                this.repairStatusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class DamageFilterModel {
        
        private System.Nullable<long> vehicleIdField;
        
        private string vehicleNameField;
        
        private string vehicleTypeField;
        
        private string vehicleTypeIconEnumField;
        
        private string registrationField;
        
        private string manufacturerField;
        
        private string modelField;
        
        private int repairStatusEnumField;
        
        private string repairStatusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> VehicleId {
            get {
                return this.vehicleIdField;
            }
            set {
                this.vehicleIdField = value;
            }
        }
        
        /// <remarks/>
        public string VehicleName {
            get {
                return this.vehicleNameField;
            }
            set {
                this.vehicleNameField = value;
            }
        }
        
        /// <remarks/>
        public string VehicleType {
            get {
                return this.vehicleTypeField;
            }
            set {
                this.vehicleTypeField = value;
            }
        }
        
        /// <remarks/>
        public string VehicleTypeIconEnum {
            get {
                return this.vehicleTypeIconEnumField;
            }
            set {
                this.vehicleTypeIconEnumField = value;
            }
        }
        
        /// <remarks/>
        public string Registration {
            get {
                return this.registrationField;
            }
            set {
                this.registrationField = value;
            }
        }
        
        /// <remarks/>
        public string Manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        public string Model {
            get {
                return this.modelField;
            }
            set {
                this.modelField = value;
            }
        }
        
        /// <remarks/>
        public int RepairStatusEnum {
            get {
                return this.repairStatusEnumField;
            }
            set {
                this.repairStatusEnumField = value;
            }
        }
        
        /// <remarks/>
        public string RepairStatus {
            get {
                return this.repairStatusField;
            }
            set {
                this.repairStatusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class CompanyFilterModel {
        
        private System.Nullable<long> companyIDField;
        
        private string companyNameField;
        
        private string addressField;
        
        private string postalCodeField;
        
        private string placeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> CompanyID {
            get {
                return this.companyIDField;
            }
            set {
                this.companyIDField = value;
            }
        }
        
        /// <remarks/>
        public string CompanyName {
            get {
                return this.companyNameField;
            }
            set {
                this.companyNameField = value;
            }
        }
        
        /// <remarks/>
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public string PostalCode {
            get {
                return this.postalCodeField;
            }
            set {
                this.postalCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Place {
            get {
                return this.placeField;
            }
            set {
                this.placeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class CompanyModel {
        
        private System.Nullable<long> companyPkField;
        
        private string cNameField;
        
        private string cAddressField;
        
        private string cPlaceField;
        
        private System.Nullable<long> userIdField;
        
        private string countryField;
        
        private string oIBField;
        
        private string emailField;
        
        private string phoneField;
        
        private string postalCodeField;
        
        private string workAreaField;
        
        private string workTimeField;
        
        private string noteField;
        
        private int activeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> CompanyPk {
            get {
                return this.companyPkField;
            }
            set {
                this.companyPkField = value;
            }
        }
        
        /// <remarks/>
        public string CName {
            get {
                return this.cNameField;
            }
            set {
                this.cNameField = value;
            }
        }
        
        /// <remarks/>
        public string CAddress {
            get {
                return this.cAddressField;
            }
            set {
                this.cAddressField = value;
            }
        }
        
        /// <remarks/>
        public string CPlace {
            get {
                return this.cPlaceField;
            }
            set {
                this.cPlaceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public string OIB {
            get {
                return this.oIBField;
            }
            set {
                this.oIBField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string PostalCode {
            get {
                return this.postalCodeField;
            }
            set {
                this.postalCodeField = value;
            }
        }
        
        /// <remarks/>
        public string WorkArea {
            get {
                return this.workAreaField;
            }
            set {
                this.workAreaField = value;
            }
        }
        
        /// <remarks/>
        public string WorkTime {
            get {
                return this.workTimeField;
            }
            set {
                this.workTimeField = value;
            }
        }
        
        /// <remarks/>
        public string Note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
            }
        }
        
        /// <remarks/>
        public int Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class UserRightsModel {
        
        private string idField;
        
        private long userRightIdField;
        
        private long userIdField;
        
        private string userNameField;
        
        private System.Nullable<long> parentUserIdField;
        
        private bool rightVehicleField;
        
        private bool rightReservationField;
        
        private bool rightReportsField;
        
        private bool rightExpensesField;
        
        private bool rightGeneralField;
        
        private bool rightReadOnlyField;
        
        private bool rightPrlField;
        
        private bool rightPrlWithoutWagesField;
        
        private bool rightPrlUnlockField;
        
        private bool rightEditLocationRelationField;
        
        /// <remarks/>
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public long UserRightId {
            get {
                return this.userRightIdField;
            }
            set {
                this.userRightIdField = value;
            }
        }
        
        /// <remarks/>
        public long UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> ParentUserId {
            get {
                return this.parentUserIdField;
            }
            set {
                this.parentUserIdField = value;
            }
        }
        
        /// <remarks/>
        public bool rightVehicle {
            get {
                return this.rightVehicleField;
            }
            set {
                this.rightVehicleField = value;
            }
        }
        
        /// <remarks/>
        public bool rightReservation {
            get {
                return this.rightReservationField;
            }
            set {
                this.rightReservationField = value;
            }
        }
        
        /// <remarks/>
        public bool rightReports {
            get {
                return this.rightReportsField;
            }
            set {
                this.rightReportsField = value;
            }
        }
        
        /// <remarks/>
        public bool rightExpenses {
            get {
                return this.rightExpensesField;
            }
            set {
                this.rightExpensesField = value;
            }
        }
        
        /// <remarks/>
        public bool rightGeneral {
            get {
                return this.rightGeneralField;
            }
            set {
                this.rightGeneralField = value;
            }
        }
        
        /// <remarks/>
        public bool rightReadOnly {
            get {
                return this.rightReadOnlyField;
            }
            set {
                this.rightReadOnlyField = value;
            }
        }
        
        /// <remarks/>
        public bool rightPrl {
            get {
                return this.rightPrlField;
            }
            set {
                this.rightPrlField = value;
            }
        }
        
        /// <remarks/>
        public bool rightPrlWithoutWages {
            get {
                return this.rightPrlWithoutWagesField;
            }
            set {
                this.rightPrlWithoutWagesField = value;
            }
        }
        
        /// <remarks/>
        public bool rightPrlUnlock {
            get {
                return this.rightPrlUnlockField;
            }
            set {
                this.rightPrlUnlockField = value;
            }
        }
        
        /// <remarks/>
        public bool rightEditLocationRelation {
            get {
                return this.rightEditLocationRelationField;
            }
            set {
                this.rightEditLocationRelationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class RightModel {
        
        private string userNameField;
        
        private long userIdField;
        
        private System.Nullable<long> parentUserIDField;
        
        private long rightIdField;
        
        private string rightNameField;
        
        private string rightDescriptionField;
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public long UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> ParentUserID {
            get {
                return this.parentUserIDField;
            }
            set {
                this.parentUserIDField = value;
            }
        }
        
        /// <remarks/>
        public long RightId {
            get {
                return this.rightIdField;
            }
            set {
                this.rightIdField = value;
            }
        }
        
        /// <remarks/>
        public string RightName {
            get {
                return this.rightNameField;
            }
            set {
                this.rightNameField = value;
            }
        }
        
        /// <remarks/>
        public string RightDescription {
            get {
                return this.rightDescriptionField;
            }
            set {
                this.rightDescriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class UserModel {
        
        private long userIDField;
        
        private string usernameField;
        
        private long parentIDField;
        
        private long provisioningGroupIDField;
        
        private int statusField;
        
        private System.DateTime createdDateField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        /// <remarks/>
        public long UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public long ParentID {
            get {
                return this.parentIDField;
            }
            set {
                this.parentIDField = value;
            }
        }
        
        /// <remarks/>
        public long ProvisioningGroupID {
            get {
                return this.provisioningGroupIDField;
            }
            set {
                this.provisioningGroupIDField = value;
            }
        }
        
        /// <remarks/>
        public int Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreatedDate {
            get {
                return this.createdDateField;
            }
            set {
                this.createdDateField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class FuelAndTollModel {
        
        private string groupNameField;
        
        private string registrationField;
        
        private string modelField;
        
        private string vehicleNameField;
        
        private System.DateTime createdDateField;
        
        private string garageNumberField;
        
        private string accountNumberField;
        
        private string relationField;
        
        private string driverNameField;
        
        private decimal valueTotalField;
        
        private decimal distanceTraveledField;
        
        private decimal quantityField;
        
        private long lastChangeMileageField;
        
        private long odometerField;
        
        private string expenseNameField;
        
        private decimal consumptionField;
        
        /// <remarks/>
        public string GroupName {
            get {
                return this.groupNameField;
            }
            set {
                this.groupNameField = value;
            }
        }
        
        /// <remarks/>
        public string Registration {
            get {
                return this.registrationField;
            }
            set {
                this.registrationField = value;
            }
        }
        
        /// <remarks/>
        public string Model {
            get {
                return this.modelField;
            }
            set {
                this.modelField = value;
            }
        }
        
        /// <remarks/>
        public string VehicleName {
            get {
                return this.vehicleNameField;
            }
            set {
                this.vehicleNameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreatedDate {
            get {
                return this.createdDateField;
            }
            set {
                this.createdDateField = value;
            }
        }
        
        /// <remarks/>
        public string GarageNumber {
            get {
                return this.garageNumberField;
            }
            set {
                this.garageNumberField = value;
            }
        }
        
        /// <remarks/>
        public string AccountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
            }
        }
        
        /// <remarks/>
        public string Relation {
            get {
                return this.relationField;
            }
            set {
                this.relationField = value;
            }
        }
        
        /// <remarks/>
        public string DriverName {
            get {
                return this.driverNameField;
            }
            set {
                this.driverNameField = value;
            }
        }
        
        /// <remarks/>
        public decimal ValueTotal {
            get {
                return this.valueTotalField;
            }
            set {
                this.valueTotalField = value;
            }
        }
        
        /// <remarks/>
        public decimal DistanceTraveled {
            get {
                return this.distanceTraveledField;
            }
            set {
                this.distanceTraveledField = value;
            }
        }
        
        /// <remarks/>
        public decimal Quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
        
        /// <remarks/>
        public long LastChangeMileage {
            get {
                return this.lastChangeMileageField;
            }
            set {
                this.lastChangeMileageField = value;
            }
        }
        
        /// <remarks/>
        public long Odometer {
            get {
                return this.odometerField;
            }
            set {
                this.odometerField = value;
            }
        }
        
        /// <remarks/>
        public string ExpenseName {
            get {
                return this.expenseNameField;
            }
            set {
                this.expenseNameField = value;
            }
        }
        
        /// <remarks/>
        public decimal Consumption {
            get {
                return this.consumptionField;
            }
            set {
                this.consumptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class PRLCountAndExpensesTotalReportModel {
        
        private System.Nullable<long> countField;
        
        private System.Nullable<double> sumField;
        
        private string vehicleNameField;
        
        private string vehicleGroupNameField;
        
        private string driverNameField;
        
        private string areaField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> Count {
            get {
                return this.countField;
            }
            set {
                this.countField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Sum {
            get {
                return this.sumField;
            }
            set {
                this.sumField = value;
            }
        }
        
        /// <remarks/>
        public string VehicleName {
            get {
                return this.vehicleNameField;
            }
            set {
                this.vehicleNameField = value;
            }
        }
        
        /// <remarks/>
        public string VehicleGroupName {
            get {
                return this.vehicleGroupNameField;
            }
            set {
                this.vehicleGroupNameField = value;
            }
        }
        
        /// <remarks/>
        public string DriverName {
            get {
                return this.driverNameField;
            }
            set {
                this.driverNameField = value;
            }
        }
        
        /// <remarks/>
        public string Area {
            get {
                return this.areaField;
            }
            set {
                this.areaField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class ReportGenericDataSumModel {
        
        private string column1Field;
        
        private string column2Field;
        
        private string column3Field;
        
        private System.Nullable<decimal> valueBeforeVatField;
        
        private System.Nullable<decimal> valueVatOnlyField;
        
        private System.Nullable<decimal> valueTotalField;
        
        /// <remarks/>
        public string Column1 {
            get {
                return this.column1Field;
            }
            set {
                this.column1Field = value;
            }
        }
        
        /// <remarks/>
        public string Column2 {
            get {
                return this.column2Field;
            }
            set {
                this.column2Field = value;
            }
        }
        
        /// <remarks/>
        public string Column3 {
            get {
                return this.column3Field;
            }
            set {
                this.column3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> ValueBeforeVat {
            get {
                return this.valueBeforeVatField;
            }
            set {
                this.valueBeforeVatField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> ValueVatOnly {
            get {
                return this.valueVatOnlyField;
            }
            set {
                this.valueVatOnlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> ValueTotal {
            get {
                return this.valueTotalField;
            }
            set {
                this.valueTotalField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class ExpenseCatalogFilterModel {
        
        private System.Nullable<long> expenseCatalogIdField;
        
        private string catalogNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> ExpenseCatalogId {
            get {
                return this.expenseCatalogIdField;
            }
            set {
                this.expenseCatalogIdField = value;
            }
        }
        
        /// <remarks/>
        public string CatalogName {
            get {
                return this.catalogNameField;
            }
            set {
                this.catalogNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class ExpenseCatalogModel {
        
        private System.Nullable<long> expenseCatalogIdField;
        
        private System.Nullable<long> expenseGeneratorFkField;
        
        private string fieldNameField;
        
        private string displayTextField;
        
        private string controlIdField;
        
        private System.Nullable<long> userIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> ExpenseCatalogId {
            get {
                return this.expenseCatalogIdField;
            }
            set {
                this.expenseCatalogIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> ExpenseGeneratorFk {
            get {
                return this.expenseGeneratorFkField;
            }
            set {
                this.expenseGeneratorFkField = value;
            }
        }
        
        /// <remarks/>
        public string FieldName {
            get {
                return this.fieldNameField;
            }
            set {
                this.fieldNameField = value;
            }
        }
        
        /// <remarks/>
        public string DisplayText {
            get {
                return this.displayTextField;
            }
            set {
                this.displayTextField = value;
            }
        }
        
        /// <remarks/>
        public string ControlId {
            get {
                return this.controlIdField;
            }
            set {
                this.controlIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class ExpenseCatalogValueModel {
        
        private System.Nullable<long> expenseCatalogValueIdField;
        
        private System.Nullable<long> expenseCatalogIdField;
        
        private System.Nullable<long> userIdField;
        
        private string fieldTextField;
        
        private System.Nullable<long> fieldValueField;
        
        private System.Nullable<long> orderNumField;
        
        private System.Nullable<long> deletedField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> ExpenseCatalogValueId {
            get {
                return this.expenseCatalogValueIdField;
            }
            set {
                this.expenseCatalogValueIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> ExpenseCatalogId {
            get {
                return this.expenseCatalogIdField;
            }
            set {
                this.expenseCatalogIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public string FieldText {
            get {
                return this.fieldTextField;
            }
            set {
                this.fieldTextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> FieldValue {
            get {
                return this.fieldValueField;
            }
            set {
                this.fieldValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> OrderNum {
            get {
                return this.orderNumField;
            }
            set {
                this.orderNumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> Deleted {
            get {
                return this.deletedField;
            }
            set {
                this.deletedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class ExpenseCustomDefinedFieldModel {
        
        private System.Nullable<long> expenseCdfPkField;
        
        private System.Nullable<long> userIdField;
        
        private System.Nullable<long> expCatCodeField;
        
        private System.Nullable<long> fDataTypeField;
        
        private System.Nullable<long> fPrecisionField;
        
        private System.Nullable<long> fScaleField;
        
        private System.Nullable<long> fLengthField;
        
        private string captionField;
        
        private string defaultValueField;
        
        private string listOfValuesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> ExpenseCdfPk {
            get {
                return this.expenseCdfPkField;
            }
            set {
                this.expenseCdfPkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> ExpCatCode {
            get {
                return this.expCatCodeField;
            }
            set {
                this.expCatCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> FDataType {
            get {
                return this.fDataTypeField;
            }
            set {
                this.fDataTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> FPrecision {
            get {
                return this.fPrecisionField;
            }
            set {
                this.fPrecisionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> FScale {
            get {
                return this.fScaleField;
            }
            set {
                this.fScaleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> FLength {
            get {
                return this.fLengthField;
            }
            set {
                this.fLengthField = value;
            }
        }
        
        /// <remarks/>
        public string Caption {
            get {
                return this.captionField;
            }
            set {
                this.captionField = value;
            }
        }
        
        /// <remarks/>
        public string DefaultValue {
            get {
                return this.defaultValueField;
            }
            set {
                this.defaultValueField = value;
            }
        }
        
        /// <remarks/>
        public string ListOfValues {
            get {
                return this.listOfValuesField;
            }
            set {
                this.listOfValuesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class ExpenseGeneratorFilterModel {
        
        private System.Nullable<long> expenseGeneratorIDField;
        
        private string expenseNameField;
        
        private int isShownField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> ExpenseGeneratorID {
            get {
                return this.expenseGeneratorIDField;
            }
            set {
                this.expenseGeneratorIDField = value;
            }
        }
        
        /// <remarks/>
        public string ExpenseName {
            get {
                return this.expenseNameField;
            }
            set {
                this.expenseNameField = value;
            }
        }
        
        /// <remarks/>
        public int IsShown {
            get {
                return this.isShownField;
            }
            set {
                this.isShownField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class ExpenseGeneratorModel {
        
        private System.Nullable<long> expenseGeneratorPkField;
        
        private System.Nullable<long> userIdField;
        
        private string expenseNameField;
        
        private System.Nullable<int> subtitleField;
        
        private string versionField;
        
        private System.Nullable<int> companyFkField;
        
        private System.Nullable<int> expQuantityField;
        
        private System.Nullable<int> expDescriptionField;
        
        private System.Nullable<int> createdDtField;
        
        private System.Nullable<int> valueBeforeVatField;
        
        private System.Nullable<int> valueVatOnlyField;
        
        private System.Nullable<int> valueTotalField;
        
        private System.Nullable<int> vatPctField;
        
        private System.Nullable<int> unitPriceRetailField;
        
        private System.Nullable<int> unitPriceWhsaleField;
        
        private System.Nullable<int> paymentMethodField;
        
        private System.Nullable<int> creditCardNrField;
        
        private System.Nullable<int> accountNrField;
        
        private System.Nullable<int> lastChangeMileageField;
        
        private System.Nullable<int> tireBrandField;
        
        private System.Nullable<int> tireHotelField;
        
        private System.Nullable<int> tireNextChangeDtField;
        
        private System.Nullable<int> tireChangeReasonField;
        
        private System.Nullable<int> tfEntryLocationField;
        
        private System.Nullable<int> tfEntryDtField;
        
        private System.Nullable<int> tfExitLocationField;
        
        private System.Nullable<int> tfExitDtField;
        
        private System.Nullable<int> tfCarrierField;
        
        private System.Nullable<int> insurancePolicyNrField;
        
        private System.Nullable<int> insurancePolicyDtField;
        
        private System.Nullable<int> insuranceValidFromDtField;
        
        private System.Nullable<int> insuranceValidToDtField;
        
        private System.Nullable<int> insuranceBonusPctField;
        
        private string f1CaptionField;
        
        private System.Nullable<long> f1FDataTypeField;
        
        private System.Nullable<long> f1FPrecisionField;
        
        private System.Nullable<long> f1FScaleField;
        
        private System.Nullable<long> f1FLengthField;
        
        private string f1DefaultValueField;
        
        private string f1ListOfValuesField;
        
        private string f2CaptionField;
        
        private System.Nullable<long> f2FDataTypeField;
        
        private System.Nullable<long> f2FPrecisionField;
        
        private System.Nullable<long> f2FScaleField;
        
        private System.Nullable<long> f2FLengthField;
        
        private string f2DefaultValueField;
        
        private string f2ListOfValuesField;
        
        private string f3CaptionField;
        
        private System.Nullable<long> f3FDataTypeField;
        
        private System.Nullable<long> f3FPrecisionField;
        
        private System.Nullable<long> f3FScaleField;
        
        private System.Nullable<long> f3FLengthField;
        
        private string f3DefaultValueField;
        
        private string f3ListOfValuesField;
        
        private string f4CaptionField;
        
        private System.Nullable<long> f4FDataTypeField;
        
        private System.Nullable<long> f4FPrecisionField;
        
        private System.Nullable<long> f4FScaleField;
        
        private System.Nullable<long> f4FLengthField;
        
        private string f4DefaultValueField;
        
        private string f4ListOfValuesField;
        
        private System.Nullable<int> tireWidthField;
        
        private System.Nullable<int> tireHeightField;
        
        private System.Nullable<int> tireDiameterField;
        
        private System.Nullable<int> tireTypeField;
        
        private System.Nullable<int> tireKmField;
        
        private System.Nullable<int> tireKm_MaxField;
        
        private System.Nullable<int> tireChangeDtField;
        
        private System.Nullable<int> fuelCompanyField;
        
        private System.Nullable<int> fuelTypeField;
        
        private System.Nullable<int> payTypeField;
        
        private System.Nullable<int> measureUnitFkField;
        
        private System.Nullable<int> washTypeFkField;
        
        private System.Nullable<int> insuranceRiskFkField;
        
        private System.Nullable<int> odometerField;
        
        private System.Nullable<int> serviceTypeField;
        
        private System.Nullable<int> noteField;
        
        private System.Nullable<int> manufacturerField;
        
        private System.Nullable<int> typeField;
        
        private System.Nullable<int> titleField;
        
        private System.Nullable<int> unitPriceField;
        
        private System.Nullable<int> brandField;
        
        private System.Nullable<int> objectSizeField;
        
        private System.Nullable<int> offenceDescriptionField;
        
        private System.Nullable<int> offenderAnalysisField;
        
        private System.Nullable<int> complaintsField;
        
        private int showField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> ExpenseGeneratorPk {
            get {
                return this.expenseGeneratorPkField;
            }
            set {
                this.expenseGeneratorPkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public string ExpenseName {
            get {
                return this.expenseNameField;
            }
            set {
                this.expenseNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Subtitle {
            get {
                return this.subtitleField;
            }
            set {
                this.subtitleField = value;
            }
        }
        
        /// <remarks/>
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> CompanyFk {
            get {
                return this.companyFkField;
            }
            set {
                this.companyFkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ExpQuantity {
            get {
                return this.expQuantityField;
            }
            set {
                this.expQuantityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ExpDescription {
            get {
                return this.expDescriptionField;
            }
            set {
                this.expDescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> CreatedDt {
            get {
                return this.createdDtField;
            }
            set {
                this.createdDtField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ValueBeforeVat {
            get {
                return this.valueBeforeVatField;
            }
            set {
                this.valueBeforeVatField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ValueVatOnly {
            get {
                return this.valueVatOnlyField;
            }
            set {
                this.valueVatOnlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ValueTotal {
            get {
                return this.valueTotalField;
            }
            set {
                this.valueTotalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> VatPct {
            get {
                return this.vatPctField;
            }
            set {
                this.vatPctField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> UnitPriceRetail {
            get {
                return this.unitPriceRetailField;
            }
            set {
                this.unitPriceRetailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> UnitPriceWhsale {
            get {
                return this.unitPriceWhsaleField;
            }
            set {
                this.unitPriceWhsaleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> PaymentMethod {
            get {
                return this.paymentMethodField;
            }
            set {
                this.paymentMethodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> CreditCardNr {
            get {
                return this.creditCardNrField;
            }
            set {
                this.creditCardNrField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> AccountNr {
            get {
                return this.accountNrField;
            }
            set {
                this.accountNrField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> LastChangeMileage {
            get {
                return this.lastChangeMileageField;
            }
            set {
                this.lastChangeMileageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TireBrand {
            get {
                return this.tireBrandField;
            }
            set {
                this.tireBrandField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TireHotel {
            get {
                return this.tireHotelField;
            }
            set {
                this.tireHotelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TireNextChangeDt {
            get {
                return this.tireNextChangeDtField;
            }
            set {
                this.tireNextChangeDtField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TireChangeReason {
            get {
                return this.tireChangeReasonField;
            }
            set {
                this.tireChangeReasonField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TfEntryLocation {
            get {
                return this.tfEntryLocationField;
            }
            set {
                this.tfEntryLocationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TfEntryDt {
            get {
                return this.tfEntryDtField;
            }
            set {
                this.tfEntryDtField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TfExitLocation {
            get {
                return this.tfExitLocationField;
            }
            set {
                this.tfExitLocationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TfExitDt {
            get {
                return this.tfExitDtField;
            }
            set {
                this.tfExitDtField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TfCarrier {
            get {
                return this.tfCarrierField;
            }
            set {
                this.tfCarrierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> InsurancePolicyNr {
            get {
                return this.insurancePolicyNrField;
            }
            set {
                this.insurancePolicyNrField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> InsurancePolicyDt {
            get {
                return this.insurancePolicyDtField;
            }
            set {
                this.insurancePolicyDtField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> InsuranceValidFromDt {
            get {
                return this.insuranceValidFromDtField;
            }
            set {
                this.insuranceValidFromDtField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> InsuranceValidToDt {
            get {
                return this.insuranceValidToDtField;
            }
            set {
                this.insuranceValidToDtField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> InsuranceBonusPct {
            get {
                return this.insuranceBonusPctField;
            }
            set {
                this.insuranceBonusPctField = value;
            }
        }
        
        /// <remarks/>
        public string F1Caption {
            get {
                return this.f1CaptionField;
            }
            set {
                this.f1CaptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> F1FDataType {
            get {
                return this.f1FDataTypeField;
            }
            set {
                this.f1FDataTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> F1FPrecision {
            get {
                return this.f1FPrecisionField;
            }
            set {
                this.f1FPrecisionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> F1FScale {
            get {
                return this.f1FScaleField;
            }
            set {
                this.f1FScaleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> F1FLength {
            get {
                return this.f1FLengthField;
            }
            set {
                this.f1FLengthField = value;
            }
        }
        
        /// <remarks/>
        public string F1DefaultValue {
            get {
                return this.f1DefaultValueField;
            }
            set {
                this.f1DefaultValueField = value;
            }
        }
        
        /// <remarks/>
        public string F1ListOfValues {
            get {
                return this.f1ListOfValuesField;
            }
            set {
                this.f1ListOfValuesField = value;
            }
        }
        
        /// <remarks/>
        public string F2Caption {
            get {
                return this.f2CaptionField;
            }
            set {
                this.f2CaptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> F2FDataType {
            get {
                return this.f2FDataTypeField;
            }
            set {
                this.f2FDataTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> F2FPrecision {
            get {
                return this.f2FPrecisionField;
            }
            set {
                this.f2FPrecisionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> F2FScale {
            get {
                return this.f2FScaleField;
            }
            set {
                this.f2FScaleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> F2FLength {
            get {
                return this.f2FLengthField;
            }
            set {
                this.f2FLengthField = value;
            }
        }
        
        /// <remarks/>
        public string F2DefaultValue {
            get {
                return this.f2DefaultValueField;
            }
            set {
                this.f2DefaultValueField = value;
            }
        }
        
        /// <remarks/>
        public string F2ListOfValues {
            get {
                return this.f2ListOfValuesField;
            }
            set {
                this.f2ListOfValuesField = value;
            }
        }
        
        /// <remarks/>
        public string F3Caption {
            get {
                return this.f3CaptionField;
            }
            set {
                this.f3CaptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> F3FDataType {
            get {
                return this.f3FDataTypeField;
            }
            set {
                this.f3FDataTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> F3FPrecision {
            get {
                return this.f3FPrecisionField;
            }
            set {
                this.f3FPrecisionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> F3FScale {
            get {
                return this.f3FScaleField;
            }
            set {
                this.f3FScaleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> F3FLength {
            get {
                return this.f3FLengthField;
            }
            set {
                this.f3FLengthField = value;
            }
        }
        
        /// <remarks/>
        public string F3DefaultValue {
            get {
                return this.f3DefaultValueField;
            }
            set {
                this.f3DefaultValueField = value;
            }
        }
        
        /// <remarks/>
        public string F3ListOfValues {
            get {
                return this.f3ListOfValuesField;
            }
            set {
                this.f3ListOfValuesField = value;
            }
        }
        
        /// <remarks/>
        public string F4Caption {
            get {
                return this.f4CaptionField;
            }
            set {
                this.f4CaptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> F4FDataType {
            get {
                return this.f4FDataTypeField;
            }
            set {
                this.f4FDataTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> F4FPrecision {
            get {
                return this.f4FPrecisionField;
            }
            set {
                this.f4FPrecisionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> F4FScale {
            get {
                return this.f4FScaleField;
            }
            set {
                this.f4FScaleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> F4FLength {
            get {
                return this.f4FLengthField;
            }
            set {
                this.f4FLengthField = value;
            }
        }
        
        /// <remarks/>
        public string F4DefaultValue {
            get {
                return this.f4DefaultValueField;
            }
            set {
                this.f4DefaultValueField = value;
            }
        }
        
        /// <remarks/>
        public string F4ListOfValues {
            get {
                return this.f4ListOfValuesField;
            }
            set {
                this.f4ListOfValuesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TireWidth {
            get {
                return this.tireWidthField;
            }
            set {
                this.tireWidthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TireHeight {
            get {
                return this.tireHeightField;
            }
            set {
                this.tireHeightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TireDiameter {
            get {
                return this.tireDiameterField;
            }
            set {
                this.tireDiameterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TireType {
            get {
                return this.tireTypeField;
            }
            set {
                this.tireTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TireKm {
            get {
                return this.tireKmField;
            }
            set {
                this.tireKmField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TireKm_Max {
            get {
                return this.tireKm_MaxField;
            }
            set {
                this.tireKm_MaxField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TireChangeDt {
            get {
                return this.tireChangeDtField;
            }
            set {
                this.tireChangeDtField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> FuelCompany {
            get {
                return this.fuelCompanyField;
            }
            set {
                this.fuelCompanyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> FuelType {
            get {
                return this.fuelTypeField;
            }
            set {
                this.fuelTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> PayType {
            get {
                return this.payTypeField;
            }
            set {
                this.payTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> MeasureUnitFk {
            get {
                return this.measureUnitFkField;
            }
            set {
                this.measureUnitFkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> WashTypeFk {
            get {
                return this.washTypeFkField;
            }
            set {
                this.washTypeFkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> InsuranceRiskFk {
            get {
                return this.insuranceRiskFkField;
            }
            set {
                this.insuranceRiskFkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Odometer {
            get {
                return this.odometerField;
            }
            set {
                this.odometerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ServiceType {
            get {
                return this.serviceTypeField;
            }
            set {
                this.serviceTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> UnitPrice {
            get {
                return this.unitPriceField;
            }
            set {
                this.unitPriceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Brand {
            get {
                return this.brandField;
            }
            set {
                this.brandField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ObjectSize {
            get {
                return this.objectSizeField;
            }
            set {
                this.objectSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> OffenceDescription {
            get {
                return this.offenceDescriptionField;
            }
            set {
                this.offenceDescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> OffenderAnalysis {
            get {
                return this.offenderAnalysisField;
            }
            set {
                this.offenderAnalysisField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Complaints {
            get {
                return this.complaintsField;
            }
            set {
                this.complaintsField = value;
            }
        }
        
        /// <remarks/>
        public int Show {
            get {
                return this.showField;
            }
            set {
                this.showField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class ExpenseFilterModel {
        
        private long expenseIdField;
        
        private string expenseNameField;
        
        private string vehicleNameField;
        
        private System.DateTime createdDateField;
        
        private string driverNameField;
        
        private System.Nullable<double> valueBeforeVatField;
        
        private int isLockedField;
        
        /// <remarks/>
        public long ExpenseId {
            get {
                return this.expenseIdField;
            }
            set {
                this.expenseIdField = value;
            }
        }
        
        /// <remarks/>
        public string ExpenseName {
            get {
                return this.expenseNameField;
            }
            set {
                this.expenseNameField = value;
            }
        }
        
        /// <remarks/>
        public string VehicleName {
            get {
                return this.vehicleNameField;
            }
            set {
                this.vehicleNameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreatedDate {
            get {
                return this.createdDateField;
            }
            set {
                this.createdDateField = value;
            }
        }
        
        /// <remarks/>
        public string DriverName {
            get {
                return this.driverNameField;
            }
            set {
                this.driverNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> ValueBeforeVat {
            get {
                return this.valueBeforeVatField;
            }
            set {
                this.valueBeforeVatField = value;
            }
        }
        
        /// <remarks/>
        public int IsLocked {
            get {
                return this.isLockedField;
            }
            set {
                this.isLockedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class OrganizationalUnitAccessRightModel {
        
        private System.Nullable<long> rightIdField;
        
        private long userIdField;
        
        private System.Nullable<int> serviceIdField;
        
        private long ouIdField;
        
        private System.Nullable<long> masterUserIdField;
        
        private System.DateTime sysInsDtField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> RightId {
            get {
                return this.rightIdField;
            }
            set {
                this.rightIdField = value;
            }
        }
        
        /// <remarks/>
        public long UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ServiceId {
            get {
                return this.serviceIdField;
            }
            set {
                this.serviceIdField = value;
            }
        }
        
        /// <remarks/>
        public long OuId {
            get {
                return this.ouIdField;
            }
            set {
                this.ouIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> MasterUserId {
            get {
                return this.masterUserIdField;
            }
            set {
                this.masterUserIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime SysInsDt {
            get {
                return this.sysInsDtField;
            }
            set {
                this.sysInsDtField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class OrganizationalUnitModel {
        
        private System.Nullable<long> ouIdField;
        
        private long ouParentIdField;
        
        private System.Nullable<long> userIdField;
        
        private System.Nullable<long> serviceIdField;
        
        private string ouNameField;
        
        private System.Nullable<long> ouTypeField;
        
        private System.Nullable<long> ouIntendedForField;
        
        private System.Nullable<System.DateTime> sysInsDtField;
        
        private System.Nullable<System.DateTime> sysUpdDtField;
        
        private System.Nullable<long> powerChildUserIdField;
        
        private System.Nullable<long> childUserIdField;
        
        private bool showDeleteField;
        
        private long driverCountField;
        
        private long vehicleCountField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> OuId {
            get {
                return this.ouIdField;
            }
            set {
                this.ouIdField = value;
            }
        }
        
        /// <remarks/>
        public long OuParentId {
            get {
                return this.ouParentIdField;
            }
            set {
                this.ouParentIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> ServiceId {
            get {
                return this.serviceIdField;
            }
            set {
                this.serviceIdField = value;
            }
        }
        
        /// <remarks/>
        public string OuName {
            get {
                return this.ouNameField;
            }
            set {
                this.ouNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> OuType {
            get {
                return this.ouTypeField;
            }
            set {
                this.ouTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> OuIntendedFor {
            get {
                return this.ouIntendedForField;
            }
            set {
                this.ouIntendedForField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> SysInsDt {
            get {
                return this.sysInsDtField;
            }
            set {
                this.sysInsDtField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> SysUpdDt {
            get {
                return this.sysUpdDtField;
            }
            set {
                this.sysUpdDtField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> PowerChildUserId {
            get {
                return this.powerChildUserIdField;
            }
            set {
                this.powerChildUserIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> childUserId {
            get {
                return this.childUserIdField;
            }
            set {
                this.childUserIdField = value;
            }
        }
        
        /// <remarks/>
        public bool ShowDelete {
            get {
                return this.showDeleteField;
            }
            set {
                this.showDeleteField = value;
            }
        }
        
        /// <remarks/>
        public long DriverCount {
            get {
                return this.driverCountField;
            }
            set {
                this.driverCountField = value;
            }
        }
        
        /// <remarks/>
        public long VehicleCount {
            get {
                return this.vehicleCountField;
            }
            set {
                this.vehicleCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class TireModel {
        
        private long tireIdField;
        
        private long vehicleIdField;
        
        private string manufacturerField;
        
        private string modelField;
        
        private int quantityField;
        
        private int quantityToOrderField;
        
        private int positionField;
        
        private int conditionField;
        
        private long classificationField;
        
        private string dimensionsField;
        
        private string dotMarkField;
        
        private double treadDepthField;
        
        private long replacementReasonField;
        
        private int replacementCountField;
        
        private int replacedTireStatusField;
        
        private long placementOdometerField;
        
        private long removalOdometerField;
        
        private System.DateTime placementDateField;
        
        private System.DateTime removalDateField;
        
        private long plannedMileageField;
        
        private string noteField;
        
        private System.DateTime dateCreatedField;
        
        private System.DateTime dateUpdatedField;
        
        private long userIdField;
        
        private int deletedField;
        
        private string vehicleNameField;
        
        private string vehicleRegistrationField;
        
        private string vehicleGarageNumberField;
        
        private string classificationTextField;
        
        private string replacementReasonTextField;
        
        /// <remarks/>
        public long TireId {
            get {
                return this.tireIdField;
            }
            set {
                this.tireIdField = value;
            }
        }
        
        /// <remarks/>
        public long VehicleId {
            get {
                return this.vehicleIdField;
            }
            set {
                this.vehicleIdField = value;
            }
        }
        
        /// <remarks/>
        public string Manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        public string Model {
            get {
                return this.modelField;
            }
            set {
                this.modelField = value;
            }
        }
        
        /// <remarks/>
        public int Quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
        
        /// <remarks/>
        public int QuantityToOrder {
            get {
                return this.quantityToOrderField;
            }
            set {
                this.quantityToOrderField = value;
            }
        }
        
        /// <remarks/>
        public int Position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
            }
        }
        
        /// <remarks/>
        public int Condition {
            get {
                return this.conditionField;
            }
            set {
                this.conditionField = value;
            }
        }
        
        /// <remarks/>
        public long Classification {
            get {
                return this.classificationField;
            }
            set {
                this.classificationField = value;
            }
        }
        
        /// <remarks/>
        public string Dimensions {
            get {
                return this.dimensionsField;
            }
            set {
                this.dimensionsField = value;
            }
        }
        
        /// <remarks/>
        public string DotMark {
            get {
                return this.dotMarkField;
            }
            set {
                this.dotMarkField = value;
            }
        }
        
        /// <remarks/>
        public double TreadDepth {
            get {
                return this.treadDepthField;
            }
            set {
                this.treadDepthField = value;
            }
        }
        
        /// <remarks/>
        public long ReplacementReason {
            get {
                return this.replacementReasonField;
            }
            set {
                this.replacementReasonField = value;
            }
        }
        
        /// <remarks/>
        public int ReplacementCount {
            get {
                return this.replacementCountField;
            }
            set {
                this.replacementCountField = value;
            }
        }
        
        /// <remarks/>
        public int ReplacedTireStatus {
            get {
                return this.replacedTireStatusField;
            }
            set {
                this.replacedTireStatusField = value;
            }
        }
        
        /// <remarks/>
        public long PlacementOdometer {
            get {
                return this.placementOdometerField;
            }
            set {
                this.placementOdometerField = value;
            }
        }
        
        /// <remarks/>
        public long RemovalOdometer {
            get {
                return this.removalOdometerField;
            }
            set {
                this.removalOdometerField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime PlacementDate {
            get {
                return this.placementDateField;
            }
            set {
                this.placementDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime RemovalDate {
            get {
                return this.removalDateField;
            }
            set {
                this.removalDateField = value;
            }
        }
        
        /// <remarks/>
        public long PlannedMileage {
            get {
                return this.plannedMileageField;
            }
            set {
                this.plannedMileageField = value;
            }
        }
        
        /// <remarks/>
        public string Note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateCreated {
            get {
                return this.dateCreatedField;
            }
            set {
                this.dateCreatedField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateUpdated {
            get {
                return this.dateUpdatedField;
            }
            set {
                this.dateUpdatedField = value;
            }
        }
        
        /// <remarks/>
        public long UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public int Deleted {
            get {
                return this.deletedField;
            }
            set {
                this.deletedField = value;
            }
        }
        
        /// <remarks/>
        public string VehicleName {
            get {
                return this.vehicleNameField;
            }
            set {
                this.vehicleNameField = value;
            }
        }
        
        /// <remarks/>
        public string VehicleRegistration {
            get {
                return this.vehicleRegistrationField;
            }
            set {
                this.vehicleRegistrationField = value;
            }
        }
        
        /// <remarks/>
        public string VehicleGarageNumber {
            get {
                return this.vehicleGarageNumberField;
            }
            set {
                this.vehicleGarageNumberField = value;
            }
        }
        
        /// <remarks/>
        public string ClassificationText {
            get {
                return this.classificationTextField;
            }
            set {
                this.classificationTextField = value;
            }
        }
        
        /// <remarks/>
        public string ReplacementReasonText {
            get {
                return this.replacementReasonTextField;
            }
            set {
                this.replacementReasonTextField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class FuelConsumptionModel {
        
        private string monthField;
        
        private string garageNumberField;
        
        private string registrationField;
        
        private string areaField;
        
        private int odometarMinField;
        
        private int odometarMaxField;
        
        private int mileageField;
        
        private decimal loadedFuelField;
        
        private decimal fuelConsumptionField;
        
        /// <remarks/>
        public string Month {
            get {
                return this.monthField;
            }
            set {
                this.monthField = value;
            }
        }
        
        /// <remarks/>
        public string GarageNumber {
            get {
                return this.garageNumberField;
            }
            set {
                this.garageNumberField = value;
            }
        }
        
        /// <remarks/>
        public string Registration {
            get {
                return this.registrationField;
            }
            set {
                this.registrationField = value;
            }
        }
        
        /// <remarks/>
        public string Area {
            get {
                return this.areaField;
            }
            set {
                this.areaField = value;
            }
        }
        
        /// <remarks/>
        public int OdometarMin {
            get {
                return this.odometarMinField;
            }
            set {
                this.odometarMinField = value;
            }
        }
        
        /// <remarks/>
        public int OdometarMax {
            get {
                return this.odometarMaxField;
            }
            set {
                this.odometarMaxField = value;
            }
        }
        
        /// <remarks/>
        public int Mileage {
            get {
                return this.mileageField;
            }
            set {
                this.mileageField = value;
            }
        }
        
        /// <remarks/>
        public decimal LoadedFuel {
            get {
                return this.loadedFuelField;
            }
            set {
                this.loadedFuelField = value;
            }
        }
        
        /// <remarks/>
        public decimal FuelConsumption {
            get {
                return this.fuelConsumptionField;
            }
            set {
                this.fuelConsumptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class QuickInfoServiceFilterModel {
        
        private System.Nullable<long> vehicleIdField;
        
        private string nameField;
        
        private string registrationField;
        
        private System.Nullable<int> currentOdometerField;
        
        private System.Nullable<int> nextServiceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> VehicleId {
            get {
                return this.vehicleIdField;
            }
            set {
                this.vehicleIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Registration {
            get {
                return this.registrationField;
            }
            set {
                this.registrationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> CurrentOdometer {
            get {
                return this.currentOdometerField;
            }
            set {
                this.currentOdometerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> NextService {
            get {
                return this.nextServiceField;
            }
            set {
                this.nextServiceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class QuickInfoWriteOffFilterModel {
        
        private System.Nullable<long> vehicleIdField;
        
        private string nameField;
        
        private string registrationField;
        
        private System.Nullable<System.DateTime> firstRegistrationDateField;
        
        private System.Nullable<System.DateTime> writeOffField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> VehicleId {
            get {
                return this.vehicleIdField;
            }
            set {
                this.vehicleIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Registration {
            get {
                return this.registrationField;
            }
            set {
                this.registrationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> FirstRegistrationDate {
            get {
                return this.firstRegistrationDateField;
            }
            set {
                this.firstRegistrationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> WriteOff {
            get {
                return this.writeOffField;
            }
            set {
                this.writeOffField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class QuickInfoRegistrationFilterModel {
        
        private System.Nullable<long> vehicleIdField;
        
        private string nameField;
        
        private string registrationField;
        
        private System.Nullable<System.DateTime> lastRegistrationDateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> VehicleId {
            get {
                return this.vehicleIdField;
            }
            set {
                this.vehicleIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Registration {
            get {
                return this.registrationField;
            }
            set {
                this.registrationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> LastRegistrationDate {
            get {
                return this.lastRegistrationDateField;
            }
            set {
                this.lastRegistrationDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class LocationFilterModel {
        
        private long locationIdField;
        
        private string locationCodeField;
        
        private string locationNameField;
        
        private System.Nullable<int> locationTypeEnumField;
        
        private string locationTypeField;
        
        /// <remarks/>
        public long LocationId {
            get {
                return this.locationIdField;
            }
            set {
                this.locationIdField = value;
            }
        }
        
        /// <remarks/>
        public string LocationCode {
            get {
                return this.locationCodeField;
            }
            set {
                this.locationCodeField = value;
            }
        }
        
        /// <remarks/>
        public string LocationName {
            get {
                return this.locationNameField;
            }
            set {
                this.locationNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> LocationTypeEnum {
            get {
                return this.locationTypeEnumField;
            }
            set {
                this.locationTypeEnumField = value;
            }
        }
        
        /// <remarks/>
        public string LocationType {
            get {
                return this.locationTypeField;
            }
            set {
                this.locationTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class LocationModel {
        
        private long locationIdField;
        
        private string locationCodeField;
        
        private string locationNameField;
        
        private long locationTypeField;
        
        private long plannedArrivalField;
        
        private long userIdField;
        
        /// <remarks/>
        public long LocationId {
            get {
                return this.locationIdField;
            }
            set {
                this.locationIdField = value;
            }
        }
        
        /// <remarks/>
        public string LocationCode {
            get {
                return this.locationCodeField;
            }
            set {
                this.locationCodeField = value;
            }
        }
        
        /// <remarks/>
        public string LocationName {
            get {
                return this.locationNameField;
            }
            set {
                this.locationNameField = value;
            }
        }
        
        /// <remarks/>
        public long LocationType {
            get {
                return this.locationTypeField;
            }
            set {
                this.locationTypeField = value;
            }
        }
        
        /// <remarks/>
        public long PlannedArrival {
            get {
                return this.plannedArrivalField;
            }
            set {
                this.plannedArrivalField = value;
            }
        }
        
        /// <remarks/>
        public long UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class PrlFilterModel {
        
        private System.Nullable<long> prlIdField;
        
        private System.DateTime startDateField;
        
        private long prlTypeEnumField;
        
        private string prlTypeField;
        
        private long statusEnumField;
        
        private string statusField;
        
        private string vehicleRegistrationField;
        
        private string driverNameField;
        
        private string relationNameField;
        
        private string authorField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> PrlId {
            get {
                return this.prlIdField;
            }
            set {
                this.prlIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        public long PrlTypeEnum {
            get {
                return this.prlTypeEnumField;
            }
            set {
                this.prlTypeEnumField = value;
            }
        }
        
        /// <remarks/>
        public string PrlType {
            get {
                return this.prlTypeField;
            }
            set {
                this.prlTypeField = value;
            }
        }
        
        /// <remarks/>
        public long StatusEnum {
            get {
                return this.statusEnumField;
            }
            set {
                this.statusEnumField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string VehicleRegistration {
            get {
                return this.vehicleRegistrationField;
            }
            set {
                this.vehicleRegistrationField = value;
            }
        }
        
        /// <remarks/>
        public string DriverName {
            get {
                return this.driverNameField;
            }
            set {
                this.driverNameField = value;
            }
        }
        
        /// <remarks/>
        public string RelationName {
            get {
                return this.relationNameField;
            }
            set {
                this.relationNameField = value;
            }
        }
        
        /// <remarks/>
        public string Author {
            get {
                return this.authorField;
            }
            set {
                this.authorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class PRLModel {
        
        private System.Nullable<long> prlIdField;
        
        private System.Nullable<float> num_WagesField;
        
        private System.Nullable<long> wage_AmountField;
        
        private System.Nullable<long> total_WageField;
        
        private System.Nullable<System.DateTime> wage_StartField;
        
        private System.Nullable<System.DateTime> wage_EndField;
        
        private string encField;
        
        private System.DateTime prlDateField;
        
        private long prlTypeField;
        
        private long vehicleIdField;
        
        private string vehicleRegistrationField;
        
        private long driverIdField;
        
        private System.Nullable<long> orderedByField;
        
        private System.Nullable<long> transportUserField;
        
        private long userIdField;
        
        private System.Nullable<long> childUserIdField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private System.DateTime startDateField;
        
        private System.DateTime endDateField;
        
        private string addInfoField;
        
        private string crewField;
        
        private System.Nullable<double> plannedOdometerStartField;
        
        private System.Nullable<double> plannedOdometerEndField;
        
        private System.Nullable<double> plannedOdometerTotalField;
        
        private System.Nullable<double> actualOdometerStartField;
        
        private System.Nullable<double> actualOdometerEndField;
        
        private System.Nullable<double> actualOdometerTotalField;
        
        private System.Nullable<long> relationIdField;
        
        private string relationNameField;
        
        private System.Nullable<long> relationInstanceIdField;
        
        private long statusField;
        
        private long box_odometerField;
        
        private string formattedBox_odometerField;
        
        private long box_distanceField;
        
        private string formattedBox_distanceField;
        
        private long box_differenceField;
        
        private string formattedBox_differenceField;
        
        private long box_voznjaField;
        
        private string formattedBox_voznjaField;
        
        private long box_zadrzavanjeField;
        
        private string formattedBox_zadrzavanjeField;
        
        private long box_radField;
        
        private string formattedBox_radField;
        
        private long box_voznja_actualField;
        
        private string formattedBox_voznja_actualField;
        
        private long box_zadrzavanje_actualField;
        
        private string formattedBox_zadrzavanje_actualField;
        
        private long box_rad_actualField;
        
        private string formattedBox_rad_actualField;
        
        private System.Nullable<long> wageField;
        
        private string destinationField;
        
        private string authorField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> PrlId {
            get {
                return this.prlIdField;
            }
            set {
                this.prlIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<float> Num_Wages {
            get {
                return this.num_WagesField;
            }
            set {
                this.num_WagesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> Wage_Amount {
            get {
                return this.wage_AmountField;
            }
            set {
                this.wage_AmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> Total_Wage {
            get {
                return this.total_WageField;
            }
            set {
                this.total_WageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> Wage_Start {
            get {
                return this.wage_StartField;
            }
            set {
                this.wage_StartField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> Wage_End {
            get {
                return this.wage_EndField;
            }
            set {
                this.wage_EndField = value;
            }
        }
        
        /// <remarks/>
        public string Enc {
            get {
                return this.encField;
            }
            set {
                this.encField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime PrlDate {
            get {
                return this.prlDateField;
            }
            set {
                this.prlDateField = value;
            }
        }
        
        /// <remarks/>
        public long PrlType {
            get {
                return this.prlTypeField;
            }
            set {
                this.prlTypeField = value;
            }
        }
        
        /// <remarks/>
        public long VehicleId {
            get {
                return this.vehicleIdField;
            }
            set {
                this.vehicleIdField = value;
            }
        }
        
        /// <remarks/>
        public string VehicleRegistration {
            get {
                return this.vehicleRegistrationField;
            }
            set {
                this.vehicleRegistrationField = value;
            }
        }
        
        /// <remarks/>
        public long DriverId {
            get {
                return this.driverIdField;
            }
            set {
                this.driverIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> OrderedBy {
            get {
                return this.orderedByField;
            }
            set {
                this.orderedByField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> TransportUser {
            get {
                return this.transportUserField;
            }
            set {
                this.transportUserField = value;
            }
        }
        
        /// <remarks/>
        public long UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> ChildUserId {
            get {
                return this.childUserIdField;
            }
            set {
                this.childUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime EndDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        public string AddInfo {
            get {
                return this.addInfoField;
            }
            set {
                this.addInfoField = value;
            }
        }
        
        /// <remarks/>
        public string Crew {
            get {
                return this.crewField;
            }
            set {
                this.crewField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> PlannedOdometerStart {
            get {
                return this.plannedOdometerStartField;
            }
            set {
                this.plannedOdometerStartField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> PlannedOdometerEnd {
            get {
                return this.plannedOdometerEndField;
            }
            set {
                this.plannedOdometerEndField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> PlannedOdometerTotal {
            get {
                return this.plannedOdometerTotalField;
            }
            set {
                this.plannedOdometerTotalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> ActualOdometerStart {
            get {
                return this.actualOdometerStartField;
            }
            set {
                this.actualOdometerStartField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> ActualOdometerEnd {
            get {
                return this.actualOdometerEndField;
            }
            set {
                this.actualOdometerEndField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> ActualOdometerTotal {
            get {
                return this.actualOdometerTotalField;
            }
            set {
                this.actualOdometerTotalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> RelationId {
            get {
                return this.relationIdField;
            }
            set {
                this.relationIdField = value;
            }
        }
        
        /// <remarks/>
        public string RelationName {
            get {
                return this.relationNameField;
            }
            set {
                this.relationNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> RelationInstanceId {
            get {
                return this.relationInstanceIdField;
            }
            set {
                this.relationInstanceIdField = value;
            }
        }
        
        /// <remarks/>
        public long Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public long box_odometer {
            get {
                return this.box_odometerField;
            }
            set {
                this.box_odometerField = value;
            }
        }
        
        /// <remarks/>
        public string FormattedBox_odometer {
            get {
                return this.formattedBox_odometerField;
            }
            set {
                this.formattedBox_odometerField = value;
            }
        }
        
        /// <remarks/>
        public long box_distance {
            get {
                return this.box_distanceField;
            }
            set {
                this.box_distanceField = value;
            }
        }
        
        /// <remarks/>
        public string FormattedBox_distance {
            get {
                return this.formattedBox_distanceField;
            }
            set {
                this.formattedBox_distanceField = value;
            }
        }
        
        /// <remarks/>
        public long box_difference {
            get {
                return this.box_differenceField;
            }
            set {
                this.box_differenceField = value;
            }
        }
        
        /// <remarks/>
        public string FormattedBox_difference {
            get {
                return this.formattedBox_differenceField;
            }
            set {
                this.formattedBox_differenceField = value;
            }
        }
        
        /// <remarks/>
        public long box_voznja {
            get {
                return this.box_voznjaField;
            }
            set {
                this.box_voznjaField = value;
            }
        }
        
        /// <remarks/>
        public string FormattedBox_voznja {
            get {
                return this.formattedBox_voznjaField;
            }
            set {
                this.formattedBox_voznjaField = value;
            }
        }
        
        /// <remarks/>
        public long box_zadrzavanje {
            get {
                return this.box_zadrzavanjeField;
            }
            set {
                this.box_zadrzavanjeField = value;
            }
        }
        
        /// <remarks/>
        public string FormattedBox_zadrzavanje {
            get {
                return this.formattedBox_zadrzavanjeField;
            }
            set {
                this.formattedBox_zadrzavanjeField = value;
            }
        }
        
        /// <remarks/>
        public long box_rad {
            get {
                return this.box_radField;
            }
            set {
                this.box_radField = value;
            }
        }
        
        /// <remarks/>
        public string FormattedBox_rad {
            get {
                return this.formattedBox_radField;
            }
            set {
                this.formattedBox_radField = value;
            }
        }
        
        /// <remarks/>
        public long box_voznja_actual {
            get {
                return this.box_voznja_actualField;
            }
            set {
                this.box_voznja_actualField = value;
            }
        }
        
        /// <remarks/>
        public string FormattedBox_voznja_actual {
            get {
                return this.formattedBox_voznja_actualField;
            }
            set {
                this.formattedBox_voznja_actualField = value;
            }
        }
        
        /// <remarks/>
        public long box_zadrzavanje_actual {
            get {
                return this.box_zadrzavanje_actualField;
            }
            set {
                this.box_zadrzavanje_actualField = value;
            }
        }
        
        /// <remarks/>
        public string FormattedBox_zadrzavanje_actual {
            get {
                return this.formattedBox_zadrzavanje_actualField;
            }
            set {
                this.formattedBox_zadrzavanje_actualField = value;
            }
        }
        
        /// <remarks/>
        public long box_rad_actual {
            get {
                return this.box_rad_actualField;
            }
            set {
                this.box_rad_actualField = value;
            }
        }
        
        /// <remarks/>
        public string FormattedBox_rad_actual {
            get {
                return this.formattedBox_rad_actualField;
            }
            set {
                this.formattedBox_rad_actualField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> Wage {
            get {
                return this.wageField;
            }
            set {
                this.wageField = value;
            }
        }
        
        /// <remarks/>
        public string Destination {
            get {
                return this.destinationField;
            }
            set {
                this.destinationField = value;
            }
        }
        
        /// <remarks/>
        public string Author {
            get {
                return this.authorField;
            }
            set {
                this.authorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class ExpenseProcessingLogRecordModel {
        
        private string idField;
        
        private string fileIdField;
        
        private string fileNameField;
        
        private int recordNumberField;
        
        private int statusCodeField;
        
        private string recordDataField;
        
        /// <remarks/>
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string FileId {
            get {
                return this.fileIdField;
            }
            set {
                this.fileIdField = value;
            }
        }
        
        /// <remarks/>
        public string FileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
        
        /// <remarks/>
        public int RecordNumber {
            get {
                return this.recordNumberField;
            }
            set {
                this.recordNumberField = value;
            }
        }
        
        /// <remarks/>
        public int StatusCode {
            get {
                return this.statusCodeField;
            }
            set {
                this.statusCodeField = value;
            }
        }
        
        /// <remarks/>
        public string RecordData {
            get {
                return this.recordDataField;
            }
            set {
                this.recordDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class ExpenseProcessingLogModel {
        
        private string fileIdField;
        
        private ExpenseProcessingLogRecordModel[] recordsField;
        
        /// <remarks/>
        public string FileId {
            get {
                return this.fileIdField;
            }
            set {
                this.fileIdField = value;
            }
        }
        
        /// <remarks/>
        public ExpenseProcessingLogRecordModel[] Records {
            get {
                return this.recordsField;
            }
            set {
                this.recordsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class UploadFileDataModel {
        
        private string fileNameField;
        
        private byte[] bufferDataField;
        
        private int filePositionField;
        
        /// <remarks/>
        public string FileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] BufferData {
            get {
                return this.bufferDataField;
            }
            set {
                this.bufferDataField = value;
            }
        }
        
        /// <remarks/>
        public int FilePosition {
            get {
                return this.filePositionField;
            }
            set {
                this.filePositionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class RelationLocationInstanceModel {
        
        private long relationLocationInstanceIdField;
        
        private long relationInstanceIdField;
        
        private System.DateTime sysInsertDateField;
        
        private System.Nullable<System.DateTime> sysUpdateDateField;
        
        private System.Nullable<long> odometerField;
        
        private System.Nullable<long> plannedDepartureField;
        
        private string formattedPlannedDepartureField;
        
        private System.Nullable<long> actualDepartureField;
        
        private string formattedActualDepartureField;
        
        private System.Nullable<long> plannedArrivalField;
        
        private string formattedPlannedArrivalField;
        
        private System.Nullable<long> actualArrivalField;
        
        private string formattedActualArrivalField;
        
        private System.Nullable<long> plannedStayField;
        
        private string formattedPlannedStayField;
        
        private System.Nullable<long> actualStayField;
        
        private string formattedActualStayField;
        
        private string interuptionField;
        
        private string noteField;
        
        private System.Nullable<long> locationIdField;
        
        private string locationNameField;
        
        private string locationCodeField;
        
        private string formattedLocationCodeNameField;
        
        private System.Nullable<long> relationLocationIdField;
        
        private System.Nullable<long> positionField;
        
        private System.Nullable<long> prlIdField;
        
        /// <remarks/>
        public long RelationLocationInstanceId {
            get {
                return this.relationLocationInstanceIdField;
            }
            set {
                this.relationLocationInstanceIdField = value;
            }
        }
        
        /// <remarks/>
        public long RelationInstanceId {
            get {
                return this.relationInstanceIdField;
            }
            set {
                this.relationInstanceIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime SysInsertDate {
            get {
                return this.sysInsertDateField;
            }
            set {
                this.sysInsertDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> SysUpdateDate {
            get {
                return this.sysUpdateDateField;
            }
            set {
                this.sysUpdateDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> Odometer {
            get {
                return this.odometerField;
            }
            set {
                this.odometerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> PlannedDeparture {
            get {
                return this.plannedDepartureField;
            }
            set {
                this.plannedDepartureField = value;
            }
        }
        
        /// <remarks/>
        public string FormattedPlannedDeparture {
            get {
                return this.formattedPlannedDepartureField;
            }
            set {
                this.formattedPlannedDepartureField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> ActualDeparture {
            get {
                return this.actualDepartureField;
            }
            set {
                this.actualDepartureField = value;
            }
        }
        
        /// <remarks/>
        public string FormattedActualDeparture {
            get {
                return this.formattedActualDepartureField;
            }
            set {
                this.formattedActualDepartureField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> PlannedArrival {
            get {
                return this.plannedArrivalField;
            }
            set {
                this.plannedArrivalField = value;
            }
        }
        
        /// <remarks/>
        public string FormattedPlannedArrival {
            get {
                return this.formattedPlannedArrivalField;
            }
            set {
                this.formattedPlannedArrivalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> ActualArrival {
            get {
                return this.actualArrivalField;
            }
            set {
                this.actualArrivalField = value;
            }
        }
        
        /// <remarks/>
        public string FormattedActualArrival {
            get {
                return this.formattedActualArrivalField;
            }
            set {
                this.formattedActualArrivalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> PlannedStay {
            get {
                return this.plannedStayField;
            }
            set {
                this.plannedStayField = value;
            }
        }
        
        /// <remarks/>
        public string FormattedPlannedStay {
            get {
                return this.formattedPlannedStayField;
            }
            set {
                this.formattedPlannedStayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> ActualStay {
            get {
                return this.actualStayField;
            }
            set {
                this.actualStayField = value;
            }
        }
        
        /// <remarks/>
        public string FormattedActualStay {
            get {
                return this.formattedActualStayField;
            }
            set {
                this.formattedActualStayField = value;
            }
        }
        
        /// <remarks/>
        public string Interuption {
            get {
                return this.interuptionField;
            }
            set {
                this.interuptionField = value;
            }
        }
        
        /// <remarks/>
        public string Note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> LocationId {
            get {
                return this.locationIdField;
            }
            set {
                this.locationIdField = value;
            }
        }
        
        /// <remarks/>
        public string LocationName {
            get {
                return this.locationNameField;
            }
            set {
                this.locationNameField = value;
            }
        }
        
        /// <remarks/>
        public string LocationCode {
            get {
                return this.locationCodeField;
            }
            set {
                this.locationCodeField = value;
            }
        }
        
        /// <remarks/>
        public string FormattedLocationCodeName {
            get {
                return this.formattedLocationCodeNameField;
            }
            set {
                this.formattedLocationCodeNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> RelationLocationId {
            get {
                return this.relationLocationIdField;
            }
            set {
                this.relationLocationIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> Position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> PrlId {
            get {
                return this.prlIdField;
            }
            set {
                this.prlIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class RelationLocationModel {
        
        private long relationLocationIdField;
        
        private long locationIdField;
        
        private long relationIdField;
        
        private System.Nullable<long> plannedArrivalField;
        
        private string formattedPlannedArrivalField;
        
        private System.Nullable<long> plannedDepartureField;
        
        private string formattedPlannedDepartureField;
        
        private System.Nullable<long> plannedStayField;
        
        private string formattedPlannedStayField;
        
        private System.Nullable<long> reasonField;
        
        private string formattedReasonField;
        
        private string formattedLocationCodeNameField;
        
        private System.Nullable<long> distanceField;
        
        private System.Nullable<long> positionField;
        
        private string locationNameField;
        
        private System.Nullable<int> locationTypeField;
        
        private string locationCodeField;
        
        private string relationNameField;
        
        private int wageMarkerField;
        
        private string relationCodeField;
        
        private System.Nullable<long> transportTypeField;
        
        private System.Nullable<long> transportMeansField;
        
        private System.Nullable<long> transporterField;
        
        /// <remarks/>
        public long RelationLocationId {
            get {
                return this.relationLocationIdField;
            }
            set {
                this.relationLocationIdField = value;
            }
        }
        
        /// <remarks/>
        public long LocationId {
            get {
                return this.locationIdField;
            }
            set {
                this.locationIdField = value;
            }
        }
        
        /// <remarks/>
        public long RelationId {
            get {
                return this.relationIdField;
            }
            set {
                this.relationIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> PlannedArrival {
            get {
                return this.plannedArrivalField;
            }
            set {
                this.plannedArrivalField = value;
            }
        }
        
        /// <remarks/>
        public string FormattedPlannedArrival {
            get {
                return this.formattedPlannedArrivalField;
            }
            set {
                this.formattedPlannedArrivalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> PlannedDeparture {
            get {
                return this.plannedDepartureField;
            }
            set {
                this.plannedDepartureField = value;
            }
        }
        
        /// <remarks/>
        public string FormattedPlannedDeparture {
            get {
                return this.formattedPlannedDepartureField;
            }
            set {
                this.formattedPlannedDepartureField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> PlannedStay {
            get {
                return this.plannedStayField;
            }
            set {
                this.plannedStayField = value;
            }
        }
        
        /// <remarks/>
        public string FormattedPlannedStay {
            get {
                return this.formattedPlannedStayField;
            }
            set {
                this.formattedPlannedStayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> Reason {
            get {
                return this.reasonField;
            }
            set {
                this.reasonField = value;
            }
        }
        
        /// <remarks/>
        public string FormattedReason {
            get {
                return this.formattedReasonField;
            }
            set {
                this.formattedReasonField = value;
            }
        }
        
        /// <remarks/>
        public string FormattedLocationCodeName {
            get {
                return this.formattedLocationCodeNameField;
            }
            set {
                this.formattedLocationCodeNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> Distance {
            get {
                return this.distanceField;
            }
            set {
                this.distanceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> Position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
            }
        }
        
        /// <remarks/>
        public string LocationName {
            get {
                return this.locationNameField;
            }
            set {
                this.locationNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> LocationType {
            get {
                return this.locationTypeField;
            }
            set {
                this.locationTypeField = value;
            }
        }
        
        /// <remarks/>
        public string LocationCode {
            get {
                return this.locationCodeField;
            }
            set {
                this.locationCodeField = value;
            }
        }
        
        /// <remarks/>
        public string RelationName {
            get {
                return this.relationNameField;
            }
            set {
                this.relationNameField = value;
            }
        }
        
        /// <remarks/>
        public int WageMarker {
            get {
                return this.wageMarkerField;
            }
            set {
                this.wageMarkerField = value;
            }
        }
        
        /// <remarks/>
        public string RelationCode {
            get {
                return this.relationCodeField;
            }
            set {
                this.relationCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> TransportType {
            get {
                return this.transportTypeField;
            }
            set {
                this.transportTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> TransportMeans {
            get {
                return this.transportMeansField;
            }
            set {
                this.transportMeansField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> Transporter {
            get {
                return this.transporterField;
            }
            set {
                this.transporterField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class RelationLocationFilterModel {
        
        private long relationLocationIdField;
        
        private long locationIdField;
        
        private long relationIdField;
        
        private System.Nullable<long> plannedDepartureField;
        
        private string formattedPlannedDepartureField;
        
        private System.Nullable<long> plannedArrivalField;
        
        private string formattedPlannedArrivalField;
        
        private System.Nullable<long> reasonField;
        
        private string formattedReasonField;
        
        private string formattedLocationCodeNameField;
        
        private System.Nullable<long> distanceField;
        
        private System.Nullable<int> locationTypeField;
        
        private string formattedLocationTypeField;
        
        private string locationNameField;
        
        private string locationCodeField;
        
        private int wageMarkerField;
        
        private bool formattedWageMarkerField;
        
        /// <remarks/>
        public long RelationLocationId {
            get {
                return this.relationLocationIdField;
            }
            set {
                this.relationLocationIdField = value;
            }
        }
        
        /// <remarks/>
        public long LocationId {
            get {
                return this.locationIdField;
            }
            set {
                this.locationIdField = value;
            }
        }
        
        /// <remarks/>
        public long RelationId {
            get {
                return this.relationIdField;
            }
            set {
                this.relationIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> PlannedDeparture {
            get {
                return this.plannedDepartureField;
            }
            set {
                this.plannedDepartureField = value;
            }
        }
        
        /// <remarks/>
        public string FormattedPlannedDeparture {
            get {
                return this.formattedPlannedDepartureField;
            }
            set {
                this.formattedPlannedDepartureField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> PlannedArrival {
            get {
                return this.plannedArrivalField;
            }
            set {
                this.plannedArrivalField = value;
            }
        }
        
        /// <remarks/>
        public string FormattedPlannedArrival {
            get {
                return this.formattedPlannedArrivalField;
            }
            set {
                this.formattedPlannedArrivalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> Reason {
            get {
                return this.reasonField;
            }
            set {
                this.reasonField = value;
            }
        }
        
        /// <remarks/>
        public string FormattedReason {
            get {
                return this.formattedReasonField;
            }
            set {
                this.formattedReasonField = value;
            }
        }
        
        /// <remarks/>
        public string FormattedLocationCodeName {
            get {
                return this.formattedLocationCodeNameField;
            }
            set {
                this.formattedLocationCodeNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> Distance {
            get {
                return this.distanceField;
            }
            set {
                this.distanceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> LocationType {
            get {
                return this.locationTypeField;
            }
            set {
                this.locationTypeField = value;
            }
        }
        
        /// <remarks/>
        public string FormattedLocationType {
            get {
                return this.formattedLocationTypeField;
            }
            set {
                this.formattedLocationTypeField = value;
            }
        }
        
        /// <remarks/>
        public string LocationName {
            get {
                return this.locationNameField;
            }
            set {
                this.locationNameField = value;
            }
        }
        
        /// <remarks/>
        public string LocationCode {
            get {
                return this.locationCodeField;
            }
            set {
                this.locationCodeField = value;
            }
        }
        
        /// <remarks/>
        public int WageMarker {
            get {
                return this.wageMarkerField;
            }
            set {
                this.wageMarkerField = value;
            }
        }
        
        /// <remarks/>
        public bool FormattedWageMarker {
            get {
                return this.formattedWageMarkerField;
            }
            set {
                this.formattedWageMarkerField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class RelationFilterModel {
        
        private long relationIdField;
        
        private string nameAndCodeField;
        
        private System.Nullable<int> transportTypeEnumField;
        
        private System.Nullable<int> transporterEnumField;
        
        private string transportTypeAndTransporterField;
        
        private System.Nullable<int> transportMeansEnumField;
        
        private string transportMeansField;
        
        private string daysField;
        
        private string inactiveFromToField;
        
        private int distanceField;
        
        private System.Nullable<long> departureField;
        
        private string formattedDepartureField;
        
        private System.Nullable<long> arrivalField;
        
        private string formattedArrivalField;
        
        /// <remarks/>
        public long RelationId {
            get {
                return this.relationIdField;
            }
            set {
                this.relationIdField = value;
            }
        }
        
        /// <remarks/>
        public string NameAndCode {
            get {
                return this.nameAndCodeField;
            }
            set {
                this.nameAndCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TransportTypeEnum {
            get {
                return this.transportTypeEnumField;
            }
            set {
                this.transportTypeEnumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TransporterEnum {
            get {
                return this.transporterEnumField;
            }
            set {
                this.transporterEnumField = value;
            }
        }
        
        /// <remarks/>
        public string TransportTypeAndTransporter {
            get {
                return this.transportTypeAndTransporterField;
            }
            set {
                this.transportTypeAndTransporterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TransportMeansEnum {
            get {
                return this.transportMeansEnumField;
            }
            set {
                this.transportMeansEnumField = value;
            }
        }
        
        /// <remarks/>
        public string TransportMeans {
            get {
                return this.transportMeansField;
            }
            set {
                this.transportMeansField = value;
            }
        }
        
        /// <remarks/>
        public string Days {
            get {
                return this.daysField;
            }
            set {
                this.daysField = value;
            }
        }
        
        /// <remarks/>
        public string InactiveFromTo {
            get {
                return this.inactiveFromToField;
            }
            set {
                this.inactiveFromToField = value;
            }
        }
        
        /// <remarks/>
        public int Distance {
            get {
                return this.distanceField;
            }
            set {
                this.distanceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> Departure {
            get {
                return this.departureField;
            }
            set {
                this.departureField = value;
            }
        }
        
        /// <remarks/>
        public string FormattedDeparture {
            get {
                return this.formattedDepartureField;
            }
            set {
                this.formattedDepartureField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> Arrival {
            get {
                return this.arrivalField;
            }
            set {
                this.arrivalField = value;
            }
        }
        
        /// <remarks/>
        public string FormattedArrival {
            get {
                return this.formattedArrivalField;
            }
            set {
                this.formattedArrivalField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class RelationModel {
        
        private long relationIdField;
        
        private long userIdField;
        
        private System.Nullable<long> childUserIdField;
        
        private string nameField;
        
        private string codeField;
        
        private System.Nullable<long> transportTypeField;
        
        private System.Nullable<long> transportMeansField;
        
        private System.Nullable<long> transporterField;
        
        private long distanceField;
        
        private System.Nullable<long> arrivalField;
        
        private string formattedArrivalField;
        
        private System.Nullable<long> departureField;
        
        private string formattedDepartureField;
        
        private long statusField;
        
        private System.Nullable<long> monField;
        
        private System.Nullable<long> tueField;
        
        private System.Nullable<long> wedField;
        
        private long thuField;
        
        private System.Nullable<long> friField;
        
        private System.Nullable<long> satField;
        
        private System.Nullable<long> sunField;
        
        private System.Nullable<System.DateTime> inactiveFromField;
        
        private System.Nullable<System.DateTime> inactiveToField;
        
        private string destinationField;
        
        private System.Nullable<long> wageField;
        
        /// <remarks/>
        public long RelationId {
            get {
                return this.relationIdField;
            }
            set {
                this.relationIdField = value;
            }
        }
        
        /// <remarks/>
        public long UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> ChildUserId {
            get {
                return this.childUserIdField;
            }
            set {
                this.childUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> TransportType {
            get {
                return this.transportTypeField;
            }
            set {
                this.transportTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> TransportMeans {
            get {
                return this.transportMeansField;
            }
            set {
                this.transportMeansField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> Transporter {
            get {
                return this.transporterField;
            }
            set {
                this.transporterField = value;
            }
        }
        
        /// <remarks/>
        public long Distance {
            get {
                return this.distanceField;
            }
            set {
                this.distanceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> Arrival {
            get {
                return this.arrivalField;
            }
            set {
                this.arrivalField = value;
            }
        }
        
        /// <remarks/>
        public string FormattedArrival {
            get {
                return this.formattedArrivalField;
            }
            set {
                this.formattedArrivalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> Departure {
            get {
                return this.departureField;
            }
            set {
                this.departureField = value;
            }
        }
        
        /// <remarks/>
        public string FormattedDeparture {
            get {
                return this.formattedDepartureField;
            }
            set {
                this.formattedDepartureField = value;
            }
        }
        
        /// <remarks/>
        public long Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> Mon {
            get {
                return this.monField;
            }
            set {
                this.monField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> Tue {
            get {
                return this.tueField;
            }
            set {
                this.tueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> Wed {
            get {
                return this.wedField;
            }
            set {
                this.wedField = value;
            }
        }
        
        /// <remarks/>
        public long Thu {
            get {
                return this.thuField;
            }
            set {
                this.thuField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> Fri {
            get {
                return this.friField;
            }
            set {
                this.friField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> Sat {
            get {
                return this.satField;
            }
            set {
                this.satField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> Sun {
            get {
                return this.sunField;
            }
            set {
                this.sunField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> InactiveFrom {
            get {
                return this.inactiveFromField;
            }
            set {
                this.inactiveFromField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> InactiveTo {
            get {
                return this.inactiveToField;
            }
            set {
                this.inactiveToField = value;
            }
        }
        
        /// <remarks/>
        public string Destination {
            get {
                return this.destinationField;
            }
            set {
                this.destinationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> Wage {
            get {
                return this.wageField;
            }
            set {
                this.wageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class ReservationFilterModel {
        
        private System.Nullable<long> reservationIDField;
        
        private System.Nullable<System.DateTime> startDateField;
        
        private System.Nullable<System.DateTime> endDateField;
        
        private string travelOrderNumField;
        
        private string vehicleRegistrationField;
        
        private string vehicleTypeField;
        
        private string garageField;
        
        private string driverNameField;
        
        private string numberOfFreeVehiclesField;
        
        private string destinationField;
        
        private int statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> ReservationID {
            get {
                return this.reservationIDField;
            }
            set {
                this.reservationIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        public string TravelOrderNum {
            get {
                return this.travelOrderNumField;
            }
            set {
                this.travelOrderNumField = value;
            }
        }
        
        /// <remarks/>
        public string VehicleRegistration {
            get {
                return this.vehicleRegistrationField;
            }
            set {
                this.vehicleRegistrationField = value;
            }
        }
        
        /// <remarks/>
        public string VehicleType {
            get {
                return this.vehicleTypeField;
            }
            set {
                this.vehicleTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Garage {
            get {
                return this.garageField;
            }
            set {
                this.garageField = value;
            }
        }
        
        /// <remarks/>
        public string DriverName {
            get {
                return this.driverNameField;
            }
            set {
                this.driverNameField = value;
            }
        }
        
        /// <remarks/>
        public string NumberOfFreeVehicles {
            get {
                return this.numberOfFreeVehiclesField;
            }
            set {
                this.numberOfFreeVehiclesField = value;
            }
        }
        
        /// <remarks/>
        public string Destination {
            get {
                return this.destinationField;
            }
            set {
                this.destinationField = value;
            }
        }
        
        /// <remarks/>
        public int Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class ReservationModel {
        
        private System.Nullable<long> reservationPkField;
        
        private System.Nullable<int> odometerField;
        
        private System.Nullable<long> userIdField;
        
        private string zoneField;
        
        private System.Nullable<long> approveUserIdField;
        
        private System.Nullable<long> resUserIdField;
        
        private System.Nullable<long> vehHandOutUserIdField;
        
        private System.Nullable<long> vehicleFkField;
        
        private System.Nullable<long> driverFkField;
        
        private System.Nullable<System.DateTime> resDateField;
        
        private System.Nullable<System.DateTime> resStartField;
        
        private System.Nullable<System.DateTime> resEndField;
        
        private System.Nullable<long> resTypeField;
        
        private System.Nullable<long> resVehicleTypeField;
        
        private string reservationVehicleTypeTextField;
        
        private System.Nullable<long> resSourceField;
        
        private string reservationSourceTextField;
        
        private System.Nullable<long> resStatusField;
        
        private string reservationStatusTextField;
        
        private System.Nullable<long> locStartField;
        
        private string startLocationTextField;
        
        private string locDestField;
        
        private System.Nullable<System.DateTime> vehUseStartField;
        
        private System.Nullable<System.DateTime> vehUseEndField;
        
        private string mailTextField;
        
        private string travelOrderNumField;
        
        private System.Nullable<long> vehicleOdometerStartField;
        
        private System.Nullable<long> vehicleOdometerEndField;
        
        private string fuelTankStartField;
        
        private string fuelTankEndField;
        
        private string noteField;
        
        private string statusField;
        
        private string numberOfFreeVehiclesField;
        
        private string driverFirstNameField;
        
        private string driverLastNameField;
        
        private string driverEmailField;
        
        private long driverRankField;
        
        private string vehicleRegistrationField;
        
        private string vehicleGroupNameField;
        
        private bool showDeclineButtonField;
        
        private bool showApproveButtonField;
        
        private bool showPickupButtonField;
        
        private bool showReturnButtonField;
        
        private bool showGreenField;
        
        private bool showYellowField;
        
        private bool showRedField;
        
        private bool showNumberField;
        
        private string driverFullNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> ReservationPk {
            get {
                return this.reservationPkField;
            }
            set {
                this.reservationPkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Odometer {
            get {
                return this.odometerField;
            }
            set {
                this.odometerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public string Zone {
            get {
                return this.zoneField;
            }
            set {
                this.zoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> ApproveUserId {
            get {
                return this.approveUserIdField;
            }
            set {
                this.approveUserIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> ResUserId {
            get {
                return this.resUserIdField;
            }
            set {
                this.resUserIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> VehHandOutUserId {
            get {
                return this.vehHandOutUserIdField;
            }
            set {
                this.vehHandOutUserIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> VehicleFk {
            get {
                return this.vehicleFkField;
            }
            set {
                this.vehicleFkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> DriverFk {
            get {
                return this.driverFkField;
            }
            set {
                this.driverFkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ResDate {
            get {
                return this.resDateField;
            }
            set {
                this.resDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ResStart {
            get {
                return this.resStartField;
            }
            set {
                this.resStartField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ResEnd {
            get {
                return this.resEndField;
            }
            set {
                this.resEndField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> ResType {
            get {
                return this.resTypeField;
            }
            set {
                this.resTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> ResVehicleType {
            get {
                return this.resVehicleTypeField;
            }
            set {
                this.resVehicleTypeField = value;
            }
        }
        
        /// <remarks/>
        public string ReservationVehicleTypeText {
            get {
                return this.reservationVehicleTypeTextField;
            }
            set {
                this.reservationVehicleTypeTextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> ResSource {
            get {
                return this.resSourceField;
            }
            set {
                this.resSourceField = value;
            }
        }
        
        /// <remarks/>
        public string ReservationSourceText {
            get {
                return this.reservationSourceTextField;
            }
            set {
                this.reservationSourceTextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> ResStatus {
            get {
                return this.resStatusField;
            }
            set {
                this.resStatusField = value;
            }
        }
        
        /// <remarks/>
        public string ReservationStatusText {
            get {
                return this.reservationStatusTextField;
            }
            set {
                this.reservationStatusTextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> LocStart {
            get {
                return this.locStartField;
            }
            set {
                this.locStartField = value;
            }
        }
        
        /// <remarks/>
        public string StartLocationText {
            get {
                return this.startLocationTextField;
            }
            set {
                this.startLocationTextField = value;
            }
        }
        
        /// <remarks/>
        public string LocDest {
            get {
                return this.locDestField;
            }
            set {
                this.locDestField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> VehUseStart {
            get {
                return this.vehUseStartField;
            }
            set {
                this.vehUseStartField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> VehUseEnd {
            get {
                return this.vehUseEndField;
            }
            set {
                this.vehUseEndField = value;
            }
        }
        
        /// <remarks/>
        public string MailText {
            get {
                return this.mailTextField;
            }
            set {
                this.mailTextField = value;
            }
        }
        
        /// <remarks/>
        public string TravelOrderNum {
            get {
                return this.travelOrderNumField;
            }
            set {
                this.travelOrderNumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> VehicleOdometerStart {
            get {
                return this.vehicleOdometerStartField;
            }
            set {
                this.vehicleOdometerStartField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> VehicleOdometerEnd {
            get {
                return this.vehicleOdometerEndField;
            }
            set {
                this.vehicleOdometerEndField = value;
            }
        }
        
        /// <remarks/>
        public string FuelTankStart {
            get {
                return this.fuelTankStartField;
            }
            set {
                this.fuelTankStartField = value;
            }
        }
        
        /// <remarks/>
        public string FuelTankEnd {
            get {
                return this.fuelTankEndField;
            }
            set {
                this.fuelTankEndField = value;
            }
        }
        
        /// <remarks/>
        public string Note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string NumberOfFreeVehicles {
            get {
                return this.numberOfFreeVehiclesField;
            }
            set {
                this.numberOfFreeVehiclesField = value;
            }
        }
        
        /// <remarks/>
        public string DriverFirstName {
            get {
                return this.driverFirstNameField;
            }
            set {
                this.driverFirstNameField = value;
            }
        }
        
        /// <remarks/>
        public string DriverLastName {
            get {
                return this.driverLastNameField;
            }
            set {
                this.driverLastNameField = value;
            }
        }
        
        /// <remarks/>
        public string DriverEmail {
            get {
                return this.driverEmailField;
            }
            set {
                this.driverEmailField = value;
            }
        }
        
        /// <remarks/>
        public long DriverRank {
            get {
                return this.driverRankField;
            }
            set {
                this.driverRankField = value;
            }
        }
        
        /// <remarks/>
        public string VehicleRegistration {
            get {
                return this.vehicleRegistrationField;
            }
            set {
                this.vehicleRegistrationField = value;
            }
        }
        
        /// <remarks/>
        public string VehicleGroupName {
            get {
                return this.vehicleGroupNameField;
            }
            set {
                this.vehicleGroupNameField = value;
            }
        }
        
        /// <remarks/>
        public bool showDeclineButton {
            get {
                return this.showDeclineButtonField;
            }
            set {
                this.showDeclineButtonField = value;
            }
        }
        
        /// <remarks/>
        public bool showApproveButton {
            get {
                return this.showApproveButtonField;
            }
            set {
                this.showApproveButtonField = value;
            }
        }
        
        /// <remarks/>
        public bool showPickupButton {
            get {
                return this.showPickupButtonField;
            }
            set {
                this.showPickupButtonField = value;
            }
        }
        
        /// <remarks/>
        public bool showReturnButton {
            get {
                return this.showReturnButtonField;
            }
            set {
                this.showReturnButtonField = value;
            }
        }
        
        /// <remarks/>
        public bool showGreen {
            get {
                return this.showGreenField;
            }
            set {
                this.showGreenField = value;
            }
        }
        
        /// <remarks/>
        public bool showYellow {
            get {
                return this.showYellowField;
            }
            set {
                this.showYellowField = value;
            }
        }
        
        /// <remarks/>
        public bool showRed {
            get {
                return this.showRedField;
            }
            set {
                this.showRedField = value;
            }
        }
        
        /// <remarks/>
        public bool showNumber {
            get {
                return this.showNumberField;
            }
            set {
                this.showNumberField = value;
            }
        }
        
        /// <remarks/>
        public string DriverFullName {
            get {
                return this.driverFullNameField;
            }
            set {
                this.driverFullNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class CardManagementHistoryFilterModel {
        
        private string cardTypeNameField;
        
        private string cardNumberField;
        
        private System.DateTime cardAssignDateField;
        
        private System.DateTime cardUnassignDateField;
        
        private long vehicleIdField;
        
        private string vehicleNameField;
        
        private long historyIdField;
        
        private long cardTypeField;
        
        private long defaultCardField;
        
        private long cardIdField;
        
        private System.Nullable<System.DateTime> cardUnassignDateDisplayField;
        
        /// <remarks/>
        public string CardTypeName {
            get {
                return this.cardTypeNameField;
            }
            set {
                this.cardTypeNameField = value;
            }
        }
        
        /// <remarks/>
        public string CardNumber {
            get {
                return this.cardNumberField;
            }
            set {
                this.cardNumberField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CardAssignDate {
            get {
                return this.cardAssignDateField;
            }
            set {
                this.cardAssignDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CardUnassignDate {
            get {
                return this.cardUnassignDateField;
            }
            set {
                this.cardUnassignDateField = value;
            }
        }
        
        /// <remarks/>
        public long VehicleId {
            get {
                return this.vehicleIdField;
            }
            set {
                this.vehicleIdField = value;
            }
        }
        
        /// <remarks/>
        public string VehicleName {
            get {
                return this.vehicleNameField;
            }
            set {
                this.vehicleNameField = value;
            }
        }
        
        /// <remarks/>
        public long HistoryId {
            get {
                return this.historyIdField;
            }
            set {
                this.historyIdField = value;
            }
        }
        
        /// <remarks/>
        public long CardType {
            get {
                return this.cardTypeField;
            }
            set {
                this.cardTypeField = value;
            }
        }
        
        /// <remarks/>
        public long DefaultCard {
            get {
                return this.defaultCardField;
            }
            set {
                this.defaultCardField = value;
            }
        }
        
        /// <remarks/>
        public long CardId {
            get {
                return this.cardIdField;
            }
            set {
                this.cardIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> CardUnassignDateDisplay {
            get {
                return this.cardUnassignDateDisplayField;
            }
            set {
                this.cardUnassignDateDisplayField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class CardManagementFilterModel {
        
        private string cardTypeField;
        
        private string cardIdField;
        
        private string cardNumberField;
        
        private System.DateTime cardExpirationDateField;
        
        private string cardActiveField;
        
        private int cardActiveEnumField;
        
        private System.Nullable<System.DateTime> cardExpirationDateDisplayField;
        
        /// <remarks/>
        public string CardType {
            get {
                return this.cardTypeField;
            }
            set {
                this.cardTypeField = value;
            }
        }
        
        /// <remarks/>
        public string CardId {
            get {
                return this.cardIdField;
            }
            set {
                this.cardIdField = value;
            }
        }
        
        /// <remarks/>
        public string CardNumber {
            get {
                return this.cardNumberField;
            }
            set {
                this.cardNumberField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CardExpirationDate {
            get {
                return this.cardExpirationDateField;
            }
            set {
                this.cardExpirationDateField = value;
            }
        }
        
        /// <remarks/>
        public string CardActive {
            get {
                return this.cardActiveField;
            }
            set {
                this.cardActiveField = value;
            }
        }
        
        /// <remarks/>
        public int CardActiveEnum {
            get {
                return this.cardActiveEnumField;
            }
            set {
                this.cardActiveEnumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> CardExpirationDateDisplay {
            get {
                return this.cardExpirationDateDisplayField;
            }
            set {
                this.cardExpirationDateDisplayField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class CardsHistoryModel {
        
        private System.Nullable<long> idField;
        
        private long cardIdField;
        
        private long vehicleIdField;
        
        private System.DateTime assignDateField;
        
        private System.DateTime unassignDateField;
        
        private long defaultField;
        
        private long cardTypeField;
        
        private string cardTypeNameField;
        
        private string cardNumberField;
        
        private long idOldField;
        
        private long vehicleIdOldField;
        
        private long cardIdOldField;
        
        private System.DateTime unassignDateOldField;
        
        private string cardNumberOldField;
        
        private string cardTypeNameOldField;
        
        private System.DateTime assignDateOldField;
        
        private long defaultOldField;
        
        private string vehicleNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public long CardId {
            get {
                return this.cardIdField;
            }
            set {
                this.cardIdField = value;
            }
        }
        
        /// <remarks/>
        public long VehicleId {
            get {
                return this.vehicleIdField;
            }
            set {
                this.vehicleIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime AssignDate {
            get {
                return this.assignDateField;
            }
            set {
                this.assignDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime UnassignDate {
            get {
                return this.unassignDateField;
            }
            set {
                this.unassignDateField = value;
            }
        }
        
        /// <remarks/>
        public long Default {
            get {
                return this.defaultField;
            }
            set {
                this.defaultField = value;
            }
        }
        
        /// <remarks/>
        public long CardType {
            get {
                return this.cardTypeField;
            }
            set {
                this.cardTypeField = value;
            }
        }
        
        /// <remarks/>
        public string CardTypeName {
            get {
                return this.cardTypeNameField;
            }
            set {
                this.cardTypeNameField = value;
            }
        }
        
        /// <remarks/>
        public string CardNumber {
            get {
                return this.cardNumberField;
            }
            set {
                this.cardNumberField = value;
            }
        }
        
        /// <remarks/>
        public long IdOld {
            get {
                return this.idOldField;
            }
            set {
                this.idOldField = value;
            }
        }
        
        /// <remarks/>
        public long VehicleIdOld {
            get {
                return this.vehicleIdOldField;
            }
            set {
                this.vehicleIdOldField = value;
            }
        }
        
        /// <remarks/>
        public long CardIdOld {
            get {
                return this.cardIdOldField;
            }
            set {
                this.cardIdOldField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime UnassignDateOld {
            get {
                return this.unassignDateOldField;
            }
            set {
                this.unassignDateOldField = value;
            }
        }
        
        /// <remarks/>
        public string CardNumberOld {
            get {
                return this.cardNumberOldField;
            }
            set {
                this.cardNumberOldField = value;
            }
        }
        
        /// <remarks/>
        public string CardTypeNameOld {
            get {
                return this.cardTypeNameOldField;
            }
            set {
                this.cardTypeNameOldField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime AssignDateOld {
            get {
                return this.assignDateOldField;
            }
            set {
                this.assignDateOldField = value;
            }
        }
        
        /// <remarks/>
        public long DefaultOld {
            get {
                return this.defaultOldField;
            }
            set {
                this.defaultOldField = value;
            }
        }
        
        /// <remarks/>
        public string VehicleName {
            get {
                return this.vehicleNameField;
            }
            set {
                this.vehicleNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class CardModel {
        
        private System.Nullable<long> cardPkField;
        
        private System.Nullable<long> userIdField;
        
        private long cardTypeField;
        
        private string cardNumberField;
        
        private System.DateTime expirationDateField;
        
        private int activeField;
        
        private int deletedField;
        
        private int vehicleIdField;
        
        private int defaultCardField;
        
        private System.DateTime cardAssignDateField;
        
        private System.DateTime cardUnassignDateField;
        
        private string historyIdField;
        
        private string noteField;
        
        private string cardStatusField;
        
        private string vehicleNameField;
        
        private string cardTypeNameField;
        
        private string assignedVehicleRegistrationField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> CardPk {
            get {
                return this.cardPkField;
            }
            set {
                this.cardPkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public long CardType {
            get {
                return this.cardTypeField;
            }
            set {
                this.cardTypeField = value;
            }
        }
        
        /// <remarks/>
        public string CardNumber {
            get {
                return this.cardNumberField;
            }
            set {
                this.cardNumberField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ExpirationDate {
            get {
                return this.expirationDateField;
            }
            set {
                this.expirationDateField = value;
            }
        }
        
        /// <remarks/>
        public int Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
        
        /// <remarks/>
        public int Deleted {
            get {
                return this.deletedField;
            }
            set {
                this.deletedField = value;
            }
        }
        
        /// <remarks/>
        public int VehicleId {
            get {
                return this.vehicleIdField;
            }
            set {
                this.vehicleIdField = value;
            }
        }
        
        /// <remarks/>
        public int DefaultCard {
            get {
                return this.defaultCardField;
            }
            set {
                this.defaultCardField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CardAssignDate {
            get {
                return this.cardAssignDateField;
            }
            set {
                this.cardAssignDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CardUnassignDate {
            get {
                return this.cardUnassignDateField;
            }
            set {
                this.cardUnassignDateField = value;
            }
        }
        
        /// <remarks/>
        public string HistoryId {
            get {
                return this.historyIdField;
            }
            set {
                this.historyIdField = value;
            }
        }
        
        /// <remarks/>
        public string Note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
            }
        }
        
        /// <remarks/>
        public string CardStatus {
            get {
                return this.cardStatusField;
            }
            set {
                this.cardStatusField = value;
            }
        }
        
        /// <remarks/>
        public string VehicleName {
            get {
                return this.vehicleNameField;
            }
            set {
                this.vehicleNameField = value;
            }
        }
        
        /// <remarks/>
        public string CardTypeName {
            get {
                return this.cardTypeNameField;
            }
            set {
                this.cardTypeNameField = value;
            }
        }
        
        /// <remarks/>
        public string AssignedVehicleRegistration {
            get {
                return this.assignedVehicleRegistrationField;
            }
            set {
                this.assignedVehicleRegistrationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class CardTypeModel {
        
        private System.Nullable<long> cardTypePkField;
        
        private string cardTypeNameField;
        
        private int deletedField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> CardTypePk {
            get {
                return this.cardTypePkField;
            }
            set {
                this.cardTypePkField = value;
            }
        }
        
        /// <remarks/>
        public string CardTypeName {
            get {
                return this.cardTypeNameField;
            }
            set {
                this.cardTypeNameField = value;
            }
        }
        
        /// <remarks/>
        public int Deleted {
            get {
                return this.deletedField;
            }
            set {
                this.deletedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class SectorModel {
        
        private System.Nullable<long> sectorPkField;
        
        private long divisionFkField;
        
        private string fullNameField;
        
        private int activeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> SectorPk {
            get {
                return this.sectorPkField;
            }
            set {
                this.sectorPkField = value;
            }
        }
        
        /// <remarks/>
        public long DivisionFk {
            get {
                return this.divisionFkField;
            }
            set {
                this.divisionFkField = value;
            }
        }
        
        /// <remarks/>
        public string FullName {
            get {
                return this.fullNameField;
            }
            set {
                this.fullNameField = value;
            }
        }
        
        /// <remarks/>
        public int Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class DivisionModel {
        
        private System.Nullable<long> divisionPkField;
        
        private string fullNameField;
        
        private int activeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> DivisionPk {
            get {
                return this.divisionPkField;
            }
            set {
                this.divisionPkField = value;
            }
        }
        
        /// <remarks/>
        public string FullName {
            get {
                return this.fullNameField;
            }
            set {
                this.fullNameField = value;
            }
        }
        
        /// <remarks/>
        public int Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class ServiceOrderPdfModel {
        
        private string serviceOrderNumberField;
        
        private string serviceOrdererField;
        
        private string vehicleManufacturerField;
        
        private string vehicleTypeField;
        
        private string vehicleGarageNumberField;
        
        private string vehicleRegistrationField;
        
        private System.Nullable<int> vehicleYearField;
        
        private System.Nullable<int> odometerDepartureField;
        
        private string vehicleChassisNoField;
        
        private string vehicleClassificationField;
        
        private string vehicleInventoryNumberField;
        
        private System.Nullable<int> pRLNumberField;
        
        private string malfunctionReportField;
        
        private string descriptionField;
        
        private string authorField;
        
        private string placeAndDateField;
        
        /// <remarks/>
        public string ServiceOrderNumber {
            get {
                return this.serviceOrderNumberField;
            }
            set {
                this.serviceOrderNumberField = value;
            }
        }
        
        /// <remarks/>
        public string ServiceOrderer {
            get {
                return this.serviceOrdererField;
            }
            set {
                this.serviceOrdererField = value;
            }
        }
        
        /// <remarks/>
        public string VehicleManufacturer {
            get {
                return this.vehicleManufacturerField;
            }
            set {
                this.vehicleManufacturerField = value;
            }
        }
        
        /// <remarks/>
        public string VehicleType {
            get {
                return this.vehicleTypeField;
            }
            set {
                this.vehicleTypeField = value;
            }
        }
        
        /// <remarks/>
        public string VehicleGarageNumber {
            get {
                return this.vehicleGarageNumberField;
            }
            set {
                this.vehicleGarageNumberField = value;
            }
        }
        
        /// <remarks/>
        public string VehicleRegistration {
            get {
                return this.vehicleRegistrationField;
            }
            set {
                this.vehicleRegistrationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> VehicleYear {
            get {
                return this.vehicleYearField;
            }
            set {
                this.vehicleYearField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> OdometerDeparture {
            get {
                return this.odometerDepartureField;
            }
            set {
                this.odometerDepartureField = value;
            }
        }
        
        /// <remarks/>
        public string VehicleChassisNo {
            get {
                return this.vehicleChassisNoField;
            }
            set {
                this.vehicleChassisNoField = value;
            }
        }
        
        /// <remarks/>
        public string VehicleClassification {
            get {
                return this.vehicleClassificationField;
            }
            set {
                this.vehicleClassificationField = value;
            }
        }
        
        /// <remarks/>
        public string VehicleInventoryNumber {
            get {
                return this.vehicleInventoryNumberField;
            }
            set {
                this.vehicleInventoryNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> PRLNumber {
            get {
                return this.pRLNumberField;
            }
            set {
                this.pRLNumberField = value;
            }
        }
        
        /// <remarks/>
        public string MalfunctionReport {
            get {
                return this.malfunctionReportField;
            }
            set {
                this.malfunctionReportField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Author {
            get {
                return this.authorField;
            }
            set {
                this.authorField = value;
            }
        }
        
        /// <remarks/>
        public string PlaceAndDate {
            get {
                return this.placeAndDateField;
            }
            set {
                this.placeAndDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class ServiceOrderModel {
        
        private System.Nullable<long> serviceOrderPkField;
        
        private string serviceOrderNumberField;
        
        private System.DateTime createDateField;
        
        private long vehicleIdField;
        
        private System.Nullable<int> typeField;
        
        private System.Nullable<long> serviceOrdererField;
        
        private System.Nullable<long> transportUserField;
        
        private long driverDepartureIdField;
        
        private System.Nullable<long> driverReturnIdField;
        
        private System.Nullable<System.DateTime> startDateField;
        
        private System.Nullable<System.DateTime> endDateField;
        
        private System.Nullable<long> servicerIdField;
        
        private string servicePlaceField;
        
        private int statusField;
        
        private System.Nullable<int> odometerDepartureField;
        
        private System.Nullable<int> odometerReturnField;
        
        private string descriptionField;
        
        private string noteField;
        
        private System.Nullable<double> totalAmountField;
        
        private System.Nullable<int> paidField;
        
        private System.Nullable<System.DateTime> paymentDateField;
        
        private long userIdField;
        
        private int deletedField;
        
        private string malfunctionReportField;
        
        private System.Nullable<long> prlIdField;
        
        private System.Nullable<long> issuedByField;
        
        private System.Nullable<long> updatedByField;
        
        private string servicerNameField;
        
        private string vehicleGarageNumberField;
        
        private string vehicleRegistrationField;
        
        private string driverDepartureFullNameField;
        
        private string driverReturnFullNameField;
        
        private string authorField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> ServiceOrderPk {
            get {
                return this.serviceOrderPkField;
            }
            set {
                this.serviceOrderPkField = value;
            }
        }
        
        /// <remarks/>
        public string ServiceOrderNumber {
            get {
                return this.serviceOrderNumberField;
            }
            set {
                this.serviceOrderNumberField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreateDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
        /// <remarks/>
        public long VehicleId {
            get {
                return this.vehicleIdField;
            }
            set {
                this.vehicleIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> ServiceOrderer {
            get {
                return this.serviceOrdererField;
            }
            set {
                this.serviceOrdererField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> TransportUser {
            get {
                return this.transportUserField;
            }
            set {
                this.transportUserField = value;
            }
        }
        
        /// <remarks/>
        public long DriverDepartureId {
            get {
                return this.driverDepartureIdField;
            }
            set {
                this.driverDepartureIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> DriverReturnId {
            get {
                return this.driverReturnIdField;
            }
            set {
                this.driverReturnIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> ServicerId {
            get {
                return this.servicerIdField;
            }
            set {
                this.servicerIdField = value;
            }
        }
        
        /// <remarks/>
        public string ServicePlace {
            get {
                return this.servicePlaceField;
            }
            set {
                this.servicePlaceField = value;
            }
        }
        
        /// <remarks/>
        public int Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> OdometerDeparture {
            get {
                return this.odometerDepartureField;
            }
            set {
                this.odometerDepartureField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> OdometerReturn {
            get {
                return this.odometerReturnField;
            }
            set {
                this.odometerReturnField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> TotalAmount {
            get {
                return this.totalAmountField;
            }
            set {
                this.totalAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Paid {
            get {
                return this.paidField;
            }
            set {
                this.paidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> PaymentDate {
            get {
                return this.paymentDateField;
            }
            set {
                this.paymentDateField = value;
            }
        }
        
        /// <remarks/>
        public long UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public int Deleted {
            get {
                return this.deletedField;
            }
            set {
                this.deletedField = value;
            }
        }
        
        /// <remarks/>
        public string MalfunctionReport {
            get {
                return this.malfunctionReportField;
            }
            set {
                this.malfunctionReportField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> PrlId {
            get {
                return this.prlIdField;
            }
            set {
                this.prlIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> IssuedBy {
            get {
                return this.issuedByField;
            }
            set {
                this.issuedByField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> UpdatedBy {
            get {
                return this.updatedByField;
            }
            set {
                this.updatedByField = value;
            }
        }
        
        /// <remarks/>
        public string ServicerName {
            get {
                return this.servicerNameField;
            }
            set {
                this.servicerNameField = value;
            }
        }
        
        /// <remarks/>
        public string VehicleGarageNumber {
            get {
                return this.vehicleGarageNumberField;
            }
            set {
                this.vehicleGarageNumberField = value;
            }
        }
        
        /// <remarks/>
        public string VehicleRegistration {
            get {
                return this.vehicleRegistrationField;
            }
            set {
                this.vehicleRegistrationField = value;
            }
        }
        
        /// <remarks/>
        public string DriverDepartureFullName {
            get {
                return this.driverDepartureFullNameField;
            }
            set {
                this.driverDepartureFullNameField = value;
            }
        }
        
        /// <remarks/>
        public string DriverReturnFullName {
            get {
                return this.driverReturnFullNameField;
            }
            set {
                this.driverReturnFullNameField = value;
            }
        }
        
        /// <remarks/>
        public string Author {
            get {
                return this.authorField;
            }
            set {
                this.authorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class ServiceOrderFilterModel {
        
        private long serviceOrderIdField;
        
        private string serviceOrderNumberField;
        
        private System.DateTime serviceDateField;
        
        private int typeEnumField;
        
        private string typeField;
        
        private int statusEnumField;
        
        private string statusField;
        
        private System.DateTime serviceStartDateField;
        
        private System.DateTime serviceEndDateField;
        
        private string servicerNameField;
        
        private string vehicleRegistrationField;
        
        private string paidField;
        
        private int paidEnumField;
        
        private string authorField;
        
        /// <remarks/>
        public long ServiceOrderId {
            get {
                return this.serviceOrderIdField;
            }
            set {
                this.serviceOrderIdField = value;
            }
        }
        
        /// <remarks/>
        public string ServiceOrderNumber {
            get {
                return this.serviceOrderNumberField;
            }
            set {
                this.serviceOrderNumberField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ServiceDate {
            get {
                return this.serviceDateField;
            }
            set {
                this.serviceDateField = value;
            }
        }
        
        /// <remarks/>
        public int TypeEnum {
            get {
                return this.typeEnumField;
            }
            set {
                this.typeEnumField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public int StatusEnum {
            get {
                return this.statusEnumField;
            }
            set {
                this.statusEnumField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ServiceStartDate {
            get {
                return this.serviceStartDateField;
            }
            set {
                this.serviceStartDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ServiceEndDate {
            get {
                return this.serviceEndDateField;
            }
            set {
                this.serviceEndDateField = value;
            }
        }
        
        /// <remarks/>
        public string ServicerName {
            get {
                return this.servicerNameField;
            }
            set {
                this.servicerNameField = value;
            }
        }
        
        /// <remarks/>
        public string VehicleRegistration {
            get {
                return this.vehicleRegistrationField;
            }
            set {
                this.vehicleRegistrationField = value;
            }
        }
        
        /// <remarks/>
        public string Paid {
            get {
                return this.paidField;
            }
            set {
                this.paidField = value;
            }
        }
        
        /// <remarks/>
        public int PaidEnum {
            get {
                return this.paidEnumField;
            }
            set {
                this.paidEnumField = value;
            }
        }
        
        /// <remarks/>
        public string Author {
            get {
                return this.authorField;
            }
            set {
                this.authorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VehicleParams))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VehicleListParams))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DriverParams))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ExpenseDamageParams))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DamageParams))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CompanyParams))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ExpenseCatalogParams))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ExpenseGeneratorParams))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ExpenseParams))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TireParams))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(QuickInfoServiceParams))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(QuickInfoWriteOffParams))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(QuickInfoRegistrationParams))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LocationParams))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PrlParams))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RelationParams))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ReservationParams))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CardManagementParams))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ServiceOrderParams))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class FilterParamsModel {
        
        private bool isCountQueryField;
        
        private int maximumRowsField;
        
        private int startRowIndexField;
        
        private string sortByField;
        
        /// <remarks/>
        public bool isCountQuery {
            get {
                return this.isCountQueryField;
            }
            set {
                this.isCountQueryField = value;
            }
        }
        
        /// <remarks/>
        public int MaximumRows {
            get {
                return this.maximumRowsField;
            }
            set {
                this.maximumRowsField = value;
            }
        }
        
        /// <remarks/>
        public int StartRowIndex {
            get {
                return this.startRowIndexField;
            }
            set {
                this.startRowIndexField = value;
            }
        }
        
        /// <remarks/>
        public string SortBy {
            get {
                return this.sortByField;
            }
            set {
                this.sortByField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class VehicleParams : FilterParamsModel {
        
        private long userIdField;
        
        private long childUserIdField;
        
        private string vehicleNameField;
        
        private string registrationField;
        
        private long typeField;
        
        private string manufacturerField;
        
        private string modelField;
        
        private long vehicleGroupIdField;
        
        private int poolField;
        
        private int vehicleStatusField;
        
        private string classificationField;
        
        private int regionField;
        
        private int areaField;
        
        private string garageNumberField;
        
        private string fullVehicleNameField;
        
        /// <remarks/>
        public long UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public long ChildUserId {
            get {
                return this.childUserIdField;
            }
            set {
                this.childUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string VehicleName {
            get {
                return this.vehicleNameField;
            }
            set {
                this.vehicleNameField = value;
            }
        }
        
        /// <remarks/>
        public string Registration {
            get {
                return this.registrationField;
            }
            set {
                this.registrationField = value;
            }
        }
        
        /// <remarks/>
        public long Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string Manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        public string Model {
            get {
                return this.modelField;
            }
            set {
                this.modelField = value;
            }
        }
        
        /// <remarks/>
        public long VehicleGroupId {
            get {
                return this.vehicleGroupIdField;
            }
            set {
                this.vehicleGroupIdField = value;
            }
        }
        
        /// <remarks/>
        public int Pool {
            get {
                return this.poolField;
            }
            set {
                this.poolField = value;
            }
        }
        
        /// <remarks/>
        public int VehicleStatus {
            get {
                return this.vehicleStatusField;
            }
            set {
                this.vehicleStatusField = value;
            }
        }
        
        /// <remarks/>
        public string Classification {
            get {
                return this.classificationField;
            }
            set {
                this.classificationField = value;
            }
        }
        
        /// <remarks/>
        public int Region {
            get {
                return this.regionField;
            }
            set {
                this.regionField = value;
            }
        }
        
        /// <remarks/>
        public int Area {
            get {
                return this.areaField;
            }
            set {
                this.areaField = value;
            }
        }
        
        /// <remarks/>
        public string GarageNumber {
            get {
                return this.garageNumberField;
            }
            set {
                this.garageNumberField = value;
            }
        }
        
        /// <remarks/>
        public string FullVehicleName {
            get {
                return this.fullVehicleNameField;
            }
            set {
                this.fullVehicleNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class VehicleListParams : FilterParamsModel {
        
        private long userIdField;
        
        private long childUserIdField;
        
        private string vehicleNameField;
        
        private string registrationField;
        
        private string manufacturerField;
        
        private string modelField;
        
        private long typeField;
        
        private long vehicleGroupIdField;
        
        private bool isVehicleListField;
        
        /// <remarks/>
        public long UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public long ChildUserId {
            get {
                return this.childUserIdField;
            }
            set {
                this.childUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string VehicleName {
            get {
                return this.vehicleNameField;
            }
            set {
                this.vehicleNameField = value;
            }
        }
        
        /// <remarks/>
        public string Registration {
            get {
                return this.registrationField;
            }
            set {
                this.registrationField = value;
            }
        }
        
        /// <remarks/>
        public string Manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        public string Model {
            get {
                return this.modelField;
            }
            set {
                this.modelField = value;
            }
        }
        
        /// <remarks/>
        public long Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public long VehicleGroupId {
            get {
                return this.vehicleGroupIdField;
            }
            set {
                this.vehicleGroupIdField = value;
            }
        }
        
        /// <remarks/>
        public bool IsVehicleList {
            get {
                return this.isVehicleListField;
            }
            set {
                this.isVehicleListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class DriverParams : FilterParamsModel {
        
        private long userIdField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string placeField;
        
        /// <remarks/>
        public long UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string Place {
            get {
                return this.placeField;
            }
            set {
                this.placeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class ExpenseDamageParams : FilterParamsModel {
        
        private long userIdField;
        
        private long childUserIdField;
        
        private long expenseIdField;
        
        private bool isDamageTabVisibleField;
        
        /// <remarks/>
        public long UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public long ChildUserId {
            get {
                return this.childUserIdField;
            }
            set {
                this.childUserIdField = value;
            }
        }
        
        /// <remarks/>
        public long ExpenseId {
            get {
                return this.expenseIdField;
            }
            set {
                this.expenseIdField = value;
            }
        }
        
        /// <remarks/>
        public bool IsDamageTabVisible {
            get {
                return this.isDamageTabVisibleField;
            }
            set {
                this.isDamageTabVisibleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class DamageParams : FilterParamsModel {
        
        private long userIdField;
        
        private long childUserIdField;
        
        private string vehicleNameField;
        
        private string registrationField;
        
        private int vehicleTypeField;
        
        private int repairStateField;
        
        private int fileStatusField;
        
        private long driverIdField;
        
        /// <remarks/>
        public long UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public long ChildUserId {
            get {
                return this.childUserIdField;
            }
            set {
                this.childUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string VehicleName {
            get {
                return this.vehicleNameField;
            }
            set {
                this.vehicleNameField = value;
            }
        }
        
        /// <remarks/>
        public string Registration {
            get {
                return this.registrationField;
            }
            set {
                this.registrationField = value;
            }
        }
        
        /// <remarks/>
        public int VehicleType {
            get {
                return this.vehicleTypeField;
            }
            set {
                this.vehicleTypeField = value;
            }
        }
        
        /// <remarks/>
        public int RepairState {
            get {
                return this.repairStateField;
            }
            set {
                this.repairStateField = value;
            }
        }
        
        /// <remarks/>
        public int FileStatus {
            get {
                return this.fileStatusField;
            }
            set {
                this.fileStatusField = value;
            }
        }
        
        /// <remarks/>
        public long DriverId {
            get {
                return this.driverIdField;
            }
            set {
                this.driverIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class CompanyParams : FilterParamsModel {
        
        private long userIdField;
        
        private string nameField;
        
        private string addressField;
        
        private string placeField;
        
        private string postalCodeField;
        
        /// <remarks/>
        public long UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public string Place {
            get {
                return this.placeField;
            }
            set {
                this.placeField = value;
            }
        }
        
        /// <remarks/>
        public string PostalCode {
            get {
                return this.postalCodeField;
            }
            set {
                this.postalCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class ExpenseCatalogParams : FilterParamsModel {
        
        private long userIdField;
        
        private string nameField;
        
        /// <remarks/>
        public long UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class ExpenseGeneratorParams : FilterParamsModel {
        
        private long userIdField;
        
        private string nameField;
        
        private int isShownField;
        
        /// <remarks/>
        public long UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int IsShown {
            get {
                return this.isShownField;
            }
            set {
                this.isShownField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class ExpenseParams : FilterParamsModel {
        
        private long userIdField;
        
        private long childUserIdField;
        
        private long expenseCatalogCodeField;
        
        private long vehicleIdField;
        
        private long vehicleGroupIdField;
        
        private long driverIdField;
        
        private System.Nullable<System.DateTime> dateFromField;
        
        private System.Nullable<System.DateTime> dateToField;
        
        private string valueFromField;
        
        private string valueToField;
        
        private long companyIdField;
        
        private long classificationField;
        
        private string billNumberField;
        
        /// <remarks/>
        public long UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public long ChildUserId {
            get {
                return this.childUserIdField;
            }
            set {
                this.childUserIdField = value;
            }
        }
        
        /// <remarks/>
        public long ExpenseCatalogCode {
            get {
                return this.expenseCatalogCodeField;
            }
            set {
                this.expenseCatalogCodeField = value;
            }
        }
        
        /// <remarks/>
        public long VehicleId {
            get {
                return this.vehicleIdField;
            }
            set {
                this.vehicleIdField = value;
            }
        }
        
        /// <remarks/>
        public long VehicleGroupId {
            get {
                return this.vehicleGroupIdField;
            }
            set {
                this.vehicleGroupIdField = value;
            }
        }
        
        /// <remarks/>
        public long DriverId {
            get {
                return this.driverIdField;
            }
            set {
                this.driverIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> DateFrom {
            get {
                return this.dateFromField;
            }
            set {
                this.dateFromField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> DateTo {
            get {
                return this.dateToField;
            }
            set {
                this.dateToField = value;
            }
        }
        
        /// <remarks/>
        public string ValueFrom {
            get {
                return this.valueFromField;
            }
            set {
                this.valueFromField = value;
            }
        }
        
        /// <remarks/>
        public string ValueTo {
            get {
                return this.valueToField;
            }
            set {
                this.valueToField = value;
            }
        }
        
        /// <remarks/>
        public long CompanyId {
            get {
                return this.companyIdField;
            }
            set {
                this.companyIdField = value;
            }
        }
        
        /// <remarks/>
        public long Classification {
            get {
                return this.classificationField;
            }
            set {
                this.classificationField = value;
            }
        }
        
        /// <remarks/>
        public string BillNumber {
            get {
                return this.billNumberField;
            }
            set {
                this.billNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class TireParams : FilterParamsModel {
        
        private long userIdField;
        
        private long vehicleIdField;
        
        private int replacementCountField;
        
        private long classificationField;
        
        private int positionField;
        
        private int quantityField;
        
        private long placementOdometerField;
        
        private System.DateTime placementDateField;
        
        /// <remarks/>
        public long UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public long VehicleId {
            get {
                return this.vehicleIdField;
            }
            set {
                this.vehicleIdField = value;
            }
        }
        
        /// <remarks/>
        public int ReplacementCount {
            get {
                return this.replacementCountField;
            }
            set {
                this.replacementCountField = value;
            }
        }
        
        /// <remarks/>
        public long Classification {
            get {
                return this.classificationField;
            }
            set {
                this.classificationField = value;
            }
        }
        
        /// <remarks/>
        public int Position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
            }
        }
        
        /// <remarks/>
        public int Quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
        
        /// <remarks/>
        public long PlacementOdometer {
            get {
                return this.placementOdometerField;
            }
            set {
                this.placementOdometerField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime PlacementDate {
            get {
                return this.placementDateField;
            }
            set {
                this.placementDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class QuickInfoServiceParams : FilterParamsModel {
        
        private long userIdField;
        
        private int odometerWarningKilometersField;
        
        /// <remarks/>
        public long UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public int OdometerWarningKilometers {
            get {
                return this.odometerWarningKilometersField;
            }
            set {
                this.odometerWarningKilometersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class QuickInfoWriteOffParams : FilterParamsModel {
        
        private long userIdField;
        
        private int writeOffValidDaysField;
        
        private int writeOffWarningDaysField;
        
        /// <remarks/>
        public long UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public int WriteOffValidDays {
            get {
                return this.writeOffValidDaysField;
            }
            set {
                this.writeOffValidDaysField = value;
            }
        }
        
        /// <remarks/>
        public int WriteOffWarningDays {
            get {
                return this.writeOffWarningDaysField;
            }
            set {
                this.writeOffWarningDaysField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class QuickInfoRegistrationParams : FilterParamsModel {
        
        private long userIdField;
        
        private int registrationValidDaysField;
        
        private int registrationDaysBeforeWarningField;
        
        /// <remarks/>
        public long UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public int RegistrationValidDays {
            get {
                return this.registrationValidDaysField;
            }
            set {
                this.registrationValidDaysField = value;
            }
        }
        
        /// <remarks/>
        public int RegistrationDaysBeforeWarning {
            get {
                return this.registrationDaysBeforeWarningField;
            }
            set {
                this.registrationDaysBeforeWarningField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class LocationParams : FilterParamsModel {
        
        private long userIdField;
        
        private string nameField;
        
        private string codeField;
        
        private int typeField;
        
        /// <remarks/>
        public long UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public int Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class PrlParams : FilterParamsModel {
        
        private long userIdField;
        
        private long childUserIdField;
        
        private long prlIdField;
        
        private System.Nullable<System.DateTime> dateFromField;
        
        private System.Nullable<System.DateTime> dateToField;
        
        private System.Nullable<long> vehicleIdField;
        
        private System.Nullable<long> vehicleGroupIdField;
        
        private System.Nullable<long> driverIdField;
        
        private System.Nullable<long> driverGroupIdField;
        
        private string statusField;
        
        private string typeField;
        
        private System.Nullable<long> authorIdField;
        
        private System.Nullable<long> relationIdField;
        
        private bool isExportField;
        
        private System.Nullable<long> limitField;
        
        /// <remarks/>
        public long UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public long ChildUserId {
            get {
                return this.childUserIdField;
            }
            set {
                this.childUserIdField = value;
            }
        }
        
        /// <remarks/>
        public long PrlId {
            get {
                return this.prlIdField;
            }
            set {
                this.prlIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> DateFrom {
            get {
                return this.dateFromField;
            }
            set {
                this.dateFromField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> DateTo {
            get {
                return this.dateToField;
            }
            set {
                this.dateToField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> VehicleId {
            get {
                return this.vehicleIdField;
            }
            set {
                this.vehicleIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> VehicleGroupId {
            get {
                return this.vehicleGroupIdField;
            }
            set {
                this.vehicleGroupIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> DriverId {
            get {
                return this.driverIdField;
            }
            set {
                this.driverIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> DriverGroupId {
            get {
                return this.driverGroupIdField;
            }
            set {
                this.driverGroupIdField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> AuthorId {
            get {
                return this.authorIdField;
            }
            set {
                this.authorIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> RelationId {
            get {
                return this.relationIdField;
            }
            set {
                this.relationIdField = value;
            }
        }
        
        /// <remarks/>
        public bool IsExport {
            get {
                return this.isExportField;
            }
            set {
                this.isExportField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> Limit {
            get {
                return this.limitField;
            }
            set {
                this.limitField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class RelationParams : FilterParamsModel {
        
        private long userIdField;
        
        private string nameField;
        
        private string codeField;
        
        private int transportTypeField;
        
        private int meansOfTransportField;
        
        private int transporterField;
        
        /// <remarks/>
        public long UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public int TransportType {
            get {
                return this.transportTypeField;
            }
            set {
                this.transportTypeField = value;
            }
        }
        
        /// <remarks/>
        public int MeansOfTransport {
            get {
                return this.meansOfTransportField;
            }
            set {
                this.meansOfTransportField = value;
            }
        }
        
        /// <remarks/>
        public int Transporter {
            get {
                return this.transporterField;
            }
            set {
                this.transporterField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class ReservationParams : FilterParamsModel {
        
        private long userIdField;
        
        private long childUserIdField;
        
        private System.DateTime startDateField;
        
        private System.DateTime endDateField;
        
        private string accountNumberField;
        
        private int vehicleTypeField;
        
        private long startLocationField;
        
        private string destinationLocationField;
        
        private long vehicleIdField;
        
        private long driverIdField;
        
        private string statusField;
        
        /// <remarks/>
        public long UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public long ChildUserId {
            get {
                return this.childUserIdField;
            }
            set {
                this.childUserIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime EndDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        public string AccountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
            }
        }
        
        /// <remarks/>
        public int VehicleType {
            get {
                return this.vehicleTypeField;
            }
            set {
                this.vehicleTypeField = value;
            }
        }
        
        /// <remarks/>
        public long StartLocation {
            get {
                return this.startLocationField;
            }
            set {
                this.startLocationField = value;
            }
        }
        
        /// <remarks/>
        public string DestinationLocation {
            get {
                return this.destinationLocationField;
            }
            set {
                this.destinationLocationField = value;
            }
        }
        
        /// <remarks/>
        public long VehicleId {
            get {
                return this.vehicleIdField;
            }
            set {
                this.vehicleIdField = value;
            }
        }
        
        /// <remarks/>
        public long DriverId {
            get {
                return this.driverIdField;
            }
            set {
                this.driverIdField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class CardManagementParams : FilterParamsModel {
        
        private long userIdField;
        
        private long cardIdField;
        
        private string cardNumberField;
        
        private int cardTypeField;
        
        private System.DateTime cardExpirationDateField;
        
        private int cardActiveField;
        
        private System.DateTime cardAssignDateFromField;
        
        private System.DateTime cardAssignDateToField;
        
        private System.DateTime cardUnassignDateFromField;
        
        private System.DateTime cardUnassignDateToField;
        
        private int vehicleIdField;
        
        private System.DateTime cardAssignDateField;
        
        private System.DateTime cardUnassignDateField;
        
        private string cardTypeNameField;
        
        private int defaultCardField;
        
        /// <remarks/>
        public long UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public long CardId {
            get {
                return this.cardIdField;
            }
            set {
                this.cardIdField = value;
            }
        }
        
        /// <remarks/>
        public string CardNumber {
            get {
                return this.cardNumberField;
            }
            set {
                this.cardNumberField = value;
            }
        }
        
        /// <remarks/>
        public int CardType {
            get {
                return this.cardTypeField;
            }
            set {
                this.cardTypeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CardExpirationDate {
            get {
                return this.cardExpirationDateField;
            }
            set {
                this.cardExpirationDateField = value;
            }
        }
        
        /// <remarks/>
        public int CardActive {
            get {
                return this.cardActiveField;
            }
            set {
                this.cardActiveField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CardAssignDateFrom {
            get {
                return this.cardAssignDateFromField;
            }
            set {
                this.cardAssignDateFromField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CardAssignDateTo {
            get {
                return this.cardAssignDateToField;
            }
            set {
                this.cardAssignDateToField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CardUnassignDateFrom {
            get {
                return this.cardUnassignDateFromField;
            }
            set {
                this.cardUnassignDateFromField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CardUnassignDateTo {
            get {
                return this.cardUnassignDateToField;
            }
            set {
                this.cardUnassignDateToField = value;
            }
        }
        
        /// <remarks/>
        public int VehicleId {
            get {
                return this.vehicleIdField;
            }
            set {
                this.vehicleIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CardAssignDate {
            get {
                return this.cardAssignDateField;
            }
            set {
                this.cardAssignDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CardUnassignDate {
            get {
                return this.cardUnassignDateField;
            }
            set {
                this.cardUnassignDateField = value;
            }
        }
        
        /// <remarks/>
        public string CardTypeName {
            get {
                return this.cardTypeNameField;
            }
            set {
                this.cardTypeNameField = value;
            }
        }
        
        /// <remarks/>
        public int DefaultCard {
            get {
                return this.defaultCardField;
            }
            set {
                this.defaultCardField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class ServiceOrderParams : FilterParamsModel {
        
        private long userIdField;
        
        private string serviceOrderNumberField;
        
        private int serviceTypeField;
        
        private long vehicleIdField;
        
        private long servicerIdField;
        
        private System.DateTime createDateFromField;
        
        private System.DateTime createDateToField;
        
        private System.DateTime serviceStartDateFromField;
        
        private System.DateTime serviceStartDateToField;
        
        private System.DateTime serviceEndDateFromField;
        
        private System.DateTime serviceEndDateToField;
        
        private string serviceStatusField;
        
        private int servicePaidField;
        
        private string classificationField;
        
        private int regionField;
        
        private int areaField;
        
        private bool sortByInternalDriverField;
        
        private System.Nullable<long> authorField;
        
        /// <remarks/>
        public long UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public string ServiceOrderNumber {
            get {
                return this.serviceOrderNumberField;
            }
            set {
                this.serviceOrderNumberField = value;
            }
        }
        
        /// <remarks/>
        public int ServiceType {
            get {
                return this.serviceTypeField;
            }
            set {
                this.serviceTypeField = value;
            }
        }
        
        /// <remarks/>
        public long VehicleId {
            get {
                return this.vehicleIdField;
            }
            set {
                this.vehicleIdField = value;
            }
        }
        
        /// <remarks/>
        public long ServicerId {
            get {
                return this.servicerIdField;
            }
            set {
                this.servicerIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreateDateFrom {
            get {
                return this.createDateFromField;
            }
            set {
                this.createDateFromField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreateDateTo {
            get {
                return this.createDateToField;
            }
            set {
                this.createDateToField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ServiceStartDateFrom {
            get {
                return this.serviceStartDateFromField;
            }
            set {
                this.serviceStartDateFromField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ServiceStartDateTo {
            get {
                return this.serviceStartDateToField;
            }
            set {
                this.serviceStartDateToField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ServiceEndDateFrom {
            get {
                return this.serviceEndDateFromField;
            }
            set {
                this.serviceEndDateFromField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ServiceEndDateTo {
            get {
                return this.serviceEndDateToField;
            }
            set {
                this.serviceEndDateToField = value;
            }
        }
        
        /// <remarks/>
        public string ServiceStatus {
            get {
                return this.serviceStatusField;
            }
            set {
                this.serviceStatusField = value;
            }
        }
        
        /// <remarks/>
        public int ServicePaid {
            get {
                return this.servicePaidField;
            }
            set {
                this.servicePaidField = value;
            }
        }
        
        /// <remarks/>
        public string Classification {
            get {
                return this.classificationField;
            }
            set {
                this.classificationField = value;
            }
        }
        
        /// <remarks/>
        public int Region {
            get {
                return this.regionField;
            }
            set {
                this.regionField = value;
            }
        }
        
        /// <remarks/>
        public int Area {
            get {
                return this.areaField;
            }
            set {
                this.areaField = value;
            }
        }
        
        /// <remarks/>
        public bool SortByInternalDriver {
            get {
                return this.sortByInternalDriverField;
            }
            set {
                this.sortByInternalDriverField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> Author {
            get {
                return this.authorField;
            }
            set {
                this.authorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class UiExpenseGeneratorModel {
        
        private string expenseNameField;
        
        private System.Nullable<long> expenseMeasureUnitField;
        
        /// <remarks/>
        public string ExpenseName {
            get {
                return this.expenseNameField;
            }
            set {
                this.expenseNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> ExpenseMeasureUnit {
            get {
                return this.expenseMeasureUnitField;
            }
            set {
                this.expenseMeasureUnitField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public partial class ExpenseModel {
        
        private UiExpenseGeneratorModel expGenField;
        
        private string vehicleNameField;
        
        private string vehicleRegistrationField;
        
        private string companyNameField;
        
        private System.Nullable<long> expensePkField;
        
        private System.Nullable<long> expenseGeneratorFkField;
        
        private System.Nullable<long> userIdField;
        
        private System.Nullable<long> vehicleFkField;
        
        private System.Nullable<long> companyFkField;
        
        private System.Nullable<long> expCatCodeField;
        
        private System.Nullable<double> expQuantityField;
        
        private string expDescriptionField;
        
        private System.DateTime createdDtField;
        
        private System.Nullable<double> valueBeforeVatField;
        
        private System.Nullable<double> valueVatOnlyField;
        
        private System.Nullable<double> valueTotalField;
        
        private System.Nullable<double> vatPctField;
        
        private System.Nullable<double> unitPriceRetailField;
        
        private System.Nullable<double> unitPriceWhsaleField;
        
        private System.Nullable<long> paymentMethodField;
        
        private System.Nullable<long> payTypeField;
        
        private string creditCardNrField;
        
        private string accountNrField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private System.Nullable<long> lastChangeMileageField;
        
        private System.Nullable<long> tireBrandField;
        
        private string tireHotelField;
        
        private System.Nullable<System.DateTime> tireNextChangeDtField;
        
        private System.Nullable<long> tireHeightField;
        
        private System.Nullable<long> tireDiameterField;
        
        private System.Nullable<long> tireWidthField;
        
        private System.Nullable<long> tireTypeField;
        
        private System.Nullable<long> tireChangeReasonField;
        
        private System.Nullable<long> tireKmField;
        
        private System.Nullable<long> tireKm_MaxField;
        
        private System.Nullable<System.DateTime> tireChangeDtField;
        
        private System.Nullable<long> fuelCompanyField;
        
        private System.Nullable<long> fuelTypeField;
        
        private string tfEntryLocationField;
        
        private System.Nullable<System.DateTime> tfEntryDtField;
        
        private string tfExitLocationField;
        
        private System.Nullable<System.DateTime> tfExitDtField;
        
        private string tfCarrierField;
        
        private string insurancePolicyNrField;
        
        private System.Nullable<System.DateTime> insurancePolicyDtField;
        
        private System.Nullable<System.DateTime> insuranceValidFromDtField;
        
        private System.Nullable<System.DateTime> insuranceValidToDtField;
        
        private System.Nullable<double> insuranceBonusPctField;
        
        private System.Nullable<long> custdef1IdField;
        
        private string custdef1ValueField;
        
        private System.Nullable<long> custdef2IdField;
        
        private string custdef2ValueField;
        
        private System.Nullable<long> custdef3IdField;
        
        private string custdef3ValueField;
        
        private System.Nullable<long> custdef4IdField;
        
        private string custdef4ValueField;
        
        private System.Nullable<System.DateTime> sysinsDtField;
        
        private System.Nullable<long> driverIdField;
        
        private System.Nullable<long> vehicleGroupFkField;
        
        private System.Nullable<long> washTypeField;
        
        private System.Nullable<long> insuranceRiskField;
        
        private System.Nullable<long> odometerField;
        
        private System.Nullable<long> prlIdField;
        
        private string receiptNumberField;
        
        private System.Nullable<int> serviceTypeField;
        
        private string noteField;
        
        private string manufacturerField;
        
        private string typeField;
        
        private string titleField;
        
        private System.Nullable<double> unitPriceField;
        
        private string brandField;
        
        private string objectSizeField;
        
        private string offenceDescriptionField;
        
        private string offenderAnalysisField;
        
        private string complaintsField;
        
        private System.Nullable<int> lockedField;
        
        private string subtitleField;
        
        private System.Nullable<long> vehicleActiveField;
        
        /// <remarks/>
        public UiExpenseGeneratorModel ExpGen {
            get {
                return this.expGenField;
            }
            set {
                this.expGenField = value;
            }
        }
        
        /// <remarks/>
        public string VehicleName {
            get {
                return this.vehicleNameField;
            }
            set {
                this.vehicleNameField = value;
            }
        }
        
        /// <remarks/>
        public string VehicleRegistration {
            get {
                return this.vehicleRegistrationField;
            }
            set {
                this.vehicleRegistrationField = value;
            }
        }
        
        /// <remarks/>
        public string CompanyName {
            get {
                return this.companyNameField;
            }
            set {
                this.companyNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> ExpensePk {
            get {
                return this.expensePkField;
            }
            set {
                this.expensePkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> ExpenseGeneratorFk {
            get {
                return this.expenseGeneratorFkField;
            }
            set {
                this.expenseGeneratorFkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> VehicleFk {
            get {
                return this.vehicleFkField;
            }
            set {
                this.vehicleFkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> CompanyFk {
            get {
                return this.companyFkField;
            }
            set {
                this.companyFkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> ExpCatCode {
            get {
                return this.expCatCodeField;
            }
            set {
                this.expCatCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> ExpQuantity {
            get {
                return this.expQuantityField;
            }
            set {
                this.expQuantityField = value;
            }
        }
        
        /// <remarks/>
        public string ExpDescription {
            get {
                return this.expDescriptionField;
            }
            set {
                this.expDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreatedDt {
            get {
                return this.createdDtField;
            }
            set {
                this.createdDtField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> ValueBeforeVat {
            get {
                return this.valueBeforeVatField;
            }
            set {
                this.valueBeforeVatField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> ValueVatOnly {
            get {
                return this.valueVatOnlyField;
            }
            set {
                this.valueVatOnlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> ValueTotal {
            get {
                return this.valueTotalField;
            }
            set {
                this.valueTotalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> VatPct {
            get {
                return this.vatPctField;
            }
            set {
                this.vatPctField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> UnitPriceRetail {
            get {
                return this.unitPriceRetailField;
            }
            set {
                this.unitPriceRetailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> UnitPriceWhsale {
            get {
                return this.unitPriceWhsaleField;
            }
            set {
                this.unitPriceWhsaleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> PaymentMethod {
            get {
                return this.paymentMethodField;
            }
            set {
                this.paymentMethodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> PayType {
            get {
                return this.payTypeField;
            }
            set {
                this.payTypeField = value;
            }
        }
        
        /// <remarks/>
        public string CreditCardNr {
            get {
                return this.creditCardNrField;
            }
            set {
                this.creditCardNrField = value;
            }
        }
        
        /// <remarks/>
        public string AccountNr {
            get {
                return this.accountNrField;
            }
            set {
                this.accountNrField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> LastChangeMileage {
            get {
                return this.lastChangeMileageField;
            }
            set {
                this.lastChangeMileageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> TireBrand {
            get {
                return this.tireBrandField;
            }
            set {
                this.tireBrandField = value;
            }
        }
        
        /// <remarks/>
        public string TireHotel {
            get {
                return this.tireHotelField;
            }
            set {
                this.tireHotelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> TireNextChangeDt {
            get {
                return this.tireNextChangeDtField;
            }
            set {
                this.tireNextChangeDtField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> TireHeight {
            get {
                return this.tireHeightField;
            }
            set {
                this.tireHeightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> TireDiameter {
            get {
                return this.tireDiameterField;
            }
            set {
                this.tireDiameterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> TireWidth {
            get {
                return this.tireWidthField;
            }
            set {
                this.tireWidthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> TireType {
            get {
                return this.tireTypeField;
            }
            set {
                this.tireTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> TireChangeReason {
            get {
                return this.tireChangeReasonField;
            }
            set {
                this.tireChangeReasonField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> TireKm {
            get {
                return this.tireKmField;
            }
            set {
                this.tireKmField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> TireKm_Max {
            get {
                return this.tireKm_MaxField;
            }
            set {
                this.tireKm_MaxField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> TireChangeDt {
            get {
                return this.tireChangeDtField;
            }
            set {
                this.tireChangeDtField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> FuelCompany {
            get {
                return this.fuelCompanyField;
            }
            set {
                this.fuelCompanyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> FuelType {
            get {
                return this.fuelTypeField;
            }
            set {
                this.fuelTypeField = value;
            }
        }
        
        /// <remarks/>
        public string TfEntryLocation {
            get {
                return this.tfEntryLocationField;
            }
            set {
                this.tfEntryLocationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> TfEntryDt {
            get {
                return this.tfEntryDtField;
            }
            set {
                this.tfEntryDtField = value;
            }
        }
        
        /// <remarks/>
        public string TfExitLocation {
            get {
                return this.tfExitLocationField;
            }
            set {
                this.tfExitLocationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> TfExitDt {
            get {
                return this.tfExitDtField;
            }
            set {
                this.tfExitDtField = value;
            }
        }
        
        /// <remarks/>
        public string TfCarrier {
            get {
                return this.tfCarrierField;
            }
            set {
                this.tfCarrierField = value;
            }
        }
        
        /// <remarks/>
        public string InsurancePolicyNr {
            get {
                return this.insurancePolicyNrField;
            }
            set {
                this.insurancePolicyNrField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> InsurancePolicyDt {
            get {
                return this.insurancePolicyDtField;
            }
            set {
                this.insurancePolicyDtField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> InsuranceValidFromDt {
            get {
                return this.insuranceValidFromDtField;
            }
            set {
                this.insuranceValidFromDtField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> InsuranceValidToDt {
            get {
                return this.insuranceValidToDtField;
            }
            set {
                this.insuranceValidToDtField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> InsuranceBonusPct {
            get {
                return this.insuranceBonusPctField;
            }
            set {
                this.insuranceBonusPctField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> Custdef1Id {
            get {
                return this.custdef1IdField;
            }
            set {
                this.custdef1IdField = value;
            }
        }
        
        /// <remarks/>
        public string Custdef1Value {
            get {
                return this.custdef1ValueField;
            }
            set {
                this.custdef1ValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> Custdef2Id {
            get {
                return this.custdef2IdField;
            }
            set {
                this.custdef2IdField = value;
            }
        }
        
        /// <remarks/>
        public string Custdef2Value {
            get {
                return this.custdef2ValueField;
            }
            set {
                this.custdef2ValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> Custdef3Id {
            get {
                return this.custdef3IdField;
            }
            set {
                this.custdef3IdField = value;
            }
        }
        
        /// <remarks/>
        public string Custdef3Value {
            get {
                return this.custdef3ValueField;
            }
            set {
                this.custdef3ValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> Custdef4Id {
            get {
                return this.custdef4IdField;
            }
            set {
                this.custdef4IdField = value;
            }
        }
        
        /// <remarks/>
        public string Custdef4Value {
            get {
                return this.custdef4ValueField;
            }
            set {
                this.custdef4ValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> SysinsDt {
            get {
                return this.sysinsDtField;
            }
            set {
                this.sysinsDtField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> DriverId {
            get {
                return this.driverIdField;
            }
            set {
                this.driverIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> VehicleGroupFk {
            get {
                return this.vehicleGroupFkField;
            }
            set {
                this.vehicleGroupFkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> WashType {
            get {
                return this.washTypeField;
            }
            set {
                this.washTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> InsuranceRisk {
            get {
                return this.insuranceRiskField;
            }
            set {
                this.insuranceRiskField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> Odometer {
            get {
                return this.odometerField;
            }
            set {
                this.odometerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> PrlId {
            get {
                return this.prlIdField;
            }
            set {
                this.prlIdField = value;
            }
        }
        
        /// <remarks/>
        public string ReceiptNumber {
            get {
                return this.receiptNumberField;
            }
            set {
                this.receiptNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ServiceType {
            get {
                return this.serviceTypeField;
            }
            set {
                this.serviceTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
            }
        }
        
        /// <remarks/>
        public string Manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> UnitPrice {
            get {
                return this.unitPriceField;
            }
            set {
                this.unitPriceField = value;
            }
        }
        
        /// <remarks/>
        public string Brand {
            get {
                return this.brandField;
            }
            set {
                this.brandField = value;
            }
        }
        
        /// <remarks/>
        public string ObjectSize {
            get {
                return this.objectSizeField;
            }
            set {
                this.objectSizeField = value;
            }
        }
        
        /// <remarks/>
        public string OffenceDescription {
            get {
                return this.offenceDescriptionField;
            }
            set {
                this.offenceDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string OffenderAnalysis {
            get {
                return this.offenderAnalysisField;
            }
            set {
                this.offenderAnalysisField = value;
            }
        }
        
        /// <remarks/>
        public string Complaints {
            get {
                return this.complaintsField;
            }
            set {
                this.complaintsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Locked {
            get {
                return this.lockedField;
            }
            set {
                this.lockedField = value;
            }
        }
        
        /// <remarks/>
        public string Subtitle {
            get {
                return this.subtitleField;
            }
            set {
                this.subtitleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> VehicleActive {
            get {
                return this.vehicleActiveField;
            }
            set {
                this.vehicleActiveField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/FCM.Applications.MWS/")]
    public enum TypeOfUploadFiles {
        
        /// <remarks/>
        HAC_Excel,
        
        /// <remarks/>
        BINA_Excel,
        
        /// <remarks/>
        INA_Xml,
        
        /// <remarks/>
        Petrol_Excel,
        
        /// <remarks/>
        Private_Excel,
        
        /// <remarks/>
        ServiceOrderItems_Excel,
        
        /// <remarks/>
        ServiceOrderLausItems_Excel,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SaveServiceOrderItemCompletedEventHandler(object sender, SaveServiceOrderItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveServiceOrderItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveServiceOrderItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long serviceOrderItemId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetServiceOrderItemsCompletedEventHandler(object sender, GetServiceOrderItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServiceOrderItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServiceOrderItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ServiceOrderItemModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ServiceOrderItemModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetServiceOrderItemDetailsCompletedEventHandler(object sender, GetServiceOrderItemDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServiceOrderItemDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServiceOrderItemDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ServiceOrderItemModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ServiceOrderItemModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetServiceOrderExpensesCompletedEventHandler(object sender, GetServiceOrderExpensesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServiceOrderExpensesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServiceOrderExpensesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExpenseModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExpenseModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteServiceOrderItemCompletedEventHandler(object sender, DeleteServiceOrderItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteServiceOrderItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteServiceOrderItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteItemsByExpenseCompletedEventHandler(object sender, DeleteItemsByExpenseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteItemsByExpenseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteItemsByExpenseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetServiceOrderByFilterListCompletedEventHandler(object sender, GetServiceOrderByFilterListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServiceOrderByFilterListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServiceOrderByFilterListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ServiceOrderFilterModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ServiceOrderFilterModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetServiceOrderByFilterCountCompletedEventHandler(object sender, GetServiceOrderByFilterCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServiceOrderByFilterCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServiceOrderByFilterCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteServiceOrderCompletedEventHandler(object sender, DeleteServiceOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteServiceOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteServiceOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SaveServiceOrderCompletedEventHandler(object sender, SaveServiceOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveServiceOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveServiceOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long serviceOrderID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void LockServiceOrderCompletedEventHandler(object sender, LockServiceOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LockServiceOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LockServiceOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetVehicleAndTimeCollisionForServiceOrderCompletedEventHandler(object sender, GetVehicleAndTimeCollisionForServiceOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVehicleAndTimeCollisionForServiceOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVehicleAndTimeCollisionForServiceOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long collisionsDetected {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetServiceOrderPdfCompletedEventHandler(object sender, GetServiceOrderPdfCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServiceOrderPdfCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServiceOrderPdfCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ServiceOrderPdfModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ServiceOrderPdfModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetServiceOrderByItemCreationDateCompletedEventHandler(object sender, GetServiceOrderByItemCreationDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServiceOrderByItemCreationDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServiceOrderByItemCreationDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ServiceOrderModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ServiceOrderModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetDivisionCompletedEventHandler(object sender, GetDivisionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDivisionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDivisionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DivisionModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DivisionModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetAllDivisionsCompletedEventHandler(object sender, GetAllDivisionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllDivisionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllDivisionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DivisionModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DivisionModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetSectorCompletedEventHandler(object sender, GetSectorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSectorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSectorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SectorModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SectorModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetAllSectorsCompletedEventHandler(object sender, GetAllSectorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllSectorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllSectorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SectorModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SectorModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetCardTypeCompletedEventHandler(object sender, GetCardTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCardTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCardTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CardTypeModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CardTypeModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetAllCardTypesCompletedEventHandler(object sender, GetAllCardTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllCardTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllCardTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CardTypeModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CardTypeModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetCardCompletedEventHandler(object sender, GetCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CardModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CardModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetCardByCardNumberCompletedEventHandler(object sender, GetCardByCardNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCardByCardNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCardByCardNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CardModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CardModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetHistoryCompletedEventHandler(object sender, GetHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CardsHistoryModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CardsHistoryModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetHistoryByVehicleIdCompletedEventHandler(object sender, GetHistoryByVehicleIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHistoryByVehicleIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHistoryByVehicleIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CardsHistoryModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CardsHistoryModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SaveCardCompletedEventHandler(object sender, SaveCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long cardID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetCardByFilterListCompletedEventHandler(object sender, GetCardByFilterListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCardByFilterListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCardByFilterListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CardManagementFilterModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CardManagementFilterModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetCardByFilterCountCompletedEventHandler(object sender, GetCardByFilterCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCardByFilterCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCardByFilterCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteCardCompletedEventHandler(object sender, DeleteCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void AssignCardCompletedEventHandler(object sender, AssignCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AssignCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AssignCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void FilterCardsForAutoCompleteCompletedEventHandler(object sender, FilterCardsForAutoCompleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FilterCardsForAutoCompleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FilterCardsForAutoCompleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CardModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CardModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetHistoryByFilterListCompletedEventHandler(object sender, GetHistoryByFilterListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHistoryByFilterListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHistoryByFilterListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CardManagementHistoryFilterModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CardManagementHistoryFilterModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetHistoryByFilterCountCompletedEventHandler(object sender, GetHistoryByFilterCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHistoryByFilterCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHistoryByFilterCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetHistoryCountCompletedEventHandler(object sender, GetHistoryCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHistoryCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHistoryCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetCardReportCompletedEventHandler(object sender, GetCardReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCardReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCardReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CardModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CardModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetVehicleNameCompletedEventHandler(object sender, GetVehicleNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVehicleNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVehicleNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CardModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CardModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void StartReportProcessCompletedEventHandler(object sender, StartReportProcessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StartReportProcessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StartReportProcessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetReservationCompletedEventHandler(object sender, GetReservationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReservationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReservationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReservationModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReservationModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetReservationByReservationIdCompletedEventHandler(object sender, GetReservationByReservationIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReservationByReservationIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReservationByReservationIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReservationModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReservationModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetReservationsCompletedEventHandler(object sender, GetReservationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReservationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReservationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReservationModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReservationModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void FilterReservationForAutoCompleteCompletedEventHandler(object sender, FilterReservationForAutoCompleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FilterReservationForAutoCompleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FilterReservationForAutoCompleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReservationModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReservationModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetReservationsByFilterListCompletedEventHandler(object sender, GetReservationsByFilterListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReservationsByFilterListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReservationsByFilterListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReservationFilterModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReservationFilterModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetReservationsByFilterCountCompletedEventHandler(object sender, GetReservationsByFilterCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReservationsByFilterCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReservationsByFilterCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void FilterReservationsCompletedEventHandler(object sender, FilterReservationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FilterReservationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FilterReservationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReservationModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReservationModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SaveReservationCompletedEventHandler(object sender, SaveReservationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveReservationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveReservationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long newReservationID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetEmployeeIdCompletedEventHandler(object sender, GetEmployeeIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmployeeIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmployeeIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetReservationIdByAssignedVehicleIdCompletedEventHandler(object sender, GetReservationIdByAssignedVehicleIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReservationIdByAssignedVehicleIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReservationIdByAssignedVehicleIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetVersionCompletedEventHandler(object sender, GetVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetRelationCompletedEventHandler(object sender, GetRelationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRelationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRelationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RelationModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RelationModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetAllRelationsCompletedEventHandler(object sender, GetAllRelationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllRelationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllRelationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RelationModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RelationModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SaveRelationCompletedEventHandler(object sender, SaveRelationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveRelationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveRelationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long newId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetRelationsByFilterCompletedEventHandler(object sender, GetRelationsByFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRelationsByFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRelationsByFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RelationModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RelationModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetRelationsByFilterListCompletedEventHandler(object sender, GetRelationsByFilterListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRelationsByFilterListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRelationsByFilterListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RelationFilterModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RelationFilterModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetRelationsByFilterCountCompletedEventHandler(object sender, GetRelationsByFilterCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRelationsByFilterCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRelationsByFilterCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void FilterRelationsForAutoCompleteCompletedEventHandler(object sender, FilterRelationsForAutoCompleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FilterRelationsForAutoCompleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FilterRelationsForAutoCompleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RelationModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RelationModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteRelationCompletedEventHandler(object sender, DeleteRelationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteRelationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteRelationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetRelationLocationsByFilterListCompletedEventHandler(object sender, GetRelationLocationsByFilterListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRelationLocationsByFilterListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRelationLocationsByFilterListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RelationLocationFilterModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RelationLocationFilterModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetRelationLocationsByFilterCountCompletedEventHandler(object sender, GetRelationLocationsByFilterCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRelationLocationsByFilterCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRelationLocationsByFilterCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetRelationLocationCompletedEventHandler(object sender, GetRelationLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRelationLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRelationLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RelationLocationModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RelationLocationModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetRelationLocationByIdCompletedEventHandler(object sender, GetRelationLocationByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRelationLocationByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRelationLocationByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RelationLocationModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RelationLocationModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SaveRelationLocationCompletedEventHandler(object sender, SaveRelationLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveRelationLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveRelationLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long newId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteRelationLocationCompletedEventHandler(object sender, DeleteRelationLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteRelationLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteRelationLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SaveWageMarkersCompletedEventHandler(object sender, SaveWageMarkersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveWageMarkersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveWageMarkersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateWageMarkersCompletedEventHandler(object sender, UpdateWageMarkersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateWageMarkersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateWageMarkersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetRelationLocationInstancesByPrlIdCompletedEventHandler(object sender, GetRelationLocationInstancesByPrlIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRelationLocationInstancesByPrlIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRelationLocationInstancesByPrlIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RelationLocationInstanceModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RelationLocationInstanceModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SaveRelationLocationInstanceCompletedEventHandler(object sender, SaveRelationLocationInstanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveRelationLocationInstanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveRelationLocationInstanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UploadFileDataCompletedEventHandler(object sender, UploadFileDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadFileDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadFileDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsUploadedFileDataValidCompletedEventHandler(object sender, IsUploadedFileDataValidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsUploadedFileDataValidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsUploadedFileDataValidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ProcessUploadedFileProgressCompletedEventHandler(object sender, ProcessUploadedFileProgressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProcessUploadedFileProgressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProcessUploadedFileProgressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetProcessingLogDataCompletedEventHandler(object sender, GetProcessingLogDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProcessingLogDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProcessingLogDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExpenseProcessingLogModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExpenseProcessingLogModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UploadedFileErrorCountCompletedEventHandler(object sender, UploadedFileErrorCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadedFileErrorCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadedFileErrorCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ProcessUploadedFileCompletedEventHandler(object sender, ProcessUploadedFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProcessUploadedFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProcessUploadedFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SavePRLCompletedEventHandler(object sender, SavePRLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SavePRLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SavePRLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long newPrlId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetPRLByPrlIdCompletedEventHandler(object sender, GetPRLByPrlIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPRLByPrlIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPRLByPrlIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PRLModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PRLModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetAllPRLsCompletedEventHandler(object sender, GetAllPRLsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllPRLsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllPRLsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PRLModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PRLModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetPRLByFilterCompletedEventHandler(object sender, GetPRLByFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPRLByFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPRLByFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PRLModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PRLModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetPrlByFilterListCompletedEventHandler(object sender, GetPrlByFilterListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrlByFilterListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPrlByFilterListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PrlFilterModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PrlFilterModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetPRLByFilterCountCompletedEventHandler(object sender, GetPRLByFilterCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPRLByFilterCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPRLByFilterCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeletePRLCompletedEventHandler(object sender, DeletePRLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletePRLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletePRLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateStatusCompletedEventHandler(object sender, UpdateStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetPRLByPrlIdWithStatesCompletedEventHandler(object sender, GetPRLByPrlIdWithStatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPRLByPrlIdWithStatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPRLByPrlIdWithStatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PRLModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PRLModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetVehicleAndTimeCollisionCompletedEventHandler(object sender, GetVehicleAndTimeCollisionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVehicleAndTimeCollisionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVehicleAndTimeCollisionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long collisionsDetected {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetVehicleAndTimeCollisionForUpdateCompletedEventHandler(object sender, GetVehicleAndTimeCollisionForUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVehicleAndTimeCollisionForUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVehicleAndTimeCollisionForUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long collisionsDetected {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetAllLocationsCompletedEventHandler(object sender, GetAllLocationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllLocationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllLocationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LocationModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LocationModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetLocationCompletedEventHandler(object sender, GetLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LocationModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LocationModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetLocationsByFilterListCompletedEventHandler(object sender, GetLocationsByFilterListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLocationsByFilterListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLocationsByFilterListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LocationFilterModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LocationFilterModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetLocationsByFilterCountCompletedEventHandler(object sender, GetLocationsByFilterCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLocationsByFilterCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLocationsByFilterCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteLocationCompletedEventHandler(object sender, DeleteLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void FilterLocationsCompletedEventHandler(object sender, FilterLocationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FilterLocationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FilterLocationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LocationModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LocationModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SaveLocationCompletedEventHandler(object sender, SaveLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long newLocationID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetRegistrationsThatExpireListCompletedEventHandler(object sender, GetRegistrationsThatExpireListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRegistrationsThatExpireListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRegistrationsThatExpireListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QuickInfoRegistrationFilterModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QuickInfoRegistrationFilterModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetRegistrationsThatExpireCountCompletedEventHandler(object sender, GetRegistrationsThatExpireCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRegistrationsThatExpireCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRegistrationsThatExpireCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetVehiclesForWriteOffListCompletedEventHandler(object sender, GetVehiclesForWriteOffListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVehiclesForWriteOffListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVehiclesForWriteOffListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QuickInfoWriteOffFilterModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QuickInfoWriteOffFilterModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetVehiclesForWriteOffCountCompletedEventHandler(object sender, GetVehiclesForWriteOffCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVehiclesForWriteOffCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVehiclesForWriteOffCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetVehiclesForServiceListCompletedEventHandler(object sender, GetVehiclesForServiceListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVehiclesForServiceListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVehiclesForServiceListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QuickInfoServiceFilterModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QuickInfoServiceFilterModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetVehiclesForServiceCountCompletedEventHandler(object sender, GetVehiclesForServiceCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVehiclesForServiceCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVehiclesForServiceCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void AddUserToVehicleGroupCompletedEventHandler(object sender, AddUserToVehicleGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUserToVehicleGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUserToVehicleGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void RemoveUserFromVehicleGroupCompletedEventHandler(object sender, RemoveUserFromVehicleGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveUserFromVehicleGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveUserFromVehicleGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetFuelConsumptionForReportCompletedEventHandler(object sender, GetFuelConsumptionForReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFuelConsumptionForReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFuelConsumptionForReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FuelConsumptionModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FuelConsumptionModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetServiceOrderCompletedEventHandler(object sender, GetServiceOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServiceOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServiceOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ServiceOrderModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ServiceOrderModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetVehicleTiresByFilterCountCompletedEventHandler(object sender, GetVehicleTiresByFilterCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVehicleTiresByFilterCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVehicleTiresByFilterCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetVehicleTireDetailsCompletedEventHandler(object sender, GetVehicleTireDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVehicleTireDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVehicleTireDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TireModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TireModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SaveVehicleTireCompletedEventHandler(object sender, SaveVehicleTireCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveVehicleTireCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveVehicleTireCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long newTireId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteVehicleTireCompletedEventHandler(object sender, DeleteVehicleTireCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteVehicleTireCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteVehicleTireCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetVehicleTireReplacementCountCompletedEventHandler(object sender, GetVehicleTireReplacementCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVehicleTireReplacementCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVehicleTireReplacementCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetAllOrganizationalUnitsCompletedEventHandler(object sender, GetAllOrganizationalUnitsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllOrganizationalUnitsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllOrganizationalUnitsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OrganizationalUnitModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OrganizationalUnitModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetAllOrganizationUnitsForCustomControlCompletedEventHandler(object sender, GetAllOrganizationUnitsForCustomControlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllOrganizationUnitsForCustomControlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllOrganizationUnitsForCustomControlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OrganizationalUnitModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OrganizationalUnitModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetAllDriversforOUCompletedEventHandler(object sender, GetAllDriversforOUCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllDriversforOUCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllDriversforOUCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DriverModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DriverModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetAllVehiclesforOUCompletedEventHandler(object sender, GetAllVehiclesforOUCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllVehiclesforOUCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllVehiclesforOUCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VehicleModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VehicleModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void MoveDrivertoOUCompletedEventHandler(object sender, MoveDrivertoOUCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MoveDrivertoOUCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MoveDrivertoOUCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void MoveVehicletoOUCompletedEventHandler(object sender, MoveVehicletoOUCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MoveVehicletoOUCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MoveVehicletoOUCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void InsertOUCompletedEventHandler(object sender, InsertOUCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertOUCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertOUCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateOUCompletedEventHandler(object sender, UpdateOUCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateOUCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateOUCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteOUCompletedEventHandler(object sender, DeleteOUCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteOUCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteOUCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateOURightsCompletedEventHandler(object sender, UpdateOURightsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateOURightsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateOURightsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetAllOUAccessRightsCompletedEventHandler(object sender, GetAllOUAccessRightsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllOUAccessRightsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllOUAccessRightsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OrganizationalUnitAccessRightModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OrganizationalUnitAccessRightModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetExpenseCompletedEventHandler(object sender, GetExpenseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExpenseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExpenseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExpenseModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExpenseModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetExpensesByUserIdCompletedEventHandler(object sender, GetExpensesByUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExpensesByUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExpensesByUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExpenseModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExpenseModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void LockExpenseCompletedEventHandler(object sender, LockExpenseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LockExpenseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LockExpenseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetExpensesForReportCompletedEventHandler(object sender, GetExpensesForReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExpensesForReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExpensesForReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExpenseModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExpenseModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetExpensesByFilterListCompletedEventHandler(object sender, GetExpensesByFilterListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExpensesByFilterListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExpensesByFilterListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExpenseFilterModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExpenseFilterModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetExpensesByFilterCountCompletedEventHandler(object sender, GetExpensesByFilterCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExpensesByFilterCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExpensesByFilterCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetExpensesByFilterCompletedEventHandler(object sender, GetExpensesByFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExpensesByFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExpensesByFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExpenseModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExpenseModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetExpensesByUserIdAndVehicleFkCompletedEventHandler(object sender, GetExpensesByUserIdAndVehicleFkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExpensesByUserIdAndVehicleFkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExpensesByUserIdAndVehicleFkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExpenseModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExpenseModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetExpensesByUserIdAndExpCatCodeCompletedEventHandler(object sender, GetExpensesByUserIdAndExpCatCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExpensesByUserIdAndExpCatCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExpensesByUserIdAndExpCatCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExpenseModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExpenseModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteExpenseCompletedEventHandler(object sender, DeleteExpenseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteExpenseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteExpenseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SaveExpenseCompletedEventHandler(object sender, SaveExpenseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveExpenseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveExpenseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long newExpenseID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetExpensesByUserIdAndPrlIdCompletedEventHandler(object sender, GetExpensesByUserIdAndPrlIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExpensesByUserIdAndPrlIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExpensesByUserIdAndPrlIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExpenseModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExpenseModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetPrlForExpenseDetailsCompletedEventHandler(object sender, GetPrlForExpenseDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrlForExpenseDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPrlForExpenseDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PRLModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PRLModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetExpenseGeneratorCompletedEventHandler(object sender, GetExpenseGeneratorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExpenseGeneratorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExpenseGeneratorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExpenseGeneratorModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExpenseGeneratorModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetExpenseGeneratorsByUserIdCompletedEventHandler(object sender, GetExpenseGeneratorsByUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExpenseGeneratorsByUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExpenseGeneratorsByUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExpenseGeneratorModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExpenseGeneratorModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetExpenseGeneratorsByFilterListCompletedEventHandler(object sender, GetExpenseGeneratorsByFilterListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExpenseGeneratorsByFilterListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExpenseGeneratorsByFilterListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExpenseGeneratorFilterModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExpenseGeneratorFilterModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetExpenseGeneratorsByFilterCountCompletedEventHandler(object sender, GetExpenseGeneratorsByFilterCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExpenseGeneratorsByFilterCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExpenseGeneratorsByFilterCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetAllShownExpenseGeneratorsCompletedEventHandler(object sender, GetAllShownExpenseGeneratorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllShownExpenseGeneratorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllShownExpenseGeneratorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExpenseGeneratorModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExpenseGeneratorModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteExpenseGeneratorCompletedEventHandler(object sender, DeleteExpenseGeneratorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteExpenseGeneratorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteExpenseGeneratorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SaveExpenseGeneratorCompletedEventHandler(object sender, SaveExpenseGeneratorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveExpenseGeneratorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveExpenseGeneratorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long newExpenseGeneratorID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetExpenseCustdefFieldCompletedEventHandler(object sender, GetExpenseCustdefFieldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExpenseCustdefFieldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExpenseCustdefFieldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExpenseCustomDefinedFieldModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExpenseCustomDefinedFieldModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetExpenseCustdefFieldsByUserIdCompletedEventHandler(object sender, GetExpenseCustdefFieldsByUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExpenseCustdefFieldsByUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExpenseCustdefFieldsByUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExpenseCustomDefinedFieldModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExpenseCustomDefinedFieldModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetExpenseCustdefFieldsByUserIdAndExpCatCodeCompletedEventHandler(object sender, GetExpenseCustdefFieldsByUserIdAndExpCatCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExpenseCustdefFieldsByUserIdAndExpCatCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExpenseCustdefFieldsByUserIdAndExpCatCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExpenseCustomDefinedFieldModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExpenseCustomDefinedFieldModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteExpenseCustdefFieldCompletedEventHandler(object sender, DeleteExpenseCustdefFieldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteExpenseCustdefFieldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteExpenseCustdefFieldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SaveExpenseCustdefFieldCompletedEventHandler(object sender, SaveExpenseCustdefFieldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveExpenseCustdefFieldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveExpenseCustdefFieldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long newExpenseCustdefFieldID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetExpCatalogValueCompletedEventHandler(object sender, GetExpCatalogValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExpCatalogValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExpCatalogValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExpenseCatalogValueModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExpenseCatalogValueModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetAllExpCatalogValuesByUserIdCompletedEventHandler(object sender, GetAllExpCatalogValuesByUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllExpCatalogValuesByUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllExpCatalogValuesByUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExpenseCatalogValueModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExpenseCatalogValueModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetAllExpCatalogValuesCompletedEventHandler(object sender, GetAllExpCatalogValuesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllExpCatalogValuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllExpCatalogValuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExpenseCatalogValueModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExpenseCatalogValueModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetAllExpCatalogValuesByControlIdCompletedEventHandler(object sender, GetAllExpCatalogValuesByControlIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllExpCatalogValuesByControlIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllExpCatalogValuesByControlIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExpenseCatalogValueModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExpenseCatalogValueModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetAllExpCatalogValuesByFieldNameCompletedEventHandler(object sender, GetAllExpCatalogValuesByFieldNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllExpCatalogValuesByFieldNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllExpCatalogValuesByFieldNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExpenseCatalogValueModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExpenseCatalogValueModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteExpValueCompletedEventHandler(object sender, DeleteExpValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteExpValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteExpValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void CanDeleteCompletedEventHandler(object sender, CanDeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CanDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CanDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SaveExpValueCompletedEventHandler(object sender, SaveExpValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveExpValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveExpValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long newValueID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetExpCatalogCompletedEventHandler(object sender, GetExpCatalogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExpCatalogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExpCatalogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExpenseCatalogModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExpenseCatalogModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetAllExpCatalogsCompletedEventHandler(object sender, GetAllExpCatalogsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllExpCatalogsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllExpCatalogsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExpenseCatalogModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExpenseCatalogModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetExpenseCatalogByFilterListCompletedEventHandler(object sender, GetExpenseCatalogByFilterListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExpenseCatalogByFilterListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExpenseCatalogByFilterListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExpenseCatalogFilterModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExpenseCatalogFilterModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetExpenseCatalogByFilterCountCompletedEventHandler(object sender, GetExpenseCatalogByFilterCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExpenseCatalogByFilterCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExpenseCatalogByFilterCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void FilterExpCatalogsCompletedEventHandler(object sender, FilterExpCatalogsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FilterExpCatalogsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FilterExpCatalogsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExpenseCatalogModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExpenseCatalogModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void FilterExpCatalogByFieldNameCompletedEventHandler(object sender, FilterExpCatalogByFieldNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FilterExpCatalogByFieldNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FilterExpCatalogByFieldNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExpenseCatalogModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExpenseCatalogModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SaveExpCatalogCompletedEventHandler(object sender, SaveExpCatalogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveExpCatalogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveExpCatalogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long newExpenseCatalogId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ReportGetSumByExpensesTypesOnVehicleCompletedEventHandler(object sender, ReportGetSumByExpensesTypesOnVehicleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportGetSumByExpensesTypesOnVehicleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReportGetSumByExpensesTypesOnVehicleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReportGenericDataSumModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReportGenericDataSumModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetPRLCountAndExpensesTotalReportCompletedEventHandler(object sender, GetPRLCountAndExpensesTotalReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPRLCountAndExpensesTotalReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPRLCountAndExpensesTotalReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PRLCountAndExpensesTotalReportModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PRLCountAndExpensesTotalReportModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetPRLCountAndExpensesVehicleGroupReportCompletedEventHandler(object sender, GetPRLCountAndExpensesVehicleGroupReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPRLCountAndExpensesVehicleGroupReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPRLCountAndExpensesVehicleGroupReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PRLCountAndExpensesTotalReportModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PRLCountAndExpensesTotalReportModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetPRLCountAndExpensesVehicleReportCompletedEventHandler(object sender, GetPRLCountAndExpensesVehicleReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPRLCountAndExpensesVehicleReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPRLCountAndExpensesVehicleReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PRLCountAndExpensesTotalReportModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PRLCountAndExpensesTotalReportModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetPRLCountAndExpensesDriverReportCompletedEventHandler(object sender, GetPRLCountAndExpensesDriverReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPRLCountAndExpensesDriverReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPRLCountAndExpensesDriverReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PRLCountAndExpensesTotalReportModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PRLCountAndExpensesTotalReportModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetPRLCountAndExpensesAreaReportCompletedEventHandler(object sender, GetPRLCountAndExpensesAreaReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPRLCountAndExpensesAreaReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPRLCountAndExpensesAreaReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PRLCountAndExpensesTotalReportModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PRLCountAndExpensesTotalReportModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetTollReportCompletedEventHandler(object sender, GetTollReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTollReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTollReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FuelAndTollModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FuelAndTollModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetReportFileCompletedEventHandler(object sender, GetReportFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReportFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReportFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteUserCompletedEventHandler(object sender, DeleteUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetChildUserCompletedEventHandler(object sender, GetChildUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChildUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChildUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetChildUsersCompletedEventHandler(object sender, GetChildUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChildUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChildUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetParentAndHisChildUsersCompletedEventHandler(object sender, GetParentAndHisChildUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetParentAndHisChildUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetParentAndHisChildUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetAuthorizedUsersForVehicleGroupCompletedEventHandler(object sender, GetAuthorizedUsersForVehicleGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAuthorizedUsersForVehicleGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAuthorizedUsersForVehicleGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SynchronizeChildUserCompletedEventHandler(object sender, SynchronizeChildUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SynchronizeChildUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SynchronizeChildUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SynchronizeUserCompletedEventHandler(object sender, SynchronizeUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SynchronizeUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SynchronizeUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void FilterUsersForAutoCompleteCompletedEventHandler(object sender, FilterUsersForAutoCompleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FilterUsersForAutoCompleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FilterUsersForAutoCompleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetUserMailCompletedEventHandler(object sender, GetUserMailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetUserRightsCompletedEventHandler(object sender, GetUserRightsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserRightsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserRightsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RightModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RightModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetAllUsersWithRightsCompletedEventHandler(object sender, GetAllUsersWithRightsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllUsersWithRightsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllUsersWithRightsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserRightsModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserRightsModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void FilterUsersWithRightsCompletedEventHandler(object sender, FilterUsersWithRightsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FilterUsersWithRightsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FilterUsersWithRightsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserRightsModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserRightsModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void HasRightCompletedEventHandler(object sender, HasRightCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HasRightCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HasRightCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SaveUserRightsCompletedEventHandler(object sender, SaveUserRightsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveUserRightsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveUserRightsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetCompanyCompletedEventHandler(object sender, GetCompanyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCompanyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCompanyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompanyModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompanyModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetAllCompaniesCompletedEventHandler(object sender, GetAllCompaniesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllCompaniesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllCompaniesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompanyModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompanyModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetCompaniesByUserIdCompletedEventHandler(object sender, GetCompaniesByUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCompaniesByUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCompaniesByUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompanyModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompanyModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetCompanyByFilterCountCompletedEventHandler(object sender, GetCompanyByFilterCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCompanyByFilterCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCompanyByFilterCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetCompanyByFilterListCompletedEventHandler(object sender, GetCompanyByFilterListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCompanyByFilterListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCompanyByFilterListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompanyFilterModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompanyFilterModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void FilterCompaniesForAutoCompleteCompletedEventHandler(object sender, FilterCompaniesForAutoCompleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FilterCompaniesForAutoCompleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FilterCompaniesForAutoCompleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompanyModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompanyModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteCompanyCompletedEventHandler(object sender, DeleteCompanyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCompanyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCompanyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SaveCompanyCompletedEventHandler(object sender, SaveCompanyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveCompanyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveCompanyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long newCompanyID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetDamagesByFilterListCompletedEventHandler(object sender, GetDamagesByFilterListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDamagesByFilterListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDamagesByFilterListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DamageFilterModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DamageFilterModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetDamagesByFilterCountCompletedEventHandler(object sender, GetDamagesByFilterCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDamagesByFilterCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDamagesByFilterCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetExpenseDamagesByFilterListCompletedEventHandler(object sender, GetExpenseDamagesByFilterListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExpenseDamagesByFilterListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExpenseDamagesByFilterListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExpenseDamageFilterModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExpenseDamageFilterModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetExpenseDamagesByFilterCountCompletedEventHandler(object sender, GetExpenseDamagesByFilterCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExpenseDamagesByFilterCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExpenseDamagesByFilterCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetDamagedVehiclesCompletedEventHandler(object sender, GetDamagedVehiclesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDamagedVehiclesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDamagedVehiclesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UiDamageModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UiDamageModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetDamagedVehiclesFilterCompletedEventHandler(object sender, GetDamagedVehiclesFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDamagedVehiclesFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDamagedVehiclesFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UiDamageModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UiDamageModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetDamagesByVehicleIdCompletedEventHandler(object sender, GetDamagesByVehicleIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDamagesByVehicleIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDamagesByVehicleIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DamageModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DamageModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetDamagesByExpenseIdCompletedEventHandler(object sender, GetDamagesByExpenseIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDamagesByExpenseIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDamagesByExpenseIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UiDamageModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UiDamageModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void FilterDamagesByVehicleIdCompletedEventHandler(object sender, FilterDamagesByVehicleIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FilterDamagesByVehicleIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FilterDamagesByVehicleIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DamageModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DamageModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteDamageCompletedEventHandler(object sender, DeleteDamageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteDamageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteDamageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetDamageCompletedEventHandler(object sender, GetDamageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDamageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDamageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DamageModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DamageModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetNextDamageNumCompletedEventHandler(object sender, GetNextDamageNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNextDamageNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNextDamageNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SaveDamageCompletedEventHandler(object sender, SaveDamageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveDamageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveDamageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long newDamagePk {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetDamagedVehiclesForReportCompletedEventHandler(object sender, GetDamagedVehiclesForReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDamagedVehiclesForReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDamagedVehiclesForReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DamageReportModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DamageReportModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetDamagedVehiclesForExcelReportCompletedEventHandler(object sender, GetDamagedVehiclesForExcelReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDamagedVehiclesForExcelReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDamagedVehiclesForExcelReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DamageExcelReportModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DamageExcelReportModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetDriverCompletedEventHandler(object sender, GetDriverCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDriverCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDriverCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DriverModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DriverModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetDriverByDesignationCompletedEventHandler(object sender, GetDriverByDesignationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDriverByDesignationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDriverByDesignationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DriverModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DriverModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetDriversByUserIdCompletedEventHandler(object sender, GetDriversByUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDriversByUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDriversByUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DriverModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DriverModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetDriversByFilterListCompletedEventHandler(object sender, GetDriversByFilterListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDriversByFilterListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDriversByFilterListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DriverFilterModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DriverFilterModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetDriversByFilterCountCompletedEventHandler(object sender, GetDriversByFilterCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDriversByFilterCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDriversByFilterCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void FilterDriversCompletedEventHandler(object sender, FilterDriversCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FilterDriversCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FilterDriversCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DriverModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DriverModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void FilterDriversForAutoCompleteCompletedEventHandler(object sender, FilterDriversForAutoCompleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FilterDriversForAutoCompleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FilterDriversForAutoCompleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DriverModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DriverModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteDriverCompletedEventHandler(object sender, DeleteDriverCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteDriverCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteDriverCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SaveDriverCompletedEventHandler(object sender, SaveDriverCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveDriverCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveDriverCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long newDriverID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetVehicleCompletedEventHandler(object sender, GetVehicleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVehicleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVehicleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VehicleModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VehicleModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetVehiclesByUserIdCompletedEventHandler(object sender, GetVehiclesByUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVehiclesByUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVehiclesByUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VehicleModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VehicleModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetVehiclesByReservationIdCompletedEventHandler(object sender, GetVehiclesByReservationIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVehiclesByReservationIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVehiclesByReservationIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VehicleModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VehicleModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetAllAssignedVehiclesCompletedEventHandler(object sender, GetAllAssignedVehiclesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllAssignedVehiclesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllAssignedVehiclesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VehicleModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VehicleModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetVehicleListByFilterListCompletedEventHandler(object sender, GetVehicleListByFilterListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVehicleListByFilterListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVehicleListByFilterListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VehicleListFilterModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VehicleListFilterModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetVehicleListByFilterCountCompletedEventHandler(object sender, GetVehicleListByFilterCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVehicleListByFilterCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVehicleListByFilterCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void FilterVehiclesForAutoCompleteCompletedEventHandler(object sender, FilterVehiclesForAutoCompleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FilterVehiclesForAutoCompleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FilterVehiclesForAutoCompleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VehicleModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VehicleModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetVehiclesByFilterCompletedEventHandler(object sender, GetVehiclesByFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVehiclesByFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVehiclesByFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VehicleModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VehicleModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetVehiclesByFilterCountCompletedEventHandler(object sender, GetVehiclesByFilterCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVehiclesByFilterCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVehiclesByFilterCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetVehiclesByFilterListCompletedEventHandler(object sender, GetVehiclesByFilterListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVehiclesByFilterListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVehiclesByFilterListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VehiclesFilterModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VehiclesFilterModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetAllVehiclesByOrganizationalUnitCompletedEventHandler(object sender, GetAllVehiclesByOrganizationalUnitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllVehiclesByOrganizationalUnitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllVehiclesByOrganizationalUnitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VehicleModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VehicleModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetAllVehiclesByOrganizationalUnitForCustomControlCompletedEventHandler(object sender, GetAllVehiclesByOrganizationalUnitForCustomControlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllVehiclesByOrganizationalUnitForCustomControlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllVehiclesByOrganizationalUnitForCustomControlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VehicleModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VehicleModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetUngroupedVehiclesByUserIdCompletedEventHandler(object sender, GetUngroupedVehiclesByUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUngroupedVehiclesByUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUngroupedVehiclesByUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VehicleModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VehicleModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteVehicleCompletedEventHandler(object sender, DeleteVehicleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteVehicleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteVehicleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void HasVehicleCompletedEventHandler(object sender, HasVehicleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HasVehicleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HasVehicleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetMaxVehicleIdCompletedEventHandler(object sender, GetMaxVehicleIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMaxVehicleIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMaxVehicleIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SaveVehicleCompletedEventHandler(object sender, SaveVehicleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveVehicleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveVehicleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long newVehicleID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetVehicleTiresByFilterListCompletedEventHandler(object sender, GetVehicleTiresByFilterListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVehicleTiresByFilterListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVehicleTiresByFilterListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TireFilterModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TireFilterModel[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591