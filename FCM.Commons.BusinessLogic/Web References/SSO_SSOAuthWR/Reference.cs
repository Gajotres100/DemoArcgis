//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18408.
// 
#pragma warning disable 1591

namespace FCM.Commons.BusinessLogic.SSO_SSOAuthWR {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SSOAuthSoap", Namespace="http://www.gisdata.com/GDi_Ensemble/")]
    public partial class SSOAuth : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllApplicationsDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllApplicationsData1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllRolesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllRoles1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllAplicationsDataAndRolesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllAplicationsDataAndRoles1OperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyToken1OperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyTokenAndGetNewOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyTokenAndGetNew1OperationCompleted;
        
        private System.Threading.SendOrPostCallback RefreshSessionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHeaderAndFooterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHeaderAndFooter1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMessageQueueOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMessageQueue1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSSOMasterApplicationAuthTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSSOApplicationAuthTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGroupUsersOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public SSOAuth() {
            this.Url = global::FCM.Commons.BusinessLogic.Properties.Settings.Default.FCM_Commons_BusinessLogic_SSO_SSOAuthWR_SSOAuth;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetVersionCompletedEventHandler GetVersionCompleted;
        
        /// <remarks/>
        public event GetAllApplicationsDataCompletedEventHandler GetAllApplicationsDataCompleted;
        
        /// <remarks/>
        public event GetAllApplicationsData1CompletedEventHandler GetAllApplicationsData1Completed;
        
        /// <remarks/>
        public event GetAllRolesCompletedEventHandler GetAllRolesCompleted;
        
        /// <remarks/>
        public event GetAllRoles1CompletedEventHandler GetAllRoles1Completed;
        
        /// <remarks/>
        public event GetAllAplicationsDataAndRolesCompletedEventHandler GetAllAplicationsDataAndRolesCompleted;
        
        /// <remarks/>
        public event GetAllAplicationsDataAndRoles1CompletedEventHandler GetAllAplicationsDataAndRoles1Completed;
        
        /// <remarks/>
        public event VerifyTokenCompletedEventHandler VerifyTokenCompleted;
        
        /// <remarks/>
        public event VerifyToken1CompletedEventHandler VerifyToken1Completed;
        
        /// <remarks/>
        public event VerifyTokenAndGetNewCompletedEventHandler VerifyTokenAndGetNewCompleted;
        
        /// <remarks/>
        public event VerifyTokenAndGetNew1CompletedEventHandler VerifyTokenAndGetNew1Completed;
        
        /// <remarks/>
        public event RefreshSessionCompletedEventHandler RefreshSessionCompleted;
        
        /// <remarks/>
        public event GetHeaderAndFooterCompletedEventHandler GetHeaderAndFooterCompleted;
        
        /// <remarks/>
        public event GetHeaderAndFooter1CompletedEventHandler GetHeaderAndFooter1Completed;
        
        /// <remarks/>
        public event GetMessageQueueCompletedEventHandler GetMessageQueueCompleted;
        
        /// <remarks/>
        public event GetMessageQueue1CompletedEventHandler GetMessageQueue1Completed;
        
        /// <remarks/>
        public event GetSSOMasterApplicationAuthTokenCompletedEventHandler GetSSOMasterApplicationAuthTokenCompleted;
        
        /// <remarks/>
        public event GetSSOApplicationAuthTokenCompletedEventHandler GetSSOApplicationAuthTokenCompleted;
        
        /// <remarks/>
        public event GetGroupUsersCompletedEventHandler GetGroupUsersCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/GDi_Ensemble/GetVersion", RequestNamespace="http://www.gisdata.com/GDi_Ensemble/", ResponseNamespace="http://www.gisdata.com/GDi_Ensemble/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetVersion() {
            object[] results = this.Invoke("GetVersion", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetVersionAsync() {
            this.GetVersionAsync(null);
        }
        
        /// <remarks/>
        public void GetVersionAsync(object userState) {
            if ((this.GetVersionOperationCompleted == null)) {
                this.GetVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVersionOperationCompleted);
            }
            this.InvokeAsync("GetVersion", new object[0], this.GetVersionOperationCompleted, userState);
        }
        
        private void OnGetVersionOperationCompleted(object arg) {
            if ((this.GetVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVersionCompleted(this, new GetVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/GDi_Ensemble/GetAllApplicationsData_withCulture", RequestElementName="GetAllApplicationsData_withCulture", RequestNamespace="http://www.gisdata.com/GDi_Ensemble/", ResponseElementName="GetAllApplicationsData_withCultureResponse", ResponseNamespace="http://www.gisdata.com/GDi_Ensemble/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("GetAllApplicationsData_withCultureResult")]
        public ApplicationData[] GetAllApplicationsData(string Culture) {
            object[] results = this.Invoke("GetAllApplicationsData", new object[] {
                        Culture});
            return ((ApplicationData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllApplicationsDataAsync(string Culture) {
            this.GetAllApplicationsDataAsync(Culture, null);
        }
        
        /// <remarks/>
        public void GetAllApplicationsDataAsync(string Culture, object userState) {
            if ((this.GetAllApplicationsDataOperationCompleted == null)) {
                this.GetAllApplicationsDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllApplicationsDataOperationCompleted);
            }
            this.InvokeAsync("GetAllApplicationsData", new object[] {
                        Culture}, this.GetAllApplicationsDataOperationCompleted, userState);
        }
        
        private void OnGetAllApplicationsDataOperationCompleted(object arg) {
            if ((this.GetAllApplicationsDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllApplicationsDataCompleted(this, new GetAllApplicationsDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="GetAllApplicationsData1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/GDi_Ensemble/GetAllApplicationsData_defaultCulture", RequestElementName="GetAllApplicationsData_defaultCulture", RequestNamespace="http://www.gisdata.com/GDi_Ensemble/", ResponseElementName="GetAllApplicationsData_defaultCultureResponse", ResponseNamespace="http://www.gisdata.com/GDi_Ensemble/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("GetAllApplicationsData_defaultCultureResult")]
        public ApplicationData[] GetAllApplicationsData() {
            object[] results = this.Invoke("GetAllApplicationsData1", new object[0]);
            return ((ApplicationData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllApplicationsData1Async() {
            this.GetAllApplicationsData1Async(null);
        }
        
        /// <remarks/>
        public void GetAllApplicationsData1Async(object userState) {
            if ((this.GetAllApplicationsData1OperationCompleted == null)) {
                this.GetAllApplicationsData1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllApplicationsData1OperationCompleted);
            }
            this.InvokeAsync("GetAllApplicationsData1", new object[0], this.GetAllApplicationsData1OperationCompleted, userState);
        }
        
        private void OnGetAllApplicationsData1OperationCompleted(object arg) {
            if ((this.GetAllApplicationsData1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllApplicationsData1Completed(this, new GetAllApplicationsData1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/GDi_Ensemble/GetAllRoles_withCulture", RequestElementName="GetAllRoles_withCulture", RequestNamespace="http://www.gisdata.com/GDi_Ensemble/", ResponseElementName="GetAllRoles_withCultureResponse", ResponseNamespace="http://www.gisdata.com/GDi_Ensemble/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("GetAllRoles_withCultureResult")]
        public Role[] GetAllRoles(string Culture) {
            object[] results = this.Invoke("GetAllRoles", new object[] {
                        Culture});
            return ((Role[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllRolesAsync(string Culture) {
            this.GetAllRolesAsync(Culture, null);
        }
        
        /// <remarks/>
        public void GetAllRolesAsync(string Culture, object userState) {
            if ((this.GetAllRolesOperationCompleted == null)) {
                this.GetAllRolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllRolesOperationCompleted);
            }
            this.InvokeAsync("GetAllRoles", new object[] {
                        Culture}, this.GetAllRolesOperationCompleted, userState);
        }
        
        private void OnGetAllRolesOperationCompleted(object arg) {
            if ((this.GetAllRolesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllRolesCompleted(this, new GetAllRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="GetAllRoles1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/GDi_Ensemble/GetAllRoles_defaultCulture", RequestElementName="GetAllRoles_defaultCulture", RequestNamespace="http://www.gisdata.com/GDi_Ensemble/", ResponseElementName="GetAllRoles_defaultCultureResponse", ResponseNamespace="http://www.gisdata.com/GDi_Ensemble/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("GetAllRoles_defaultCultureResult")]
        public Role[] GetAllRoles() {
            object[] results = this.Invoke("GetAllRoles1", new object[0]);
            return ((Role[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllRoles1Async() {
            this.GetAllRoles1Async(null);
        }
        
        /// <remarks/>
        public void GetAllRoles1Async(object userState) {
            if ((this.GetAllRoles1OperationCompleted == null)) {
                this.GetAllRoles1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllRoles1OperationCompleted);
            }
            this.InvokeAsync("GetAllRoles1", new object[0], this.GetAllRoles1OperationCompleted, userState);
        }
        
        private void OnGetAllRoles1OperationCompleted(object arg) {
            if ((this.GetAllRoles1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllRoles1Completed(this, new GetAllRoles1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/GDi_Ensemble/GetAllAplicationsDataAndRoles_withCulture", RequestElementName="GetAllAplicationsDataAndRoles_withCulture", RequestNamespace="http://www.gisdata.com/GDi_Ensemble/", ResponseElementName="GetAllAplicationsDataAndRoles_withCultureResponse", ResponseNamespace="http://www.gisdata.com/GDi_Ensemble/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("ApplicationData")]
        public ApplicationData[] GetAllAplicationsDataAndRoles(string Culture, out Role[] ApplicationRoles) {
            object[] results = this.Invoke("GetAllAplicationsDataAndRoles", new object[] {
                        Culture});
            ApplicationRoles = ((Role[])(results[1]));
            return ((ApplicationData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllAplicationsDataAndRolesAsync(string Culture) {
            this.GetAllAplicationsDataAndRolesAsync(Culture, null);
        }
        
        /// <remarks/>
        public void GetAllAplicationsDataAndRolesAsync(string Culture, object userState) {
            if ((this.GetAllAplicationsDataAndRolesOperationCompleted == null)) {
                this.GetAllAplicationsDataAndRolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllAplicationsDataAndRolesOperationCompleted);
            }
            this.InvokeAsync("GetAllAplicationsDataAndRoles", new object[] {
                        Culture}, this.GetAllAplicationsDataAndRolesOperationCompleted, userState);
        }
        
        private void OnGetAllAplicationsDataAndRolesOperationCompleted(object arg) {
            if ((this.GetAllAplicationsDataAndRolesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllAplicationsDataAndRolesCompleted(this, new GetAllAplicationsDataAndRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="GetAllAplicationsDataAndRoles1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/GDi_Ensemble/GetAllAplicationsDataAndRoles_defaultCulture", RequestElementName="GetAllAplicationsDataAndRoles_defaultCulture", RequestNamespace="http://www.gisdata.com/GDi_Ensemble/", ResponseElementName="GetAllAplicationsDataAndRoles_defaultCultureResponse", ResponseNamespace="http://www.gisdata.com/GDi_Ensemble/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("ApplicationData")]
        public ApplicationData[] GetAllAplicationsDataAndRoles(out Role[] ApplicationRoles) {
            object[] results = this.Invoke("GetAllAplicationsDataAndRoles1", new object[0]);
            ApplicationRoles = ((Role[])(results[1]));
            return ((ApplicationData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllAplicationsDataAndRoles1Async() {
            this.GetAllAplicationsDataAndRoles1Async(null);
        }
        
        /// <remarks/>
        public void GetAllAplicationsDataAndRoles1Async(object userState) {
            if ((this.GetAllAplicationsDataAndRoles1OperationCompleted == null)) {
                this.GetAllAplicationsDataAndRoles1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllAplicationsDataAndRoles1OperationCompleted);
            }
            this.InvokeAsync("GetAllAplicationsDataAndRoles1", new object[0], this.GetAllAplicationsDataAndRoles1OperationCompleted, userState);
        }
        
        private void OnGetAllAplicationsDataAndRoles1OperationCompleted(object arg) {
            if ((this.GetAllAplicationsDataAndRoles1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllAplicationsDataAndRoles1Completed(this, new GetAllAplicationsDataAndRoles1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/GDi_Ensemble/VerifyToken", RequestNamespace="http://www.gisdata.com/GDi_Ensemble/", ResponseNamespace="http://www.gisdata.com/GDi_Ensemble/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool VerifyToken(SSOAuthData SSOAuthData, out string SessionCulture, out string[] AllowedApplicationIDs, out string Header, out string Footer, out Message[] Messages, out string RoleID, out UserData UserData, out UserData MasterUserData, out CompanyData CompanyData) {
            object[] results = this.Invoke("VerifyToken", new object[] {
                        SSOAuthData});
            SessionCulture = ((string)(results[1]));
            AllowedApplicationIDs = ((string[])(results[2]));
            Header = ((string)(results[3]));
            Footer = ((string)(results[4]));
            Messages = ((Message[])(results[5]));
            RoleID = ((string)(results[6]));
            UserData = ((UserData)(results[7]));
            MasterUserData = ((UserData)(results[8]));
            CompanyData = ((CompanyData)(results[9]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyTokenAsync(SSOAuthData SSOAuthData) {
            this.VerifyTokenAsync(SSOAuthData, null);
        }
        
        /// <remarks/>
        public void VerifyTokenAsync(SSOAuthData SSOAuthData, object userState) {
            if ((this.VerifyTokenOperationCompleted == null)) {
                this.VerifyTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyTokenOperationCompleted);
            }
            this.InvokeAsync("VerifyToken", new object[] {
                        SSOAuthData}, this.VerifyTokenOperationCompleted, userState);
        }
        
        private void OnVerifyTokenOperationCompleted(object arg) {
            if ((this.VerifyTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyTokenCompleted(this, new VerifyTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="VerifyToken1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/GDi_Ensemble/VerifyToken_withGroupID", RequestElementName="VerifyToken_withGroupID", RequestNamespace="http://www.gisdata.com/GDi_Ensemble/", ResponseElementName="VerifyToken_withGroupIDResponse", ResponseNamespace="http://www.gisdata.com/GDi_Ensemble/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("VerifyToken_withGroupIDResult")]
        public bool VerifyToken(SSOAuthData SSOAuthData, out string SessionCulture, out string[] AllowedApplicationIDs, out string Header, out string Footer, out Message[] Messages, out string RoleID, out int GroupID, out UserData UserData, out UserData MasterUserData, out CompanyData CompanyData) {
            object[] results = this.Invoke("VerifyToken1", new object[] {
                        SSOAuthData});
            SessionCulture = ((string)(results[1]));
            AllowedApplicationIDs = ((string[])(results[2]));
            Header = ((string)(results[3]));
            Footer = ((string)(results[4]));
            Messages = ((Message[])(results[5]));
            RoleID = ((string)(results[6]));
            GroupID = ((int)(results[7]));
            UserData = ((UserData)(results[8]));
            MasterUserData = ((UserData)(results[9]));
            CompanyData = ((CompanyData)(results[10]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyToken1Async(SSOAuthData SSOAuthData) {
            this.VerifyToken1Async(SSOAuthData, null);
        }
        
        /// <remarks/>
        public void VerifyToken1Async(SSOAuthData SSOAuthData, object userState) {
            if ((this.VerifyToken1OperationCompleted == null)) {
                this.VerifyToken1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyToken1OperationCompleted);
            }
            this.InvokeAsync("VerifyToken1", new object[] {
                        SSOAuthData}, this.VerifyToken1OperationCompleted, userState);
        }
        
        private void OnVerifyToken1OperationCompleted(object arg) {
            if ((this.VerifyToken1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyToken1Completed(this, new VerifyToken1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/GDi_Ensemble/VerifyTokenAndGetNew", RequestNamespace="http://www.gisdata.com/GDi_Ensemble/", ResponseNamespace="http://www.gisdata.com/GDi_Ensemble/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool VerifyTokenAndGetNew(SSOAuthData SSOAuthData, out string SessionCulture, out string NewSSOAuthToken, out string[] AllowedApplicationIDs, out string Header, out string Footer, out Message[] Messages, out string RoleID, out UserData UserData, out UserData MasterUserData, out CompanyData CompanyData) {
            object[] results = this.Invoke("VerifyTokenAndGetNew", new object[] {
                        SSOAuthData});
            SessionCulture = ((string)(results[1]));
            NewSSOAuthToken = ((string)(results[2]));
            AllowedApplicationIDs = ((string[])(results[3]));
            Header = ((string)(results[4]));
            Footer = ((string)(results[5]));
            Messages = ((Message[])(results[6]));
            RoleID = ((string)(results[7]));
            UserData = ((UserData)(results[8]));
            MasterUserData = ((UserData)(results[9]));
            CompanyData = ((CompanyData)(results[10]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyTokenAndGetNewAsync(SSOAuthData SSOAuthData) {
            this.VerifyTokenAndGetNewAsync(SSOAuthData, null);
        }
        
        /// <remarks/>
        public void VerifyTokenAndGetNewAsync(SSOAuthData SSOAuthData, object userState) {
            if ((this.VerifyTokenAndGetNewOperationCompleted == null)) {
                this.VerifyTokenAndGetNewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyTokenAndGetNewOperationCompleted);
            }
            this.InvokeAsync("VerifyTokenAndGetNew", new object[] {
                        SSOAuthData}, this.VerifyTokenAndGetNewOperationCompleted, userState);
        }
        
        private void OnVerifyTokenAndGetNewOperationCompleted(object arg) {
            if ((this.VerifyTokenAndGetNewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyTokenAndGetNewCompleted(this, new VerifyTokenAndGetNewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="VerifyTokenAndGetNew1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/GDi_Ensemble/VerifyTokenAndGetNew_withGroupID", RequestElementName="VerifyTokenAndGetNew_withGroupID", RequestNamespace="http://www.gisdata.com/GDi_Ensemble/", ResponseElementName="VerifyTokenAndGetNew_withGroupIDResponse", ResponseNamespace="http://www.gisdata.com/GDi_Ensemble/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("VerifyTokenAndGetNew_withGroupIDResult")]
        public bool VerifyTokenAndGetNew(SSOAuthData SSOAuthData, out string SessionCulture, out string NewSSOAuthToken, out string[] AllowedApplicationIDs, out string Header, out string Footer, out Message[] Messages, out string RoleID, out int GroupID, out UserData UserData, out UserData MasterUserData, out CompanyData CompanyData) {
            object[] results = this.Invoke("VerifyTokenAndGetNew1", new object[] {
                        SSOAuthData});
            SessionCulture = ((string)(results[1]));
            NewSSOAuthToken = ((string)(results[2]));
            AllowedApplicationIDs = ((string[])(results[3]));
            Header = ((string)(results[4]));
            Footer = ((string)(results[5]));
            Messages = ((Message[])(results[6]));
            RoleID = ((string)(results[7]));
            GroupID = ((int)(results[8]));
            UserData = ((UserData)(results[9]));
            MasterUserData = ((UserData)(results[10]));
            CompanyData = ((CompanyData)(results[11]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyTokenAndGetNew1Async(SSOAuthData SSOAuthData) {
            this.VerifyTokenAndGetNew1Async(SSOAuthData, null);
        }
        
        /// <remarks/>
        public void VerifyTokenAndGetNew1Async(SSOAuthData SSOAuthData, object userState) {
            if ((this.VerifyTokenAndGetNew1OperationCompleted == null)) {
                this.VerifyTokenAndGetNew1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyTokenAndGetNew1OperationCompleted);
            }
            this.InvokeAsync("VerifyTokenAndGetNew1", new object[] {
                        SSOAuthData}, this.VerifyTokenAndGetNew1OperationCompleted, userState);
        }
        
        private void OnVerifyTokenAndGetNew1OperationCompleted(object arg) {
            if ((this.VerifyTokenAndGetNew1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyTokenAndGetNew1Completed(this, new VerifyTokenAndGetNew1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/GDi_Ensemble/RefreshSession", RequestNamespace="http://www.gisdata.com/GDi_Ensemble/", ResponseNamespace="http://www.gisdata.com/GDi_Ensemble/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RefreshSession(SSOAuthData SSOAuthData, out string NewSSOAuthToken) {
            object[] results = this.Invoke("RefreshSession", new object[] {
                        SSOAuthData});
            NewSSOAuthToken = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RefreshSessionAsync(SSOAuthData SSOAuthData) {
            this.RefreshSessionAsync(SSOAuthData, null);
        }
        
        /// <remarks/>
        public void RefreshSessionAsync(SSOAuthData SSOAuthData, object userState) {
            if ((this.RefreshSessionOperationCompleted == null)) {
                this.RefreshSessionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRefreshSessionOperationCompleted);
            }
            this.InvokeAsync("RefreshSession", new object[] {
                        SSOAuthData}, this.RefreshSessionOperationCompleted, userState);
        }
        
        private void OnRefreshSessionOperationCompleted(object arg) {
            if ((this.RefreshSessionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RefreshSessionCompleted(this, new RefreshSessionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/GDi_Ensemble/GetHeaderAndFooter_withCulture", RequestElementName="GetHeaderAndFooter_withCulture", RequestNamespace="http://www.gisdata.com/GDi_Ensemble/", ResponseElementName="GetHeaderAndFooter_withCultureResponse", ResponseNamespace="http://www.gisdata.com/GDi_Ensemble/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("NewSSOAuthToken")]
        public string GetHeaderAndFooter(SSOAuthData SSOAuthData, string Culture, out string Header, out string Footer) {
            object[] results = this.Invoke("GetHeaderAndFooter", new object[] {
                        SSOAuthData,
                        Culture});
            Header = ((string)(results[1]));
            Footer = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetHeaderAndFooterAsync(SSOAuthData SSOAuthData, string Culture) {
            this.GetHeaderAndFooterAsync(SSOAuthData, Culture, null);
        }
        
        /// <remarks/>
        public void GetHeaderAndFooterAsync(SSOAuthData SSOAuthData, string Culture, object userState) {
            if ((this.GetHeaderAndFooterOperationCompleted == null)) {
                this.GetHeaderAndFooterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHeaderAndFooterOperationCompleted);
            }
            this.InvokeAsync("GetHeaderAndFooter", new object[] {
                        SSOAuthData,
                        Culture}, this.GetHeaderAndFooterOperationCompleted, userState);
        }
        
        private void OnGetHeaderAndFooterOperationCompleted(object arg) {
            if ((this.GetHeaderAndFooterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHeaderAndFooterCompleted(this, new GetHeaderAndFooterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="GetHeaderAndFooter1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/GDi_Ensemble/GetHeaderAndFooter_defaultCulture", RequestElementName="GetHeaderAndFooter_defaultCulture", RequestNamespace="http://www.gisdata.com/GDi_Ensemble/", ResponseElementName="GetHeaderAndFooter_defaultCultureResponse", ResponseNamespace="http://www.gisdata.com/GDi_Ensemble/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("NewSSOAuthToken")]
        public string GetHeaderAndFooter(SSOAuthData SSOAuthData, out string Header, out string Footer) {
            object[] results = this.Invoke("GetHeaderAndFooter1", new object[] {
                        SSOAuthData});
            Header = ((string)(results[1]));
            Footer = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetHeaderAndFooter1Async(SSOAuthData SSOAuthData) {
            this.GetHeaderAndFooter1Async(SSOAuthData, null);
        }
        
        /// <remarks/>
        public void GetHeaderAndFooter1Async(SSOAuthData SSOAuthData, object userState) {
            if ((this.GetHeaderAndFooter1OperationCompleted == null)) {
                this.GetHeaderAndFooter1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHeaderAndFooter1OperationCompleted);
            }
            this.InvokeAsync("GetHeaderAndFooter1", new object[] {
                        SSOAuthData}, this.GetHeaderAndFooter1OperationCompleted, userState);
        }
        
        private void OnGetHeaderAndFooter1OperationCompleted(object arg) {
            if ((this.GetHeaderAndFooter1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHeaderAndFooter1Completed(this, new GetHeaderAndFooter1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/GDi_Ensemble/GetMessageQueue_withCulture", RequestElementName="GetMessageQueue_withCulture", RequestNamespace="http://www.gisdata.com/GDi_Ensemble/", ResponseElementName="GetMessageQueue_withCultureResponse", ResponseNamespace="http://www.gisdata.com/GDi_Ensemble/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("GetMessageQueue_withCultureResult")]
        public Message[] GetMessageQueue(SSOAuthData SSOAuthData, string Culture, out string NewSSOAuthToken) {
            object[] results = this.Invoke("GetMessageQueue", new object[] {
                        SSOAuthData,
                        Culture});
            NewSSOAuthToken = ((string)(results[1]));
            return ((Message[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMessageQueueAsync(SSOAuthData SSOAuthData, string Culture) {
            this.GetMessageQueueAsync(SSOAuthData, Culture, null);
        }
        
        /// <remarks/>
        public void GetMessageQueueAsync(SSOAuthData SSOAuthData, string Culture, object userState) {
            if ((this.GetMessageQueueOperationCompleted == null)) {
                this.GetMessageQueueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMessageQueueOperationCompleted);
            }
            this.InvokeAsync("GetMessageQueue", new object[] {
                        SSOAuthData,
                        Culture}, this.GetMessageQueueOperationCompleted, userState);
        }
        
        private void OnGetMessageQueueOperationCompleted(object arg) {
            if ((this.GetMessageQueueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMessageQueueCompleted(this, new GetMessageQueueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="GetMessageQueue1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/GDi_Ensemble/GetMessageQueue_defaultCulture", RequestElementName="GetMessageQueue_defaultCulture", RequestNamespace="http://www.gisdata.com/GDi_Ensemble/", ResponseElementName="GetMessageQueue_defaultCultureResponse", ResponseNamespace="http://www.gisdata.com/GDi_Ensemble/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("GetMessageQueue_defaultCultureResult")]
        public Message[] GetMessageQueue(SSOAuthData SSOAuthData, out string NewSSOAuthToken) {
            object[] results = this.Invoke("GetMessageQueue1", new object[] {
                        SSOAuthData});
            NewSSOAuthToken = ((string)(results[1]));
            return ((Message[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMessageQueue1Async(SSOAuthData SSOAuthData) {
            this.GetMessageQueue1Async(SSOAuthData, null);
        }
        
        /// <remarks/>
        public void GetMessageQueue1Async(SSOAuthData SSOAuthData, object userState) {
            if ((this.GetMessageQueue1OperationCompleted == null)) {
                this.GetMessageQueue1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMessageQueue1OperationCompleted);
            }
            this.InvokeAsync("GetMessageQueue1", new object[] {
                        SSOAuthData}, this.GetMessageQueue1OperationCompleted, userState);
        }
        
        private void OnGetMessageQueue1OperationCompleted(object arg) {
            if ((this.GetMessageQueue1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMessageQueue1Completed(this, new GetMessageQueue1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/GDi_Ensemble/GetSSOMasterApplicationAuthToken", RequestNamespace="http://www.gisdata.com/GDi_Ensemble/", ResponseNamespace="http://www.gisdata.com/GDi_Ensemble/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSSOMasterApplicationAuthToken(SSOAuthData SSOAuthData, out string NewSSOAuthToken) {
            object[] results = this.Invoke("GetSSOMasterApplicationAuthToken", new object[] {
                        SSOAuthData});
            NewSSOAuthToken = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSSOMasterApplicationAuthTokenAsync(SSOAuthData SSOAuthData) {
            this.GetSSOMasterApplicationAuthTokenAsync(SSOAuthData, null);
        }
        
        /// <remarks/>
        public void GetSSOMasterApplicationAuthTokenAsync(SSOAuthData SSOAuthData, object userState) {
            if ((this.GetSSOMasterApplicationAuthTokenOperationCompleted == null)) {
                this.GetSSOMasterApplicationAuthTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSSOMasterApplicationAuthTokenOperationCompleted);
            }
            this.InvokeAsync("GetSSOMasterApplicationAuthToken", new object[] {
                        SSOAuthData}, this.GetSSOMasterApplicationAuthTokenOperationCompleted, userState);
        }
        
        private void OnGetSSOMasterApplicationAuthTokenOperationCompleted(object arg) {
            if ((this.GetSSOMasterApplicationAuthTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSSOMasterApplicationAuthTokenCompleted(this, new GetSSOMasterApplicationAuthTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/GDi_Ensemble/GetSSOApplicationAuthToken", RequestNamespace="http://www.gisdata.com/GDi_Ensemble/", ResponseNamespace="http://www.gisdata.com/GDi_Ensemble/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSSOApplicationAuthToken(SSOAuthData SSOAuthData, string ApplicationID, out string NewSSOAuthToken) {
            object[] results = this.Invoke("GetSSOApplicationAuthToken", new object[] {
                        SSOAuthData,
                        ApplicationID});
            NewSSOAuthToken = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSSOApplicationAuthTokenAsync(SSOAuthData SSOAuthData, string ApplicationID) {
            this.GetSSOApplicationAuthTokenAsync(SSOAuthData, ApplicationID, null);
        }
        
        /// <remarks/>
        public void GetSSOApplicationAuthTokenAsync(SSOAuthData SSOAuthData, string ApplicationID, object userState) {
            if ((this.GetSSOApplicationAuthTokenOperationCompleted == null)) {
                this.GetSSOApplicationAuthTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSSOApplicationAuthTokenOperationCompleted);
            }
            this.InvokeAsync("GetSSOApplicationAuthToken", new object[] {
                        SSOAuthData,
                        ApplicationID}, this.GetSSOApplicationAuthTokenOperationCompleted, userState);
        }
        
        private void OnGetSSOApplicationAuthTokenOperationCompleted(object arg) {
            if ((this.GetSSOApplicationAuthTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSSOApplicationAuthTokenCompleted(this, new GetSSOApplicationAuthTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gisdata.com/GDi_Ensemble/GetGroupUsers", RequestNamespace="http://www.gisdata.com/GDi_Ensemble/", ResponseNamespace="http://www.gisdata.com/GDi_Ensemble/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserBasicData[] GetGroupUsers(SSOAuthData SSOAuthData, out string NewSSOAuthToken) {
            object[] results = this.Invoke("GetGroupUsers", new object[] {
                        SSOAuthData});
            NewSSOAuthToken = ((string)(results[1]));
            return ((UserBasicData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetGroupUsersAsync(SSOAuthData SSOAuthData) {
            this.GetGroupUsersAsync(SSOAuthData, null);
        }
        
        /// <remarks/>
        public void GetGroupUsersAsync(SSOAuthData SSOAuthData, object userState) {
            if ((this.GetGroupUsersOperationCompleted == null)) {
                this.GetGroupUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGroupUsersOperationCompleted);
            }
            this.InvokeAsync("GetGroupUsers", new object[] {
                        SSOAuthData}, this.GetGroupUsersOperationCompleted, userState);
        }
        
        private void OnGetGroupUsersOperationCompleted(object arg) {
            if ((this.GetGroupUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGroupUsersCompleted(this, new GetGroupUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/GDi_Ensemble/")]
    public partial class ApplicationData {
        
        private string applicationIDField;
        
        private string nameField;
        
        private string cultureField;
        
        private string titleField;
        
        private bool adminField;
        
        private string uRLField;
        
        /// <remarks/>
        public string ApplicationID {
            get {
                return this.applicationIDField;
            }
            set {
                this.applicationIDField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Culture {
            get {
                return this.cultureField;
            }
            set {
                this.cultureField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public bool Admin {
            get {
                return this.adminField;
            }
            set {
                this.adminField = value;
            }
        }
        
        /// <remarks/>
        public string URL {
            get {
                return this.uRLField;
            }
            set {
                this.uRLField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/GDi_Ensemble/")]
    public partial class UserBasicData {
        
        private bool deletedField;
        
        private string userIDField;
        
        private bool superuserField;
        
        private string usernameField;
        
        private string roleIDField;
        
        private string firstnameField;
        
        private string lastnameField;
        
        /// <remarks/>
        public bool Deleted {
            get {
                return this.deletedField;
            }
            set {
                this.deletedField = value;
            }
        }
        
        /// <remarks/>
        public string UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public bool Superuser {
            get {
                return this.superuserField;
            }
            set {
                this.superuserField = value;
            }
        }
        
        /// <remarks/>
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public string RoleID {
            get {
                return this.roleIDField;
            }
            set {
                this.roleIDField = value;
            }
        }
        
        /// <remarks/>
        public string Firstname {
            get {
                return this.firstnameField;
            }
            set {
                this.firstnameField = value;
            }
        }
        
        /// <remarks/>
        public string Lastname {
            get {
                return this.lastnameField;
            }
            set {
                this.lastnameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/GDi_Ensemble/")]
    public partial class CompanyData {
        
        private string companyNameField;
        
        private string oIBField;
        
        private string mbField;
        
        private Address addressField;
        
        private string telephoneField;
        
        /// <remarks/>
        public string CompanyName {
            get {
                return this.companyNameField;
            }
            set {
                this.companyNameField = value;
            }
        }
        
        /// <remarks/>
        public string OIB {
            get {
                return this.oIBField;
            }
            set {
                this.oIBField = value;
            }
        }
        
        /// <remarks/>
        public string MB {
            get {
                return this.mbField;
            }
            set {
                this.mbField = value;
            }
        }
        
        /// <remarks/>
        public Address Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public string Telephone {
            get {
                return this.telephoneField;
            }
            set {
                this.telephoneField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/GDi_Ensemble/")]
    public partial class Address {
        
        private string addressNameField;
        
        private string houseNumberField;
        
        private string zIPField;
        
        private string cityField;
        
        /// <remarks/>
        public string AddressName {
            get {
                return this.addressNameField;
            }
            set {
                this.addressNameField = value;
            }
        }
        
        /// <remarks/>
        public string HouseNumber {
            get {
                return this.houseNumberField;
            }
            set {
                this.houseNumberField = value;
            }
        }
        
        /// <remarks/>
        public string ZIP {
            get {
                return this.zIPField;
            }
            set {
                this.zIPField = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/GDi_Ensemble/")]
    public partial class UserData {
        
        private string defaultCultureField;
        
        private string userIDField;
        
        private string usernameField;
        
        private string emailField;
        
        private string firstnameField;
        
        private string lastnameField;
        
        private Address addressField;
        
        private string telephoneField;
        
        private string mSISDNField;
        
        private string oIBField;
        
        /// <remarks/>
        public string DefaultCulture {
            get {
                return this.defaultCultureField;
            }
            set {
                this.defaultCultureField = value;
            }
        }
        
        /// <remarks/>
        public string UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string Firstname {
            get {
                return this.firstnameField;
            }
            set {
                this.firstnameField = value;
            }
        }
        
        /// <remarks/>
        public string Lastname {
            get {
                return this.lastnameField;
            }
            set {
                this.lastnameField = value;
            }
        }
        
        /// <remarks/>
        public Address Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public string Telephone {
            get {
                return this.telephoneField;
            }
            set {
                this.telephoneField = value;
            }
        }
        
        /// <remarks/>
        public string MSISDN {
            get {
                return this.mSISDNField;
            }
            set {
                this.mSISDNField = value;
            }
        }
        
        /// <remarks/>
        public string OIB {
            get {
                return this.oIBField;
            }
            set {
                this.oIBField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/GDi_Ensemble/")]
    public partial class Message {
        
        private string titleField;
        
        private string textField;
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/GDi_Ensemble/")]
    public partial class SSOAuthData {
        
        private string sSOTokenField;
        
        private string applicationIDField;
        
        private string iPAddressField;
        
        /// <remarks/>
        public string SSOToken {
            get {
                return this.sSOTokenField;
            }
            set {
                this.sSOTokenField = value;
            }
        }
        
        /// <remarks/>
        public string ApplicationID {
            get {
                return this.applicationIDField;
            }
            set {
                this.applicationIDField = value;
            }
        }
        
        /// <remarks/>
        public string IPAddress {
            get {
                return this.iPAddressField;
            }
            set {
                this.iPAddressField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gisdata.com/GDi_Ensemble/")]
    public partial class Role {
        
        private string roleIDField;
        
        private string cultureField;
        
        private string descriptionField;
        
        /// <remarks/>
        public string RoleID {
            get {
                return this.roleIDField;
            }
            set {
                this.roleIDField = value;
            }
        }
        
        /// <remarks/>
        public string Culture {
            get {
                return this.cultureField;
            }
            set {
                this.cultureField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetVersionCompletedEventHandler(object sender, GetVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAllApplicationsDataCompletedEventHandler(object sender, GetAllApplicationsDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllApplicationsDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllApplicationsDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ApplicationData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ApplicationData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAllApplicationsData1CompletedEventHandler(object sender, GetAllApplicationsData1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllApplicationsData1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllApplicationsData1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ApplicationData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ApplicationData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAllRolesCompletedEventHandler(object sender, GetAllRolesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Role[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Role[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAllRoles1CompletedEventHandler(object sender, GetAllRoles1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllRoles1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllRoles1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Role[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Role[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAllAplicationsDataAndRolesCompletedEventHandler(object sender, GetAllAplicationsDataAndRolesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllAplicationsDataAndRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllAplicationsDataAndRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ApplicationData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ApplicationData[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public Role[] ApplicationRoles {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Role[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAllAplicationsDataAndRoles1CompletedEventHandler(object sender, GetAllAplicationsDataAndRoles1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllAplicationsDataAndRoles1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllAplicationsDataAndRoles1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ApplicationData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ApplicationData[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public Role[] ApplicationRoles {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Role[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void VerifyTokenCompletedEventHandler(object sender, VerifyTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string SessionCulture {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] AllowedApplicationIDs {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string Header {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string Footer {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public Message[] Messages {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Message[])(this.results[5]));
            }
        }
        
        /// <remarks/>
        public string RoleID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[6]));
            }
        }
        
        /// <remarks/>
        public UserData UserData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserData)(this.results[7]));
            }
        }
        
        /// <remarks/>
        public UserData MasterUserData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserData)(this.results[8]));
            }
        }
        
        /// <remarks/>
        public CompanyData CompanyData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompanyData)(this.results[9]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void VerifyToken1CompletedEventHandler(object sender, VerifyToken1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyToken1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyToken1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string SessionCulture {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] AllowedApplicationIDs {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string Header {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string Footer {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public Message[] Messages {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Message[])(this.results[5]));
            }
        }
        
        /// <remarks/>
        public string RoleID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[6]));
            }
        }
        
        /// <remarks/>
        public int GroupID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[7]));
            }
        }
        
        /// <remarks/>
        public UserData UserData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserData)(this.results[8]));
            }
        }
        
        /// <remarks/>
        public UserData MasterUserData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserData)(this.results[9]));
            }
        }
        
        /// <remarks/>
        public CompanyData CompanyData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompanyData)(this.results[10]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void VerifyTokenAndGetNewCompletedEventHandler(object sender, VerifyTokenAndGetNewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyTokenAndGetNewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyTokenAndGetNewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string SessionCulture {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string NewSSOAuthToken {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string[] AllowedApplicationIDs {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string Header {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public string Footer {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[5]));
            }
        }
        
        /// <remarks/>
        public Message[] Messages {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Message[])(this.results[6]));
            }
        }
        
        /// <remarks/>
        public string RoleID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[7]));
            }
        }
        
        /// <remarks/>
        public UserData UserData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserData)(this.results[8]));
            }
        }
        
        /// <remarks/>
        public UserData MasterUserData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserData)(this.results[9]));
            }
        }
        
        /// <remarks/>
        public CompanyData CompanyData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompanyData)(this.results[10]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void VerifyTokenAndGetNew1CompletedEventHandler(object sender, VerifyTokenAndGetNew1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyTokenAndGetNew1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyTokenAndGetNew1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string SessionCulture {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string NewSSOAuthToken {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string[] AllowedApplicationIDs {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string Header {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public string Footer {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[5]));
            }
        }
        
        /// <remarks/>
        public Message[] Messages {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Message[])(this.results[6]));
            }
        }
        
        /// <remarks/>
        public string RoleID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[7]));
            }
        }
        
        /// <remarks/>
        public int GroupID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[8]));
            }
        }
        
        /// <remarks/>
        public UserData UserData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserData)(this.results[9]));
            }
        }
        
        /// <remarks/>
        public UserData MasterUserData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserData)(this.results[10]));
            }
        }
        
        /// <remarks/>
        public CompanyData CompanyData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompanyData)(this.results[11]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void RefreshSessionCompletedEventHandler(object sender, RefreshSessionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RefreshSessionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RefreshSessionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string NewSSOAuthToken {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetHeaderAndFooterCompletedEventHandler(object sender, GetHeaderAndFooterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHeaderAndFooterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHeaderAndFooterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Header {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string Footer {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetHeaderAndFooter1CompletedEventHandler(object sender, GetHeaderAndFooter1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHeaderAndFooter1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHeaderAndFooter1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Header {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string Footer {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetMessageQueueCompletedEventHandler(object sender, GetMessageQueueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMessageQueueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMessageQueueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Message[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Message[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string NewSSOAuthToken {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetMessageQueue1CompletedEventHandler(object sender, GetMessageQueue1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMessageQueue1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMessageQueue1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Message[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Message[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string NewSSOAuthToken {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetSSOMasterApplicationAuthTokenCompletedEventHandler(object sender, GetSSOMasterApplicationAuthTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSSOMasterApplicationAuthTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSSOMasterApplicationAuthTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string NewSSOAuthToken {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetSSOApplicationAuthTokenCompletedEventHandler(object sender, GetSSOApplicationAuthTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSSOApplicationAuthTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSSOApplicationAuthTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string NewSSOAuthToken {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetGroupUsersCompletedEventHandler(object sender, GetGroupUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGroupUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGroupUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserBasicData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserBasicData[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string NewSSOAuthToken {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591